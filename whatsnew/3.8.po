# Python Documentation Turkish Translation
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-17 01:28+0300\n"
"PO-Revision-Date: 2023-02-03 17:30+0300\n"
"Last-Translator: \n"
"Language-Team: TURKISH <python.docs.tr@gmail.com>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: whatsnew/3.8.rst:3
msgid "What's New In Python 3.8"
msgstr "Python 3.8'deki Yenilikler"

#: whatsnew/3.8.rst:0
msgid "Editor"
msgstr "Editör"

#: whatsnew/3.8.rst:45
msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

#: whatsnew/3.8.rst:47
msgid ""
"This article explains the new features in Python 3.8, compared to 3.7. "
"Python 3.8 was released on October 14, 2019. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Bu makale, 3.7 ile karşılaştırıldığında Python 3.8 'deki yeni özellikleri "
"açıklamaktadır. Tüm ayrıntılar için :ref:`changelog` 'a bakın."

#: whatsnew/3.8.rst:61
msgid "Summary -- Release highlights"
msgstr "Özet -- Sürümün öne çıkanları"

#: whatsnew/3.8.rst:72
msgid "New Features"
msgstr "Yeni Özellikler"

#: whatsnew/3.8.rst:75
msgid "Assignment expressions"
msgstr "Atama ifadeleri"

#: whatsnew/3.8.rst:77
msgid ""
"There is new syntax ``:=`` that assigns values to variables as part of a "
"larger expression. It is affectionately known as \"the walrus operator\" due "
"to its resemblance to `the eyes and tusks of a walrus <https://en.wikipedia."
"org/wiki/Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168).jpg>`_."
msgstr ""
"Daha büyük bir ifadenin parçası olarak değişkenlere değerler atayan yeni "
"sözdizimi ``:=`` var. Bir morsun `gözlerine ve dişlerine benzerliği "
"nedeniyle \"mors operatörü\" olarak bilinir <https://en.wikipedia.org/wiki/"
"Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168).jpg>`_."

#: whatsnew/3.8.rst:82
msgid ""
"In this example, the assignment expression helps avoid calling :func:`len` "
"twice::"
msgstr ""
"Bu örnekte, atama ifadesi :func:`len` öğesini iki kez çağırmaktan kaçınmaya "
"yardımcı olur::"

#: whatsnew/3.8.rst:88
msgid ""
"A similar benefit arises during regular expression matching where match "
"objects are needed twice, once to test whether a match occurred and another "
"to extract a subgroup::"
msgstr ""
"Benzer bir fayda, eşleştirme nesnelerine iki kez ihtiyaç duyulan normal "
"ifade eşleştirme sırasında ortaya çıkar; bir kez bir eşleşme olup olmadığını "
"test etmek ve başka bir kez bir alt grup çıkarmak için::"

#: whatsnew/3.8.rst:96
msgid ""
"The operator is also useful with while-loops that compute a value to test "
"loop termination and then need that same value again in the body of the "
"loop::"
msgstr ""
"Operatör, döngü sonlandırmasını test etmek için bir değer hesaplayan ve "
"ardından döngü gövdesinde aynı değere tekrar ihtiyaç duyan while "
"döngülerinde de kullanışlıdır::"

#: whatsnew/3.8.rst:104
msgid ""
"Another motivating use case arises in list comprehensions where a value "
"computed in a filtering condition is also needed in the expression body::"
msgstr ""
"Başka bir motive edici kullanım durumu, bir filtreleme koşulunda hesaplanan "
"bir değerin ifade gövdesinde de gerekli olduğu liste üreteçlerinde ortaya "
"çıkar::"

#: whatsnew/3.8.rst:111
msgid ""
"Try to limit use of the walrus operator to clean cases that reduce "
"complexity and improve readability."
msgstr ""
"Karmaşıklığı azaltan ve okunabilirliği artıran vakaları temizlemek için mors "
"operatörünün kullanımını sınırlamaya çalışın."

#: whatsnew/3.8.rst:114
msgid "See :pep:`572` for a full description."
msgstr "Tam açıklama için :pep:`572` konusuna bakın."

#: whatsnew/3.8.rst:116
msgid "(Contributed by Emily Morehouse in :issue:`35224`.)"
msgstr "(Emily Morehouse'un :issue:`35224` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:120
msgid "Positional-only parameters"
msgstr "Yalnızca konumsal parametreler"

#: whatsnew/3.8.rst:122
msgid ""
"There is a new function parameter syntax ``/`` to indicate that some "
"function parameters must be specified positionally and cannot be used as "
"keyword arguments.  This is the same notation shown by ``help()`` for C "
"functions annotated with Larry Hastings' :ref:`Argument Clinic <howto-"
"clinic>` tool."
msgstr ""
"Bazı fonksiyon parametrelerinin konumsal olarak belirtilmesi gerektiğini ve "
"anahtar kelime bağımsız değişkenleri olarak kullanılamayacağını belirtmek "
"için yeni bir fonksiyon parametresi sözdizimi ``/`` vardır. Bu, Larry "
"Hastings'in :ref:`Argument Clinic <howto-clinic>` aracıyla açıklanan C "
"fonksiyonları için ``help()`` tarafından gösterilen notasyonunun aynısıdır."

#: whatsnew/3.8.rst:128
msgid ""
"In the following example, parameters *a* and *b* are positional-only, while "
"*c* or *d* can be positional or keyword, and *e* or *f* are required to be "
"keywords::"
msgstr ""
"Aşağıdaki örnekte, *a* ve *b* parametreleri yalnızca konumsaldır, *c* veya "
"*d* konumsal veya anahtar sözcük olabilir ve *e* veya *f*'nin anahtar sözcük "
"olması gerekir::"

#: whatsnew/3.8.rst:135
msgid "The following is a valid call::"
msgstr "Aşağıdaki geçerli bir çağrıdır::"

#: whatsnew/3.8.rst:139
msgid "However, these are invalid calls::"
msgstr "Ancak, bunlar geçersiz çağrılardır::"

#: whatsnew/3.8.rst:144
msgid ""
"One use case for this notation is that it allows pure Python functions to "
"fully emulate behaviors of existing C coded functions.  For example, the "
"built-in :func:`divmod` function does not accept keyword arguments::"
msgstr ""
"Bu gösterim için bir kullanım durumu, saf Python fonksiyonlarının mevcut C "
"kodlu fonksiyonlarının davranışlarını tam olarak taklit etmesine izin "
"vermesidir.  Örneğin, yerleşik :func:`divmod` fonksiyonu, anahtar kelime "
"bağımsız değişkenlerini kabul etmez::"

#: whatsnew/3.8.rst:152
msgid ""
"Another use case is to preclude keyword arguments when the parameter name is "
"not helpful.  For example, the builtin :func:`len` function has the "
"signature ``len(obj, /)``.  This precludes awkward calls such as::"
msgstr ""
"Başka bir kullanım durumu, parametre adı yardımcı olmadığında anahtar kelime "
"bağımsız değişkenlerini engellemektir.  Örneğin, yerleşik :func:`len` işlevi "
"``len(obj, /)`` imzasına sahiptir.  Bu, aşağıdaki gibi garip çağrıları "
"engeller::"

#: whatsnew/3.8.rst:158
msgid ""
"A further benefit of marking a parameter as positional-only is that it "
"allows the parameter name to be changed in the future without risk of "
"breaking client code.  For example, in the :mod:`statistics` module, the "
"parameter name *dist* may be changed in the future.  This was made possible "
"with the following function specification::"
msgstr ""
"Bir parametreyi yalnızca konumsal olarak işaretlemenin başka bir yararı da, "
"parametre adının gelecekte yerel kodunu kırma riski olmadan değiştirilmesine "
"izin vermesidir.  Örneğin, :mod:`statistics` modülünde, *dist* parametre adı "
"gelecekte değiştirilebilir.  Bu, aşağıdaki fonksiyon belirtimi ile mümkün "
"olmuştur::"

#: whatsnew/3.8.rst:167
msgid ""
"Since the parameters to the left of ``/`` are not exposed as possible "
"keywords, the parameters names remain available for use in ``**kwargs``::"
msgstr ""
"``/`` öğesinin solundaki parametreler olası anahtar kelimeler olarak "
"gösterilmediğinden, parametre adları ``**kwargs`` içinde kullanılmaya devam "
"eder::"

#: whatsnew/3.8.rst:176
msgid ""
"This greatly simplifies the implementation of functions and methods that "
"need to accept arbitrary keyword arguments.  For example, here is an excerpt "
"from code in the :mod:`collections` module::"
msgstr ""
"Bu, rasgele anahtar kelime bağımsız değişkenlerini kabul etmesi gereken "
"fonksiyonlarının ve yöntemlerin uygulanmasını büyük ölçüde basitleştirir.  "
"Örneğin, :mod:`collections` modülündeki koddan bir alıntı::"

#: whatsnew/3.8.rst:185
msgid "See :pep:`570` for a full description."
msgstr "Tam açıklama için :pep:`570` 'e bakın."

#: whatsnew/3.8.rst:187
msgid "(Contributed by Pablo Galindo in :issue:`36540`.)"
msgstr "(Pablo Galindo'nun :issue:`36540` 'taki katkısıyla.)"

#: whatsnew/3.8.rst:193
msgid "Parallel filesystem cache for compiled bytecode files"
msgstr "Derlenmiş bayt kodu dosyaları için paralel dosya sistemi önbelleği"

#: whatsnew/3.8.rst:195
msgid ""
"The new :envvar:`PYTHONPYCACHEPREFIX` setting (also available as :option:`-"
"X` ``pycache_prefix``) configures the implicit bytecode cache to use a "
"separate parallel filesystem tree, rather than the default ``__pycache__`` "
"subdirectories within each source directory."
msgstr ""
"Yeni :envvar:`PYTHONPYCACHEPREFIX` ayarı ( :option:`-X` ``pycache_prefix`` "
"olarak da mevcuttur), örtük bayt kodu önbelleğini, içindeki varsayılan "
"``__pycache__`` alt dizinleri yerine ayrı bir paralel dosya sistemi ağacı "
"kullanacak şekilde yapılandırır."

#: whatsnew/3.8.rst:201
msgid ""
"The location of the cache is reported in :data:`sys.pycache_prefix` (:const:"
"`None` indicates the default location in ``__pycache__`` subdirectories)."
msgstr ""
"Önbelleğin konumu :data:`sys.pycache_prefix` içinde rapor edilir (:const:"
"`None`, ``__pycache__`` alt dizinlerindeki varsayılan konumu belirtir)."

#: whatsnew/3.8.rst:205
msgid "(Contributed by Carl Meyer in :issue:`33499`.)"
msgstr "(Carl Meyer'ın :issue:`33499` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:209
msgid "Debug build uses the same ABI as release build"
msgstr "Hata ayıklama derlemesi, yayın derlemesiyle aynı ABI'yi kullanır"

#: whatsnew/3.8.rst:211
msgid ""
"Python now uses the same ABI whether it's built in release or debug mode. On "
"Unix, when Python is built in debug mode, it is now possible to load C "
"extensions built in release mode and C extensions built using the stable ABI."
msgstr ""
"Python artık sürüm veya hata ayıklama modunda oluşturulduğunda aynı ABI'yi "
"kullanıyor. Unix'te, Python hata ayıklama modunda oluşturulduğunda, artık "
"sürüm modunda oluşturulmuş C uzantılarını ve kararlı ABI kullanılarak "
"oluşturulmuş C uzantılarını yüklemek mümkündür."

#: whatsnew/3.8.rst:215
msgid ""
"Release builds and :ref:`debug builds <debug-build>` are now ABI compatible: "
"defining the ``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` "
"macro, which introduces the only ABI incompatibility. The ``Py_TRACE_REFS`` "
"macro, which adds the :func:`sys.getobjects` function and the :envvar:"
"`PYTHONDUMPREFS` environment variable, can be set using the new :option:`./"
"configure --with-trace-refs <--with-trace-refs>` build option. (Contributed "
"by Victor Stinner in :issue:`36465`.)"
msgstr ""
"Release ve :ref:`hata ayıklama derlemeleri <debug-build>` artık ABI ile "
"uyumludur: ``Py_DEBUG`` makrosunu tanımlamak artık tek ABI uyumsuzluğunu "
"ortaya çıkaran ``Py_TRACE_REFS`` makrosunu gerektirmez. :func:`sys."
"getobjects` fonksiyonunu ve :envvar:`PYTHONDUMPREFS` ortam değişkenini "
"ekleyen ``Py_TRACE_REFS`` makrosu, yeni :option:`./configure --with-trace-"
"refs <--with-trace-refs>` derleme seçeneği kullanılarak ayarlanabilir."
"(Victor Stinner'ın' :issue:`36465` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:223
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. It is now possible for a statically linked Python to load a C "
"extension built using a shared library Python. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"Unix'te, Android ve Cygwin dışında C uzantıları artık libpython'a bağlı "
"değildir. Statik olarak bağlı bir Python'un, paylaşılan bir Python kitaplığı "
"kullanılarak oluşturulmuş bir C uzantısını yüklemesi artık mümkün. (Victor "
"Stinner'ın :issue:`21536` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:230
msgid ""
"On Unix, when Python is built in debug mode, import now also looks for C "
"extensions compiled in release mode and for C extensions compiled with the "
"stable ABI. (Contributed by Victor Stinner in :issue:`36722`.)"
msgstr ""
"Unix'te, Python hata ayıklama modunda oluşturulduğunda, import artık yayın "
"modunda derlenen C uzantılarını ve kararlı ABI ile derlenen C uzantılarını "
"da arar. (Victor Stinner'ın :issue:`36722` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:235
msgid ""
"To embed Python into an application, a new ``--embed`` option must be passed "
"to ``python3-config --libs --embed`` to get ``-lpython3.8`` (link the "
"application to libpython). To support both 3.8 and older, try ``python3-"
"config --libs --embed`` first and fallback to ``python3-config --libs`` "
"(without ``--embed``) if the previous command fails."
msgstr ""
"Python'u bir uygulamaya gömmek için, ``-lpython3.8`` (uygulamayı libpython'a "
"bağlamak) elde etmek için ``python3-config --libs --embed`` seçeneğine yeni "
"bir ``--embed`` seçeneği aktarılmalıdır. Hem 3.8 hem de daha eski sürümleri "
"desteklemek için, önce ``python3-config --libs --embed`` seçeneğini deneyin "
"ve önceki komut başarısız olursa ``python3-config --libs`` (``--embed`` "
"olmadan) seçeneğine geri dönün."

#: whatsnew/3.8.rst:241
msgid ""
"Add a pkg-config ``python-3.8-embed`` module to embed Python into an "
"application: ``pkg-config python-3.8-embed --libs`` includes ``-"
"lpython3.8``. To support both 3.8 and older, try ``pkg-config python-X.Y-"
"embed --libs`` first and fallback to ``pkg-config python-X.Y --libs`` "
"(without ``--embed``) if the previous command fails (replace ``X.Y`` with "
"the Python version)."
msgstr ""
"Python'u bir uygulamaya gömmek için bir pkg-config ``python-3.8-embed`` "
"modülü ekleyin: ``pkg-config python-3.8-embed --libs`` ``-lpython3.8`` "
"içerir. Hem 3.8 hem de daha eski sürümleri desteklemek için, önce ``pkg-"
"config python-X.Y-embed --libs`` komutunu deneyin ve önceki komut başarısız "
"olursa ``pkg-config python-X.Y --libs`` (``--embed`` olmadan) komutuna geri "
"dönün (``X.Y`` yerine Python sürümünü yazın)."

#: whatsnew/3.8.rst:247
msgid ""
"On the other hand, ``pkg-config python3.8 --libs`` no longer contains ``-"
"lpython3.8``. C extensions must not be linked to libpython (except on "
"Android and Cygwin, whose cases are handled by the script); this change is "
"backward incompatible on purpose. (Contributed by Victor Stinner in :issue:"
"`36721`.)"
msgstr ""
"Öte yandan, ``pkg-config python3.8 --libs`` artık ``-lpython3.8`` içermiyor. "
"C uzantıları libpython'a bağlanmamalıdır (durumları dize tarafından işlenen "
"Android ve Cygwin hariç); bu değişiklik kasıtlı olarak geriye dönük "
"uyumsuzdur. (Victor Stinner'ın :issue:`36721` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:256
msgid "f-strings support ``=`` for self-documenting expressions and debugging"
msgstr ""
"kendi kendini belgeleyen ifadeler ve hata ayıklama için f-dizeleri ``=`` "
"desteği"

#: whatsnew/3.8.rst:258
msgid ""
"Added an ``=`` specifier to :term:`f-string`\\s. An f-string such as "
"``f'{expr=}'`` will expand to the text of the expression, an equal sign, "
"then the representation of the evaluated expression.  For example:"
msgstr ""
":term:`f-string`\\s için bir ``=`` tanımlayıcısı eklendi. ``f'{expr=}'`` "
"gibi bir f-dizesi, ifade metnine, eşittir işaretine ve ardından "
"değerlendirilen ifadenin temsiline genişler.  Örneğin:"

#: whatsnew/3.8.rst:267
msgid ""
"The usual :ref:`f-string format specifiers <f-strings>` allow more control "
"over how the result of the expression is displayed::"
msgstr ""
"Her zamanki :ref:`f-string biçim belirleyicileri <f-strings>`, ifadenin "
"sonucunun nasıl görüntülendiği üzerinde daha fazla kontrol sağlar::"

#: whatsnew/3.8.rst:274
msgid ""
"The ``=`` specifier will display the whole expression so that calculations "
"can be shown::"
msgstr ""
"``=`` belirleyicisi, hesaplamaların gösterilebilmesi için ifadenin tamamını "
"görüntüler::"

#: whatsnew/3.8.rst:280
msgid "(Contributed by Eric V. Smith and Larry Hastings in :issue:`36817`.)"
msgstr ""
"(Eric V. Smith ve Larry Hastings'in :issue:`36817` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:284
msgid "PEP 578: Python Runtime Audit Hooks"
msgstr "PEP 578: Python Çalışma Zamanı Denetim Kancaları"

#: whatsnew/3.8.rst:286
msgid ""
"The PEP adds an Audit Hook and Verified Open Hook. Both are available from "
"Python and native code, allowing applications and frameworks written in pure "
"Python code to take advantage of extra notifications, while also allowing "
"embedders or system administrators to deploy builds of Python where auditing "
"is always enabled."
msgstr ""
"PEP, Denetim Kancası ve Doğrulanmış Açık Kanca ekler. Her ikisi de Python ve "
"yerel koddan edinilebilir, saf Python kodunda yazılmış uygulamaların ve "
"çerçevelerin ekstra bildirimlerden yararlanmasına izin verirken, aynı "
"zamanda gömücülerin veya sistem yöneticilerinin denetimin her zaman etkin "
"olduğu Python yapılarını dağıtmasına izin verir."

#: whatsnew/3.8.rst:292
msgid "See :pep:`578` for full details."
msgstr "Tüm ayrıntılar için bkz. :pep:`578`."

#: whatsnew/3.8.rst:296
msgid "PEP 587: Python Initialization Configuration"
msgstr "PEP 587: Python Başlatma Yapılandırması"

#: whatsnew/3.8.rst:298
msgid ""
"The :pep:`587` adds a new C API to configure the Python Initialization "
"providing finer control on the whole configuration and better error "
"reporting."
msgstr ""
":pep:`587`, tüm yapılandırma üzerinde daha hassas kontrol ve daha iyi hata "
"raporlama sağlayan Python Başlatmayı yapılandırmak için yeni bir C API ekler."

#: whatsnew/3.8.rst:301
msgid "New structures:"
msgstr "Yeni yapılar:"

#: whatsnew/3.8.rst:303
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: whatsnew/3.8.rst:304
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: whatsnew/3.8.rst:305
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: whatsnew/3.8.rst:306
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: whatsnew/3.8.rst:308
msgid "New functions:"
msgstr "Yeni fonksiyonlar:"

#: whatsnew/3.8.rst:310
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: whatsnew/3.8.rst:311
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: whatsnew/3.8.rst:312
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: whatsnew/3.8.rst:313
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: whatsnew/3.8.rst:314
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: whatsnew/3.8.rst:315
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: whatsnew/3.8.rst:316
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: whatsnew/3.8.rst:317
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: whatsnew/3.8.rst:318
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: whatsnew/3.8.rst:319
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: whatsnew/3.8.rst:320
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: whatsnew/3.8.rst:321
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: whatsnew/3.8.rst:322
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: whatsnew/3.8.rst:323
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: whatsnew/3.8.rst:324
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: whatsnew/3.8.rst:325
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: whatsnew/3.8.rst:326
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: whatsnew/3.8.rst:327
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: whatsnew/3.8.rst:328
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: whatsnew/3.8.rst:329
msgid ":c:func:`Py_BytesMain`"
msgstr ":c:func:`Py_BytesMain`"

#: whatsnew/3.8.rst:330
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: whatsnew/3.8.rst:331
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: whatsnew/3.8.rst:332
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: whatsnew/3.8.rst:333
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: whatsnew/3.8.rst:334
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: whatsnew/3.8.rst:335
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: whatsnew/3.8.rst:337
msgid ""
"This PEP also adds ``_PyRuntimeState.preconfig`` (:c:type:`PyPreConfig` "
"type) and ``PyInterpreterState.config`` (:c:type:`PyConfig` type) fields to "
"these internal structures. ``PyInterpreterState.config`` becomes the new "
"reference configuration, replacing global configuration variables and other "
"private variables."
msgstr ""
"Bu PEP ayrıca bu iç yapılara ``_PyRuntimeState.preconfig`` (:c:type:"
"`PyPreConfig` type) ve ``PyInterpreterState.config`` (:c:type:`PyConfig` "
"type) alanlarını ekler. ``PyInterpreterState.config``, global yapılandırma "
"değişkenlerinin ve diğer özel değişkenlerin yerini alarak yeni referans "
"yapılandırması haline gelir."

#: whatsnew/3.8.rst:343
msgid ""
"See :ref:`Python Initialization Configuration <init-config>` for the "
"documentation."
msgstr ""
"Belgeler için :ref:`Python Başlatma Yapılandırması <init-config>` konusuna "
"bakın."

#: whatsnew/3.8.rst:346
msgid "See :pep:`587` for a full description."
msgstr "Tam açıklama için :pep:`587` konusuna bakın."

#: whatsnew/3.8.rst:348
msgid "(Contributed by Victor Stinner in :issue:`36763`.)"
msgstr "(Victor Stinner'ın :issue:`36763` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:352
msgid "PEP 590: Vectorcall: a fast calling protocol for CPython"
msgstr "PEP 590: Vectorcall: CPython için hızlı arama protokolü"

#: whatsnew/3.8.rst:354
msgid ""
":ref:`vectorcall` is added to the Python/C API. It is meant to formalize "
"existing optimizations which were already done for various classes. Any :ref:"
"`static type <static-types>` implementing a callable can use this protocol."
msgstr ""
"Python/C API'sine :ref:`vectorcall` eklendi. Çeşitli sınıflar için zaten "
"yapılmış olan mevcut optimizasyonları resmileştirmeyi amaçlamaktadır. Bir "
"çağrılabilir uygulayan herhangi bir :ref:`static type <static-types>` bu "
"protokolü kullanabilir."

#: whatsnew/3.8.rst:360
msgid ""
"This is currently provisional. The aim is to make it fully public in Python "
"3.9."
msgstr ""
"Bu şu anda geçicidir. Amaç, Python 3.9 'da tamamen halka açık hale "
"getirmektir."

#: whatsnew/3.8.rst:363
msgid "See :pep:`590` for a full description."
msgstr "Tam açıklama için :pep:`590` 'a bakın."

#: whatsnew/3.8.rst:365
msgid ""
"(Contributed by Jeroen Demeyer, Mark Shannon and Petr Viktorin in :issue:"
"`36974`.)"
msgstr ""
"(Jeroen Demeyer, Mark Shannon ve Petr Viktorin'in katkılarıyla :issue:"
"`36974`.)"

#: whatsnew/3.8.rst:369
msgid "Pickle protocol 5 with out-of-band data buffers"
msgstr "Bant dışı veri tamponlarıyla Pickle protokolü 5"

#: whatsnew/3.8.rst:371
msgid ""
"When :mod:`pickle` is used to transfer large data between Python processes "
"in order to take advantage of multi-core or multi-machine processing, it is "
"important to optimize the transfer by reducing memory copies, and possibly "
"by applying custom techniques such as data-dependent compression."
msgstr ""
"Çok çekirdekli veya çok makineli işlemeden yararlanmak amacıyla Python "
"süreçleri arasında büyük verileri aktarmak için :mod:`pickle` "
"kullanıldığında, bellek kopyalarını azaltarak ve muhtemelen veriye bağlı "
"sıkıştırma gibi özel teknikler uygulayarak aktarımı optimize etmek önemlidir."

#: whatsnew/3.8.rst:376
msgid ""
"The :mod:`pickle` protocol 5 introduces support for out-of-band buffers "
"where :pep:`3118`-compatible data can be transmitted separately from the "
"main pickle stream, at the discretion of the communication layer."
msgstr ""
":mod:`pickle` protokolü 5, :pep:`3118` uyumlu verilerin iletişim katmanının "
"takdirine bağlı olarak ana pickle akışından ayrı olarak iletilebildiği bant "
"dışı tamponlar için destek sunar."

#: whatsnew/3.8.rst:380
msgid "See :pep:`574` for a full description."
msgstr "Tam açıklama için :pep:`574` 'e bakın."

#: whatsnew/3.8.rst:382
msgid "(Contributed by Antoine Pitrou in :issue:`36785`.)"
msgstr "(Antoine Pitrou'nun :issue:`36785` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:386
msgid "Other Language Changes"
msgstr "Diğer Dil Değişiklikleri"

#: whatsnew/3.8.rst:388
msgid ""
"A :keyword:`continue` statement was illegal in the :keyword:`finally` clause "
"due to a problem with the implementation.  In Python 3.8 this restriction "
"was lifted. (Contributed by Serhiy Storchaka in :issue:`32489`.)"
msgstr ""
"Bir :keyword:`continue` ifadesi, uygulamadaki bir sorun nedeniyle :keyword:"
"`finally` cümlesinde yasadışı idi.  Python 3.8'de bu kısıtlama kaldırıldı. "
"(Serhiy Storchaka'nın :issue:`32489` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:393
msgid ""
"The :class:`bool`, :class:`int`, and :class:`fractions.Fraction` types now "
"have an :meth:`~int.as_integer_ratio` method like that found in :class:"
"`float` and :class:`decimal.Decimal`.  This minor API extension makes it "
"possible to write ``numerator, denominator = x.as_integer_ratio()`` and have "
"it work across multiple numeric types. (Contributed by Lisa Roach in :issue:"
"`33073` and Raymond Hettinger in :issue:`37819`.)"
msgstr ""
":class:`bool`, :class:`int` ve :class:`fractions.Fraction` türleri artık :"
"class:`float` ve :class:`decimal.Decimal` türlerinde olduğu gibi bir :meth:"
"`~int.as_integer_ratio` yöntemine sahiptir.  Bu küçük API uzantısı "
"``numerator, denominator = x.as_integer_ratio()`` yazmayı ve bunun birden "
"fazla sayısal türde çalışmasını mümkün kılmaktadır. (Lisa Roach tarafından :"
"issue:`33073` ve Raymond Hettinger tarafından :issue:`37819` ile katkıda "
"bulunulmuştur)"

#: whatsnew/3.8.rst:401
msgid ""
"Constructors of :class:`int`, :class:`float` and :class:`complex` will now "
"use the :meth:`~object.__index__` special method, if available and the "
"corresponding method :meth:`~object.__int__`, :meth:`~object.__float__` or :"
"meth:`~object.__complex__` is not available. (Contributed by Serhiy "
"Storchaka in :issue:`20092`.)"
msgstr ""
":class:`int`, :class:`float` ve :class:`complex` kurucuları artık :meth:"
"`~object.__index__` özel yöntemini kullanacak, eğer mevcutsa ve ilgili "
"yöntem :meth:`~object.__int__`, :meth:`~object.__float__` veya mevcut "
"değilse :meth:`~object.__complex__` . (Serhiy Storchaka'nın :issue:`20092` "
"'deki katkısıyla.)"

#: whatsnew/3.8.rst:407
msgid ""
"Added support of ``\\N{name}`` escapes in :mod:`regular expressions <re>`::"
msgstr ""
":mod:`regular expressions <re>` içine ``\\N{name}`` kaçış desteği eklendi::"

#: whatsnew/3.8.rst:414
msgid ""
"(Contributed by Jonathan Eunice and Serhiy Storchaka in :issue:`30688`.)"
msgstr ""
"(Jonathan Eunice ve Serhiy Storchaka tarafından :issue:`30688` 'de katkıda "
"bulunulmuştur.)"

#: whatsnew/3.8.rst:416
msgid ""
"Dict and dictviews are now iterable in reversed insertion order using :func:"
"`reversed`. (Contributed by Rémi Lapeyre in :issue:`33462`.)"
msgstr ""
"Dict ve dictviews artık :func:`reversed` kullanılarak tersine çevrilmiş "
"ekleme sırasına göre yinelenebilir. (Rémi Lapeyre'nin :issue:`33462` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:419
msgid ""
"The syntax allowed for keyword names in function calls was further "
"restricted. In particular, ``f((keyword)=arg)`` is no longer allowed. It was "
"never intended to permit more than a bare name on the left-hand side of a "
"keyword argument assignment term. (Contributed by Benjamin Peterson in :"
"issue:`34641`.)"
msgstr ""
"Fonksiyon çağrılarında anahtar kelime isimleri için izin verilen sözdizimi "
"daha da kısıtlandı. Özellikle, ``f((keyword)=arg)`` ifadesine artık izin "
"verilmemektedir. Bir anahtar kelime argüman atama teriminin sol tarafında "
"çıplak bir isimden daha fazlasına izin verilmesi asla amaçlanmamıştır. "
"(Benjamin Peterson'un :issue:`34641` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:425
msgid ""
"Generalized iterable unpacking in :keyword:`yield` and :keyword:`return` "
"statements no longer requires enclosing parentheses. This brings the *yield* "
"and *return* syntax into better agreement with normal assignment syntax::"
msgstr ""
":keyword:`yield` ve :keyword:`return` ifadelerinde genelleştirilmiş "
"yinelenebilir paket açma artık parantez içine alma gerektirmez. Bu, *yield* "
"ve *return* sözdizimini normal atama sözdizimiyle daha iyi uyumlu hale "
"getirir::"

#: whatsnew/3.8.rst:437
msgid "(Contributed by David Cuthbert and Jordan Chapman in :issue:`32117`.)"
msgstr ""
"(David Cuthbert ve Jordan Chapman'ın :issue:`32117` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:439
msgid ""
"When a comma is missed in code such as ``[(10, 20) (30, 40)]``, the compiler "
"displays a :exc:`SyntaxWarning` with a helpful suggestion. This improves on "
"just having a :exc:`TypeError` indicating that the first tuple was not "
"callable.  (Contributed by Serhiy Storchaka in :issue:`15248`.)"
msgstr ""
"``[(10, 20) (30, 40)]`` gibi bir kodda virgül atlandığında, derleyici "
"yardımcı bir öneriyle birlikte bir :exc:`SyntaxWarning` görüntüler. Bu, "
"sadece ilk tuple'ın çağrılabilir olmadığını belirten bir :exc:`TypeError` "
"olmasıyla gelişir.  (Serhiy Storchaka'nın :issue:`15248` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:445
msgid ""
"Arithmetic operations between subclasses of :class:`datetime.date` or :class:"
"`datetime.datetime` and :class:`datetime.timedelta` objects now return an "
"instance of the subclass, rather than the base class. This also affects the "
"return type of operations whose implementation (directly or indirectly) "
"uses :class:`datetime.timedelta` arithmetic, such as :meth:`~datetime."
"datetime.astimezone`. (Contributed by Paul Ganssle in :issue:`32417`.)"
msgstr ""
":class:`datetime.date` veya :class:`datetime.datetime` ve :class:`datetime."
"timedelta` nesnelerinin alt sınıfları arasındaki aritmetik işlemler artık "
"temel sınıf yerine alt sınıfın bir örneğini döndürmektedir. Bu, :meth:"
"`~datetime.datetime.astimezone` gibi uygulaması (doğrudan veya dolaylı "
"olarak) :class:`datetime.timedelta` aritmetiğini kullanan işlemlerin dönüş "
"türünü de etkiler. (Paul Ganssle tarafından :issue:`32417` ile katkıda "
"bulunulmuştur)"

#: whatsnew/3.8.rst:453
msgid ""
"When the Python interpreter is interrupted by Ctrl-C (SIGINT) and the "
"resulting :exc:`KeyboardInterrupt` exception is not caught, the Python "
"process now exits via a SIGINT signal or with the correct exit code such "
"that the calling process can detect that it died due to a Ctrl-C.  Shells on "
"POSIX and Windows use this to properly terminate scripts in interactive "
"sessions. (Contributed by Google via Gregory P. Smith in :issue:`1054041`.)"
msgstr ""
"Python yorumlayıcısı Ctrl-C (SIGINT) tarafından kesintiye uğradığında ve "
"ortaya çıkan :exc:`KeyboardInterrupt` istisnası yakalanmadığında, Python "
"işlemi artık bir SIGINT sinyali ile veya çağıran işlemin Ctrl-C nedeniyle "
"öldüğünü algılayabileceği şekilde doğru çıkış koduyla çıkar.  POSIX ve "
"Windows üzerindeki kabuklar, etkileşimli oturumlardaki komut dosyalarını "
"düzgün bir şekilde sonlandırmak için bunu kullanır. (Google tarafından "
"Gregory P. Smith aracılığıyla :issue:`1054041` 'de katkıda bulunulmuştur)"

#: whatsnew/3.8.rst:460
msgid ""
"Some advanced styles of programming require updating the :class:`types."
"CodeType` object for an existing function.  Since code objects are "
"immutable, a new code object needs to be created, one that is modeled on the "
"existing code object.  With 19 parameters, this was somewhat tedious.  Now, "
"the new ``replace()`` method makes it possible to create a clone with a few "
"altered parameters."
msgstr ""
"Bazı gelişmiş programlama stilleri, mevcut bir fonksiyon için :class:`types."
"CodeType` nesnesinin güncellenmesini gerektirir.  Kod nesneleri değişmez "
"olduğundan, mevcut kod nesnesini model alan yeni bir kod nesnesi "
"oluşturulması gerekir.  19 parametre ile bu biraz sıkıcıydı.  Şimdi, yeni "
"``replace()`` yöntemi, birkaç değiştirilmiş parametre ile bir klon "
"oluşturmayı mümkün kılıyor."

#: whatsnew/3.8.rst:467
msgid ""
"Here's an example that alters the :func:`statistics.mean` function to "
"prevent the *data* parameter from being used as a keyword argument::"
msgstr ""
"İşte :func:`statistics.mean` fonksiyonunu değiştirerek *data* parametresinin "
"bir anahtar kelime argümanı olarak kullanılmasını engelleyen bir örnek::"

#: whatsnew/3.8.rst:479
msgid "(Contributed by Victor Stinner in :issue:`37032`.)"
msgstr "(Victor Stinner'ın :issue:`37032` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:481
msgid ""
"For integers, the three-argument form of the :func:`pow` function now "
"permits the exponent to be negative in the case where the base is relatively "
"prime to the modulus. It then computes a modular inverse to the base when "
"the exponent is ``-1``, and a suitable power of that inverse for other "
"negative exponents.  For example, to compute the `modular multiplicative "
"inverse <https://en.wikipedia.org/wiki/Modular_multiplicative_inverse>`_ of "
"38 modulo 137, write::"
msgstr ""
"Tamsayılar için, :func:`pow` fonksiyonunun üç argümanlı formu artık tabanın "
"modüle göre asal olduğu durumda üssün negatif olmasına izin vermektedir. "
"Daha sonra, üs ``-1`` olduğunda tabanın modüler bir tersini ve diğer negatif "
"üsler için bu tersin uygun bir kuvvetini hesaplar.  Örneğin, 38 modulo "
"137`nin `modüler çarpımsal tersini <https://en.wikipedia.org/wiki/"
"Modular_multiplicative_inverse>`_ hesaplamak için şunu yazın::"

#: whatsnew/3.8.rst:495
msgid ""
"Modular inverses arise in the solution of `linear Diophantine equations "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. For example, to find "
"integer solutions for ``4258𝑥 + 147𝑦 = 369``, first rewrite as ``4258𝑥 ≡ 369 "
"(mod 147)`` then solve:"
msgstr ""
"Modüler tersler, `lineer Diophantine denklemlerinin <https://en.wikipedia."
"org/wiki/Diophantine_equation>`_ çözümünde ortaya çıkar. Örneğin, ``4258𝑥 + "
"147𝑦 = 369`` tamsayı çözümlerini bulmak için, önce ``4258𝑥 ≡ 369 (mod 147)`` "
"olarak yeniden yazın ve sonra çözün:"

#: whatsnew/3.8.rst:505
msgid "(Contributed by Mark Dickinson in :issue:`36027`.)"
msgstr "(Mark Dickinson'ın tarafından :issue:`36027` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:507
msgid ""
"Dict comprehensions have been synced-up with dict literals so that the key "
"is computed first and the value second::"
msgstr ""
"Dict kavramaları dict değişmezleri ile senkronize edilmiştir, böylece "
"anahtar ilk olarak ve değer ikinci olarak hesaplanır::"

#: whatsnew/3.8.rst:522
msgid ""
"The guaranteed execution order is helpful with assignment expressions "
"because variables assigned in the key expression will be available in the "
"value expression::"
msgstr ""
"Garantili yürütme sırası atama ifadelerinde yardımcı olur çünkü anahtar "
"ifadesinde atanan değişkenler değer ifadesinde kullanılabilir olacaktır::"

#: whatsnew/3.8.rst:532
msgid "(Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr "(Jörn Heissler'ın :issue:`35224` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:534
msgid ""
"The :meth:`object.__reduce__` method can now return a tuple from two to six "
"elements long. Formerly, five was the limit.  The new, optional sixth "
"element is a callable with a ``(obj, state)`` signature.  This allows the "
"direct control over the state-updating behavior of a specific object.  If "
"not *None*, this callable will have priority over the object's :meth:"
"`~__setstate__` method. (Contributed by Pierre Glaser and Olivier Grisel in :"
"issue:`35900`.)"
msgstr ""
":meth:`object.__reduce__` yöntemi artık iki ila altı eleman uzunluğunda bir "
"tuple döndürebilir. Eskiden sınır beşti.  Yeni, isteğe bağlı altıncı eleman "
"``(obj, state)`` imzasına sahip bir çağrılabilirdir.  Bu, belirli bir "
"nesnenin durum güncelleme davranışı üzerinde doğrudan kontrol sağlar.  Eğer "
"*None* değilse, bu çağrılabilir öğe nesnenin :meth:`~__setstate__` yöntemine "
"göre önceliğe sahip olacaktır. (Pierre Glaser ve Olivier Grisel'in :issue:"
"`35900` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:543
msgid "New Modules"
msgstr "Yeni Modüller"

#: whatsnew/3.8.rst:545
msgid ""
"The new :mod:`importlib.metadata` module provides (provisional) support for "
"reading metadata from third-party packages.  For example, it can extract an "
"installed package's version number, list of entry points, and more::"
msgstr ""
"Yeni :mod:`importlib.metadata` modülü, üçüncü taraf paketlerden meta "
"verileri okumak için (geçici) destek sağlar.  Örneğin, yüklü bir paketin "
"sürüm numarasını, giriş noktalarının listesini ve daha fazlasını "
"çıkarabilir::"

#: whatsnew/3.8.rst:564
msgid "(Contributed by Barry Warsaw and Jason R. Coombs in :issue:`34632`.)"
msgstr ""
"(Barry Warsaw ve Jason R. Coombs'un :issue:`34632` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:568
msgid "Improved Modules"
msgstr "Geliştirilmiş Modüller"

#: whatsnew/3.8.rst:571
msgid "ast"
msgstr "ast"

#: whatsnew/3.8.rst:573
msgid ""
"AST nodes now have ``end_lineno`` and ``end_col_offset`` attributes, which "
"give the precise location of the end of the node.  (This only applies to "
"nodes that have ``lineno`` and ``col_offset`` attributes.)"
msgstr ""
"AST düğümleri artık düğümün sonunun kesin konumunu veren ``end_lineno`` ve "
"``end_col_offset`` niteliklerine sahiptir.  (Bu sadece ``lineno`` ve "
"``col_offset`` niteliklerine sahip düğümler için geçerlidir)"

#: whatsnew/3.8.rst:577
msgid ""
"New function :func:`ast.get_source_segment` returns the source code for a "
"specific AST node."
msgstr ""
"Yeni fonksiyon :func:`ast.get_source_segment` belirli bir AST düğümü için "
"kaynak kodunu döndürür."

#: whatsnew/3.8.rst:580
msgid "(Contributed by Ivan Levkivskyi in :issue:`33416`.)"
msgstr "(Ivan Levkivskyi'nin :issue:`33416` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:582
msgid "The :func:`ast.parse` function has some new flags:"
msgstr ":func:`ast.parse` fonksiyonu bazı yeni bayraklara sahiptir:"

#: whatsnew/3.8.rst:584
msgid ""
"``type_comments=True`` causes it to return the text of :pep:`484` and :pep:"
"`526` type comments associated with certain AST nodes;"
msgstr ""
"``type_comments=True`` , belirli AST düğümleriyle ilişkili :pep:`484` ve :"
"pep:`526` tipi yorumların metnini döndürmesine neden olur;"

#: whatsnew/3.8.rst:587
msgid ""
"``mode='func_type'`` can be used to parse :pep:`484` \"signature type "
"comments\" (returned for function definition AST nodes);"
msgstr ""
"``mode='func_type'``, :pep:`484` \"imza tipi yorumlarını\" (fonksiyon tanımı "
"AST düğümleri için döndürülür) ayrıştırmak için kullanılabilir;"

#: whatsnew/3.8.rst:590
msgid ""
"``feature_version=(3, N)`` allows specifying an earlier Python 3 version.  "
"For example, ``feature_version=(3, 4)`` will treat :keyword:`async` and :"
"keyword:`await` as non-reserved words."
msgstr ""
"``feature_version=(3, N)`` daha önceki bir Python 3 sürümünü belirtmeye izin "
"verir.  Örneğin, ``feature_version=(3, 4)``, :keyword:`async` ve :keyword:"
"`await` sözcüklerini rezerve edilmemiş sözcükler olarak ele alacaktır."

#: whatsnew/3.8.rst:594
msgid "(Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr "(Guido van Rossum'un :issue:`35766` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:598
msgid "asyncio"
msgstr "asyncio"

#: whatsnew/3.8.rst:600
msgid ""
":func:`asyncio.run` has graduated from the provisional to stable API. This "
"function can be used to execute a :term:`coroutine` and return the result "
"while automatically managing the event loop. For example::"
msgstr ""
":func:`asyncio.run` geçici API'den kararlı API'ye geçiş yaptı. Bu fonksiyon, "
"bir :term:`coroutine` yürütmek ve olay döngüsünü otomatik olarak yönetirken "
"sonucu döndürmek için kullanılabilir. Örneğin::"

#: whatsnew/3.8.rst:612
msgid "This is *roughly* equivalent to::"
msgstr "Bu, *kabaca* şuna eşdeğerdir::"

#: whatsnew/3.8.rst:629
msgid ""
"The actual implementation is significantly more complex. Thus, :func:"
"`asyncio.run` should be the preferred way of running asyncio programs."
msgstr ""
"Gerçek uygulama önemli ölçüde daha karmaşıktır. Bu nedenle, :func:`asyncio."
"run` asyncio programlarını çalıştırmak için tercih edilen yol olmalıdır."

#: whatsnew/3.8.rst:632
msgid "(Contributed by Yury Selivanov in :issue:`32314`.)"
msgstr "(Yury Selivanov'un :issue:`32314` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:634
msgid ""
"Running ``python -m asyncio`` launches a natively async REPL.  This allows "
"rapid experimentation with code that has a top-level :keyword:`await`.  "
"There is no longer a need to directly call ``asyncio.run()`` which would "
"spawn a new event loop on every invocation:"
msgstr ""
"``python -m asyncio`` çalıştırıldığında yerel bir async REPL başlatılır.  "
"Bu, üst düzey bir :keyword:`await` içeren kodla hızlı denemeler yapılmasına "
"olanak tanır.  Artık her çağrıda yeni bir olay döngüsü oluşturacak ``asyncio."
"run()`` fonksiyonunu doğrudan çağırmaya gerek yoktur:"

#: whatsnew/3.8.rst:649
msgid "(Contributed by Yury Selivanov in :issue:`37028`.)"
msgstr "(Yury Selivanov'un :issue:`37028` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1967
msgid ""
"The exception :class:`asyncio.CancelledError` now inherits from :class:"
"`BaseException` rather than :class:`Exception` and no longer inherits from :"
"class:`concurrent.futures.CancelledError`. (Contributed by Yury Selivanov "
"in :issue:`32528`.)"
msgstr ""
"İstisna :class:`asyncio.CancelledError` artık :class:`Exception` yerine :"
"class:`BaseException` 'dan miras alıyor ve artık :class:`concurrent.futures."
"CancelledError` 'dan miras almıyor. (Yury Selivanov'un :issue:`32528` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:656
msgid ""
"On Windows, the default event loop is now :class:`~asyncio."
"ProactorEventLoop`. (Contributed by Victor Stinner in :issue:`34687`.)"
msgstr ""
"Windows'ta, varsayılan olay döngüsü artık :class:`~asyncio."
"ProactorEventLoop` şeklindedir. (Victor Stinner'ın :issue:`34687` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:659
msgid ""
":class:`~asyncio.ProactorEventLoop` now also supports UDP. (Contributed by "
"Adam Meily and Andrew Svetlov in :issue:`29883`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` artık UDP'yi de destekliyor. (Adam Meily "
"ve Andrew Svetlov'ın :issue:`29883` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:662
msgid ""
":class:`~asyncio.ProactorEventLoop` can now be interrupted by :exc:"
"`KeyboardInterrupt` (\"CTRL+C\"). (Contributed by Vladimir Matveev in :issue:"
"`23057`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` artık :exc:`KeyboardInterrupt` "
"(\"CTRL+C\") ile kesilebilir. (Vladimir Matveev'in :issue:`23057` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:666
msgid ""
"Added :meth:`asyncio.Task.get_coro` for getting the wrapped coroutine within "
"an :class:`asyncio.Task`. (Contributed by Alex Grönholm in :issue:`36999`.)"
msgstr ""
"Bir :class:`asyncio.Task` içindeki sarılmış korutini almak için :meth:"
"`asyncio.Task.get_coro` eklendi. (Alex Grönholm'ın :issue:`36999` 'daki "
"katkısıyla.)"

#: whatsnew/3.8.rst:670
msgid ""
"Asyncio tasks can now be named, either by passing the ``name`` keyword "
"argument to :func:`asyncio.create_task` or the :meth:`~asyncio.loop."
"create_task` event loop method, or by calling the :meth:`~asyncio.Task."
"set_name` method on the task object. The task name is visible in the "
"``repr()`` output of :class:`asyncio.Task` and can also be retrieved using "
"the :meth:`~asyncio.Task.get_name` method. (Contributed by Alex Grönholm in :"
"issue:`34270`.)"
msgstr ""
"Asyncio görevleri artık :func:`asyncio.create_task` veya :meth:`~asyncio."
"loop.create_task` olay döngüsü yöntemine ``name`` anahtar sözcük argümanı "
"geçirilerek ya da görev nesnesi üzerinde :meth:`~asyncio.Task.set_name` "
"yöntemi çağrılarak adlandırılabilir. Görev adı :class:`asyncio.Task` "
"metodunun ``repr()`` çıktısında görülebilir ve :meth:`~asyncio.Task."
"get_name` metodu kullanılarak da alınabilir. (Alex Grönholm'ın :issue:"
"`34270` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:678
msgid ""
"Added support for `Happy Eyeballs <https://en.wikipedia.org/wiki/"
"Happy_Eyeballs>`_ to :func:`asyncio.loop.create_connection`. To specify the "
"behavior, two new parameters have been added: *happy_eyeballs_delay* and "
"*interleave*. The Happy Eyeballs algorithm improves responsiveness in "
"applications that support IPv4 and IPv6 by attempting to simultaneously "
"connect using both. (Contributed by twisteroid ambassador in :issue:`33530`.)"
msgstr ""
":func:`asyncio.loop.create_connection` 'a `Happy Eyeballs <https://en."
"wikipedia.org/wiki/Happy_Eyeballs>`_ desteği eklendi. Davranışı belirtmek "
"için iki yeni parametre eklendi: *happy_eyeballs_delay* ve *interleave*. "
"Happy Eyeballs algoritması, IPv4 ve IPv6'yı destekleyen uygulamalarda, her "
"ikisini de kullanarak aynı anda bağlanmaya çalışarak yanıt verebilirliği "
"artırır. (twisteroid ambassador'un :issue:`33530` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:688
msgid "builtins"
msgstr "builtins"

#: whatsnew/3.8.rst:690
msgid ""
"The :func:`compile` built-in has been improved to accept the ``ast."
"PyCF_ALLOW_TOP_LEVEL_AWAIT`` flag. With this new flag passed, :func:"
"`compile` will allow top-level ``await``, ``async for`` and ``async with`` "
"constructs that are usually considered invalid syntax. Asynchronous code "
"object marked with the ``CO_COROUTINE`` flag may then be returned. "
"(Contributed by Matthias Bussonnier in :issue:`34616`)"
msgstr ""
":func:`compile` yerleşik yapısı ``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` bayrağını "
"kabul edecek şekilde geliştirilmiştir. Bu yeni bayrak geçildiğinde, :func:"
"`compile` genellikle geçersiz sözdizimi olarak kabul edilen üst düzey "
"``await``, ``async for`` ve ``async with`` yapılarına izin verecektir. Daha "
"sonra ``CO_COROUTINE`` bayrağı ile işaretlenmiş asenkron kod nesnesi "
"döndürülebilir. (Matthias Bussonnier'ın :issue:`34616` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:699
msgid "collections"
msgstr "collections"

#: whatsnew/3.8.rst:701
msgid ""
"The :meth:`~collections.somenamedtuple._asdict` method for :func:"
"`collections.namedtuple` now returns a :class:`dict` instead of a :class:"
"`collections.OrderedDict`. This works because regular dicts have guaranteed "
"ordering since Python 3.7. If the extra features of :class:`OrderedDict` are "
"required, the suggested remediation is to cast the result to the desired "
"type: ``OrderedDict(nt._asdict())``. (Contributed by Raymond Hettinger in :"
"issue:`35864`.)"
msgstr ""
":func:`collections.namedtuple` için :meth:`~collections.somenamedtuple."
"_asdict` yöntemi artık :class:`collections.OrderedDict` yerine bir :class:"
"`dict` döndürüyor. Bu işe yarıyor çünkü normal dictler Python 3.7'den beri "
"garantili sıralamaya sahip. Eğer :class:`OrderedDict` 'in ekstra özellikleri "
"gerekiyorsa, önerilen çözüm sonucu istenen türe dönüştürmektir: "
"``OrderedDict(nt._asdict())``. (Raymond Hettinger'ın :issue:`35864` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:711
msgid "cProfile"
msgstr "cProfile"

#: whatsnew/3.8.rst:713
msgid ""
"The :class:`cProfile.Profile <profile.Profile>` class can now be used as a "
"context manager. Profile a block of code by running::"
msgstr ""
":class:`cProfile.Profile <profile.Profile>` sınıfı artık bir bağlam "
"yöneticisi olarak kullanılabilir. Çalıştırarak bir kod bloğunun profilini "
"oluşturun::"

#: whatsnew/3.8.rst:722
msgid "(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr "(Scott Sanderson'ın :issue:`29235` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:726
msgid "csv"
msgstr "csv"

#: whatsnew/3.8.rst:728
msgid ""
"The :class:`csv.DictReader` now returns instances of :class:`dict` instead "
"of a :class:`collections.OrderedDict`.  The tool is now faster and uses less "
"memory while still preserving the field order. (Contributed by Michael Selik "
"in :issue:`34003`.)"
msgstr ""
":class:`csv.DictReader` artık :class:`collections.OrderedDict` yerine :class:"
"`dict` örneklerini döndürüyor.  Araç artık daha hızlı ve alan sırasını "
"korurken daha az bellek kullanıyor. (Michael Selik' in :issue:`34003` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:735
msgid "curses"
msgstr "curses"

#: whatsnew/3.8.rst:737
msgid ""
"Added a new variable holding structured version information for the "
"underlying ncurses library: :data:`~curses.ncurses_version`. (Contributed by "
"Serhiy Storchaka in :issue:`31680`.)"
msgstr ""
"Temel ncurses kütüphanesi için yapılandırılmış sürüm bilgilerini tutan yeni "
"bir değişken eklendi: :data:`~curses.ncurses_version`. (Serhiy "
"Storchaka'nın :issue:`31680` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:743
msgid "ctypes"
msgstr "ctypes"

#: whatsnew/3.8.rst:745
msgid ""
"On Windows, :class:`~ctypes.CDLL` and subclasses now accept a *winmode* "
"parameter to specify flags for the underlying ``LoadLibraryEx`` call. The "
"default flags are set to only load DLL dependencies from trusted locations, "
"including the path where the DLL is stored (if a full or partial path is "
"used to load the initial DLL) and paths added by :func:`~os."
"add_dll_directory`. (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"Windows üzerinde, :class:`~ctypes.CDLL` ve alt sınıfları artık temel "
"``LoadLibraryEx`` çağrısı için bayrakları belirtmek üzere bir *winmode* "
"parametresi kabul etmektedir. Varsayılan bayraklar, DLL'nin depolandığı yol "
"(ilk DLL'yi yüklemek için tam veya kısmi bir yol kullanılmışsa) ve :func:"
"`~os.add_dll_directory` tarafından eklenen yollar dahil olmak üzere, "
"yalnızca güvenilir konumlardan DLL bağımlılıklarını yükleyecek şekilde "
"ayarlanmıştır. (Steve Dower'ın :issue:`36085` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:754
msgid "datetime"
msgstr "datetime"

#: whatsnew/3.8.rst:756
msgid ""
"Added new alternate constructors :meth:`datetime.date.fromisocalendar` and :"
"meth:`datetime.datetime.fromisocalendar`, which construct :class:`date` and :"
"class:`datetime` objects respectively from ISO year, week number, and "
"weekday; these are the inverse of each class's ``isocalendar`` method. "
"(Contributed by Paul Ganssle in :issue:`36004`.)"
msgstr ""
"ISO yılı, hafta numarası ve haftanın gününden sırasıyla :class:`date` ve :"
"class:`datetime` nesnelerini oluşturan yeni alternatif kurucular :meth:"
"`datetime.date.fromisocalendar` ve :meth:`datetime.datetime.fromisocalendar` "
"eklendi; bunlar her sınıfın ``isocalendar`` yönteminin tersidir. (Paul "
"Ganssle'ın :issue:`36004` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:764
msgid "functools"
msgstr "functools"

#: whatsnew/3.8.rst:766
msgid ""
":func:`functools.lru_cache` can now be used as a straight decorator rather "
"than as a function returning a decorator.  So both of these are now "
"supported::"
msgstr ""
":func:`functools.lru_cache` artık bir dekoratör döndüren bir fonksiyon "
"yerine düz bir dekoratör olarak kullanılabilir.  Yani bunların ikisi de "
"artık destekleniyor::"

#: whatsnew/3.8.rst:777
msgid "(Contributed by Raymond Hettinger in :issue:`36772`.)"
msgstr "(Raymond Hettinger'ın :issue:`36772` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:779
msgid ""
"Added a new :func:`functools.cached_property` decorator, for computed "
"properties cached for the life of the instance. ::"
msgstr ""
"Örneğin ömrü boyunca önbelleğe alınan hesaplanmış özellikler için yeni bir :"
"func:`functools.cached_property` dekoratörü eklendi:"

#: whatsnew/3.8.rst:793
msgid "(Contributed by Carl Meyer in :issue:`21145`)"
msgstr "(Carl Meyer'ın :issue:`21145` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:796
msgid ""
"Added a new :func:`functools.singledispatchmethod` decorator that converts "
"methods into :term:`generic functions <generic function>` using :term:"
"`single dispatch`::"
msgstr ""
"Metotları :term:`single dispatch` kullanarak :term:`generic functions "
"<generic function>` haline dönüştüren yeni bir :func:`functools."
"singledispatchmethod` dekoratörü eklendi::"

#: whatsnew/3.8.rst:818
msgid "(Contributed by Ethan Smith in :issue:`32380`)"
msgstr "(Ethan Smith'in :issue:`32380` 'deki katkısıyla)"

#: whatsnew/3.8.rst:821
msgid "gc"
msgstr "gc"

#: whatsnew/3.8.rst:823
msgid ""
":func:`~gc.get_objects` can now receive an optional *generation* parameter "
"indicating a generation to get objects from. (Contributed by Pablo Galindo "
"in :issue:`36016`.)"
msgstr ""
":func:`~gc.get_objects` artık nesnelerin alınacağı nesli belirten isteğe "
"bağlı bir *nesil* parametresi alabilir. (Pablo Galindo'nun :issue:`36016` "
"'daki katkılarıyla.)"

#: whatsnew/3.8.rst:829
msgid "gettext"
msgstr "gettext"

#: whatsnew/3.8.rst:831
msgid ""
"Added :func:`~gettext.pgettext` and its variants. (Contributed by Franz "
"Glasner, Éric Araujo, and Cheryl Sabella in :issue:`2504`.)"
msgstr ""
":func:`~gettext.pgettext` ve varyantları eklendi. (Franz Glasner, Éric "
"Araujo ve Cheryl Sabella'nın :issue:`2504` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:836
msgid "gzip"
msgstr "gzip"

#: whatsnew/3.8.rst:838
msgid ""
"Added the *mtime* parameter to :func:`gzip.compress` for reproducible "
"output. (Contributed by Guo Ci Teo in :issue:`34898`.)"
msgstr ""
"Tekrarlanabilir çıktı için :func:`gzip.compress` dosyasına *mtime* "
"parametresi eklendi. (Guo Ci Teo'nun :issue:`34898` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:841
msgid ""
"A :exc:`~gzip.BadGzipFile` exception is now raised instead of :exc:`OSError` "
"for certain types of invalid or corrupt gzip files. (Contributed by Filip "
"Gruszczyński, Michele Orrù, and Zackery Spytz in :issue:`6584`.)"
msgstr ""
"Belirli türdeki geçersiz veya bozuk gzip dosyaları için :exc:`OSError` "
"yerine artık :exc:`~gzip.BadGzipFile` istisnası oluşturulmaktadır. (Filip "
"Gruszczyński, Michele Orrù ve Zackery Spytz'in :issue:`6584` 'teki "
"katkılarıyla.)"

#: whatsnew/3.8.rst:848
msgid "IDLE and idlelib"
msgstr "IDLE ve idlelib"

#: whatsnew/3.8.rst:850
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"N satırın üzerindeki çıktı (varsayılan olarak 50) bir düğmeye sıkıştırılır. "
"N, Ayarlar iletişim kutusunun Genel sayfasının PyShell bölümünde "
"değiştirilebilir.  Daha az, ancak muhtemelen ekstra uzun satırlar, çıktıya "
"sağ tıklanarak sıkıştırılabilir.  Sıkıştırılmış çıktı, düğmeye çift "
"tıklanarak yerinde veya düğmeye sağ tıklanarak panoya veya ayrı bir "
"pencereye genişletilebilir.  (Tal Einat'ın :issue:`1529353` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:857
msgid ""
"Add \"Run Customized\" to the Run menu to run a module with customized "
"settings. Any command line arguments entered are added to sys.argv. They "
"also re-appear in the box for the next customized run.  One can also "
"suppress the normal Shell main module restart.  (Contributed by Cheryl "
"Sabella, Terry Jan Reedy, and others in :issue:`5680` and :issue:`37627`.)"
msgstr ""
"Bir modülü özelleştirilmiş ayarlarla çalıştırmak için Çalıştır menüsüne "
"\"Özelleştirilmiş Çalıştır\" seçeneğini ekleyin. Girilen tüm komut satırı "
"argümanları sys.argv'ye eklenir. Ayrıca bir sonraki özelleştirilmiş "
"çalıştırma için kutuda yeniden görünürler.  Ayrıca normal Shell ana "
"modülünün yeniden başlatılması da engellenebilir.  (Cheryl Sabella, Terry "
"Jan Reedy ve diğerleri tarafından :issue:`5680` ve :issue:`37627` 'de "
"katkıda bulunulmuştur)"

#: whatsnew/3.8.rst:863
msgid ""
"Added optional line numbers for IDLE editor windows. Windows open without "
"line numbers unless set otherwise in the General tab of the configuration "
"dialog.  Line numbers for an existing window are shown and hidden in the "
"Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in :issue:"
"`17535`.)"
msgstr ""
"IDLE düzenleyici pencereleri için isteğe bağlı satır numaraları eklendi. "
"Yapılandırma iletişim kutusunun Genel sekmesinde aksi ayarlanmadığı sürece "
"pencereler satır numaraları olmadan açılır.  Mevcut bir pencere için satır "
"numaraları Seçenekler menüsünde gösterilir ve gizlenir. (Tal Einat ve "
"Saimadhav Heblikar'ın :issue:`17535` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:869
msgid ""
"OS native encoding is now used for converting between Python strings and Tcl "
"objects. This allows IDLE to work with emoji and other non-BMP characters. "
"These characters can be displayed or copied and pasted to or from the "
"clipboard.  Converting strings from Tcl to Python and back now never fails. "
"(Many people worked on this for eight years but the problem was finally "
"solved by Serhiy Storchaka in :issue:`13153`.)"
msgstr ""
"OS yerel kodlaması artık Python dizeleri ve Tcl nesneleri arasında "
"dönüştürme yapmak için kullanılıyor. Bu, IDLE'ın emoji ve diğer BMP olmayan "
"karakterlerle çalışmasını sağlar. Bu karakterler görüntülenebilir veya "
"kopyalanıp panoya veya panodan yapıştırılabilir.  Dizeleri Tcl'den Python'a "
"ve geri dönüştürmek artık asla başarısız olmuyor. (Birçok kişi sekiz yıl "
"boyunca bunun üzerinde çalıştı ancak sorun sonunda Serhiy Storchaka "
"tarafından :issue:`13153` 'de çözüldü)"

#: whatsnew/3.8.rst:876
msgid "New in 3.8.1:"
msgstr "3.8.1'deki yenilikler:"

#: whatsnew/3.8.rst:878
msgid ""
"Add option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"İmleç yanıp sönmesini kapatmak için seçenek ekleyin.  (Zackery Spytz'in :"
"issue:`4603` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:881
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"Escape tuşu artık IDLE tamamlama pencerelerini kapatıyor.  (Johnny "
"Najera'nın :issue:`38944` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:884
msgid "The changes above have been backported to 3.7 maintenance releases."
msgstr "Yukarıdaki değişiklikler 3.7 bakım sürümlerine geri aktarılmıştır."

#: whatsnew/3.8.rst:886
msgid ""
"Add keywords to module name completion list.  (Contributed by Terry J. Reedy "
"in :issue:`37765`.)"
msgstr ""
"Modül adı tamamlama listesine anahtar kelimeler ekleyin.  (Terry J. "
"Reedy'nin :issue:`37765` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:890
msgid "inspect"
msgstr "inspect"

#: whatsnew/3.8.rst:892
msgid ""
"The :func:`inspect.getdoc` function can now find docstrings for "
"``__slots__`` if that attribute is a :class:`dict` where the values are "
"docstrings. This provides documentation options similar to what we already "
"have for :func:`property`, :func:`classmethod`, and :func:`staticmethod`::"
msgstr ""
":func:`inspect.getdoc` fonksiyonu artık ``__slots__`` için doktrin "
"bulabilir, eğer bu nitelik değerlerin doktrin olduğu bir :class:`dict` ise. "
"Bu, :func:`property`, :func:`classmethod` ve :func:`staticmethod` için zaten "
"sahip olduğumuza benzer doktrin seçenekleri sağlar::"

#: whatsnew/3.8.rst:904
msgid "(Contributed by Raymond Hettinger in :issue:`36326`.)"
msgstr "(Raymond Hettinger'ın :issue:`36326` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:908
msgid "io"
msgstr "io"

#: whatsnew/3.8.rst:910
msgid ""
"In development mode (:option:`-X` ``env``) and in :ref:`debug build <debug-"
"build>`, the :class:`io.IOBase` finalizer now logs the exception if the "
"``close()`` method fails. The exception is ignored silently by default in "
"release build. (Contributed by Victor Stinner in :issue:`18748`.)"
msgstr ""
"Geliştirme modunda (:option:`-X` ``env``) ve :ref:`debug build <debug-"
"build>` içinde, :class:`io.IOBase` sonlandırıcısı artık ``close()`` yöntemi "
"başarısız olursa istisnayı kaydeder. Sürüm derlemesinde istisna varsayılan "
"olarak sessizce yok sayılır. (Victor Stinner'ın :issue:`18748` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:917
msgid "itertools"
msgstr "itertools"

#: whatsnew/3.8.rst:919
msgid ""
"The :func:`itertools.accumulate` function added an option *initial* keyword "
"argument to specify an initial value::"
msgstr ""
":func:`itertools.accumulate` fonksiyonuna bir başlangıç değeri belirtmek "
"için *initial* anahtar kelime argümanı seçeneği eklendi::"

#: whatsnew/3.8.rst:926
msgid "(Contributed by Lisa Roach in :issue:`34659`.)"
msgstr "(Lisa Roach'un :issue:`34659` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:930
msgid "json.tool"
msgstr "json.tool"

#: whatsnew/3.8.rst:932
msgid ""
"Add option ``--json-lines`` to parse every input line as a separate JSON "
"object. (Contributed by Weipeng Hong in :issue:`31553`.)"
msgstr ""
"Her girdi satırını ayrı bir JSON nesnesi olarak ayrıştırmak için ``--json-"
"lines`` seçeneğini ekleyin. (Weipeng Hong'un :issue:`31553` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:937
msgid "logging"
msgstr "kayıt tutma"

#: whatsnew/3.8.rst:939
msgid ""
"Added a *force* keyword argument to :func:`logging.basicConfig()` When set "
"to true, any existing handlers attached to the root logger are removed and "
"closed before carrying out the configuration specified by the other "
"arguments."
msgstr ""
":func:`logging.basicConfig()` fonksiyonuna bir *force* anahtar kelime "
"argümanı eklendi. Doğru olarak ayarlandığında, diğer argümanlarla belirtilen "
"yapılandırma gerçekleştirilmeden önce kök kaydediciye bağlı mevcut "
"işleyiciler kaldırılır ve kapatılır."

#: whatsnew/3.8.rst:944
msgid ""
"This solves a long-standing problem.  Once a logger or *basicConfig()* had "
"been called, subsequent calls to *basicConfig()* were silently ignored. This "
"made it difficult to update, experiment with, or teach the various logging "
"configuration options using the interactive prompt or a Jupyter notebook."
msgstr ""
"Bu, uzun süredir devam eden bir sorunu çözmektedir.  Bir kaydedici veya "
"*basicConfig()* çağrıldıktan sonra, *basicConfig()* 'e yapılan sonraki "
"çağrılar sessizce yok sayılıyordu. Bu durum, etkileşimli komut istemini veya "
"Jupyter not defterini kullanarak çeşitli kaydedici yapılandırma "
"seçeneklerini güncellemeyi, denemeyi veya öğretmeyi zorlaştırıyordu."

#: whatsnew/3.8.rst:950
msgid ""
"(Suggested by Raymond Hettinger, implemented by Dong-hee Na, and reviewed by "
"Vinay Sajip in :issue:`33897`.)"
msgstr ""
"(Raymond Hettinger tarafından önerildi, Dong-hee Na tarafından uygulandı ve :"
"issue:`33897` 'de Vinay Sajip tarafından gözden geçirildi.)"

#: whatsnew/3.8.rst:955
msgid "math"
msgstr "math"

#: whatsnew/3.8.rst:957
msgid ""
"Added new function :func:`math.dist` for computing Euclidean distance "
"between two points.  (Contributed by Raymond Hettinger in :issue:`33089`.)"
msgstr ""
"İki nokta arasındaki Öklid mesafesini hesaplamak için yeni :func:`math.dist` "
"fonksiyonu eklendi.  (Raymond Hettinger'ın :issue:`33089` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:960
msgid ""
"Expanded the :func:`math.hypot` function to handle multiple dimensions. "
"Formerly, it only supported the 2-D case. (Contributed by Raymond Hettinger "
"in :issue:`33089`.)"
msgstr ""
":func:`math.hypot` fonksiyonu çoklu boyutları işleyecek şekilde "
"genişletildi. Önceden sadece 2 boyutlu durumu destekliyordu. (Raymond "
"Hettinger'ın :issue:`33089` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:964
msgid ""
"Added new function, :func:`math.prod`, as analogous function to :func:`sum` "
"that returns the product of a 'start' value (default: 1) times an iterable "
"of numbers::"
msgstr ""
"Yeni :func:`math.prod` fonksiyonu eklendi, :func:`sum` fonksiyonuna benzer "
"bir fonksiyon olarak, bir 'başlangıç' değeri (varsayılan: 1) ile bir sayı "
"yinelenebilirinin çarpımını döndürür::"

#: whatsnew/3.8.rst:973
msgid "(Contributed by Pablo Galindo in :issue:`35606`.)"
msgstr "(Pablo Galindo'nun :issue:`35606` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:975
msgid ""
"Added two new combinatoric functions :func:`math.perm` and :func:`math."
"comb`::"
msgstr ""
"İki yeni kombinatorik fonksiyon eklendi :func:`math.perm` ve :func:`math."
"comb`::"

#: whatsnew/3.8.rst:982
msgid ""
"(Contributed by Yash Aggarwal, Keller Fuchs, Serhiy Storchaka, and Raymond "
"Hettinger in :issue:`37128`, :issue:`37178`, and :issue:`35431`.)"
msgstr ""
"(Yash Aggarwal, Keller Fuchs, Serhiy Storchaka ve Raymond Hettinger'ın :"
"issue:`37128`, :issue:`37178` ve :issue:`35431` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:985
msgid ""
"Added a new function :func:`math.isqrt` for computing accurate integer "
"square roots without conversion to floating point.  The new function "
"supports arbitrarily large integers.  It is faster than ``floor(sqrt(n))`` "
"but slower than :func:`math.sqrt`::"
msgstr ""
"Kayan noktaya dönüştürmeden doğru tamsayı kareköklerini hesaplamak için yeni "
"bir :func:`math.isqrt` fonksiyonu eklendi.  Yeni fonksiyon keyfi olarak "
"büyük tamsayıları destekler.  Bu fonksiyon ``floor(sqrt(n))`` fonksiyonundan "
"daha hızlıdır ancak :func:`math.sqrt`: fonksiyonundan daha yavaştır:"

#: whatsnew/3.8.rst:997
msgid "(Contributed by Mark Dickinson in :issue:`36887`.)"
msgstr "(Mark Dickinson'ın :issue:`36887` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:999
msgid ""
"The function :func:`math.factorial` no longer accepts arguments that are not "
"int-like. (Contributed by Pablo Galindo in :issue:`33083`.)"
msgstr ""
"Fonksiyon :func:`math.factorial` artık int benzeri olmayan argümanları kabul "
"etmiyor. (Pablo Galindo'nun :issue:`33083` 'deki katkısıyla)"

#: whatsnew/3.8.rst:1004
msgid "mmap"
msgstr "mmap"

#: whatsnew/3.8.rst:1006
msgid ""
"The :class:`mmap.mmap` class now has an :meth:`~mmap.mmap.madvise` method to "
"access the ``madvise()`` system call. (Contributed by Zackery Spytz in :"
"issue:`32941`.)"
msgstr ""
":class:`mmap.mmap` sınıfı artık ``madvise()`` sistem çağrısına erişmek için "
"bir :meth:`~mmap.mmap.madvise` yöntemine sahiptir. (Zackery Spytz'in :issue:"
"`32941` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1012
msgid "multiprocessing"
msgstr "multiprocessing"

#: whatsnew/3.8.rst:1014
msgid ""
"Added new :mod:`multiprocessing.shared_memory` module. (Contributed by Davin "
"Potts in :issue:`35813`.)"
msgstr ""
"Yeni :mod:`multiprocessing.shared_memory` modülü eklendi. (Davin Potts'un :"
"issue:`35813` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1017
msgid ""
"On macOS, the *spawn* start method is now used by default. (Contributed by "
"Victor Stinner in :issue:`33725`.)"
msgstr ""
"macOS'ta *spawn* başlatma yöntemi artık varsayılan olarak kullanılmaktadır. "
"(Victor Stinner'ın :issue:`33725` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1022
msgid "os"
msgstr "os"

#: whatsnew/3.8.rst:1024
msgid ""
"Added new function :func:`~os.add_dll_directory` on Windows for providing "
"additional search paths for native dependencies when importing extension "
"modules or loading DLLs using :mod:`ctypes`. (Contributed by Steve Dower in :"
"issue:`36085`.)"
msgstr ""
"Eklenti modüllerini içe aktarırken veya :mod:`ctypes` kullanarak DLL'leri "
"yüklerken yerel bağımlılıklar için ek arama yolları sağlamak için Windows'ta "
"yeni :func:`~os.add_dll_directory` fonksiyonu eklendi. (Steve Dower'ın :"
"issue:`36085` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1029
msgid ""
"A new :func:`os.memfd_create` function was added to wrap the "
"``memfd_create()`` syscall. (Contributed by Zackery Spytz and Christian "
"Heimes in :issue:`26836`.)"
msgstr ""
"Yeni bir :func:`os.memfd_create` fonksiyonu ``memfd_create()`` sistem "
"çağrısını sarmak için eklendi. (Zackery Spytz ve Christian Heimes "
"tarafından :issue:`26836` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1033
msgid ""
"On Windows, much of the manual logic for handling reparse points (including "
"symlinks and directory junctions) has been delegated to the operating "
"system. Specifically, :func:`os.stat` will now traverse anything supported "
"by the operating system, while :func:`os.lstat` will only open reparse "
"points that identify as \"name surrogates\" while others are opened as for :"
"func:`os.stat`. In all cases, :attr:`stat_result.st_mode` will only have "
"``S_IFLNK`` set for symbolic links and not other kinds of reparse points. To "
"identify other kinds of reparse point, check the new :attr:`stat_result."
"st_reparse_tag` attribute."
msgstr ""
"Windows'ta, yeniden ayrıştırma noktalarını (sembolik bağlantılar ve dizin "
"bağlantıları dahil) işlemek için manuel mantığın çoğu işletim sistemine "
"devredilmiştir. Özellikle, :func:`os.stat` artık işletim sistemi tarafından "
"desteklenen her şeyi geçerken, :func:`os.lstat` yalnızca \"isim vekilleri\" "
"olarak tanımlanan yeniden ayrıştırma noktalarını açacak, diğerleri ise :func:"
"`os.stat` için olduğu gibi açılacaktır. Her durumda, :attr:`stat_result."
"st_mode` sadece sembolik bağlantılar için ``S_IFLNK`` ayarına sahip olacak, "
"diğer türdeki ayrıştırma noktaları için olmayacaktır. Diğer yeniden "
"ayrıştırma noktası türlerini tanımlamak için yeni :attr:`stat_result."
"st_reparse_tag` niteliğini kontrol edin."

#: whatsnew/3.8.rst:1042
msgid ""
"On Windows, :func:`os.readlink` is now able to read directory junctions. "
"Note that :func:`~os.path.islink` will return ``False`` for directory "
"junctions, and so code that checks ``islink`` first will continue to treat "
"junctions as directories, while code that handles errors from :func:`os."
"readlink` may now treat junctions as links."
msgstr ""
"Windows üzerinde, :func:`os.readlink` artık dizin bağlantılarını "
"okuyabilmektedir. :func:`~os.path.islink` dizin bağlantıları için ``False`` "
"döndürecektir ve bu nedenle önce ``islink`` kontrol eden kod bağlantıları "
"dizin olarak ele almaya devam ederken, :func:`os.readlink` hatalarını "
"işleyen kod artık bağlantıları linkler olarak ele alabilir."

#: whatsnew/3.8.rst:1073
msgid "(Contributed by Steve Dower in :issue:`37834`.)"
msgstr "(Steve Dower'ın :issue:`37834` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1052
msgid "os.path"
msgstr "os.path"

#: whatsnew/3.8.rst:1054
msgid ""
":mod:`os.path` functions that return a boolean result like :func:`~os.path."
"exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :func:`~os.path."
"isfile`, :func:`~os.path.islink`, and :func:`~os.path.ismount` now return "
"``False`` instead of raising :exc:`ValueError` or its subclasses :exc:"
"`UnicodeEncodeError` and :exc:`UnicodeDecodeError` for paths that contain "
"characters or bytes unrepresentable at the OS level. (Contributed by Serhiy "
"Storchaka in :issue:`33721`.)"
msgstr ""
":func:`~os.path.exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :"
"func:`~os.path.isfile`, :func:`~os.path.islink` ve :func:`~os.path. ismount` "
"gibi boolean sonuç döndüren :mod:`os.path` fonksiyonları artık işletim "
"sistemi düzeyinde temsil edilemeyen karakterler veya baytlar içeren yollar "
"için :exc:`ValueError` veya alt sınıfları :exc:`UnicodeEncodeError` ve :exc:"
"`UnicodeDecodeError` yerine ``False`` döndürüyor. (Serhiy Storchaka'nın :"
"issue:`33721` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1962
msgid ""
":func:`~os.path.expanduser` on Windows now prefers the :envvar:`USERPROFILE` "
"environment variable and does not use :envvar:`HOME`, which is not normally "
"set for regular user accounts. (Contributed by Anthony Sottile in :issue:"
"`36264`.)"
msgstr ""
"Windows üzerinde :func:`~os.path.expanduser` artık :envvar:`USERPROFILE` "
"ortam değişkenini tercih ediyor ve normalde normal kullanıcı hesapları için "
"ayarlanmamış olan :envvar:`HOME` değişkenini kullanmıyor. (Anthony "
"Sottile'nin :issue:`36264` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1067
msgid ""
":func:`~os.path.isdir` on Windows no longer returns ``True`` for a link to a "
"non-existent directory."
msgstr ""
":func:`~os.path.isdir` Windows üzerinde artık var olmayan bir dizine "
"bağlantı için ``True`` döndürmüyor."

#: whatsnew/3.8.rst:1070
msgid ""
":func:`~os.path.realpath` on Windows now resolves reparse points, including "
"symlinks and directory junctions."
msgstr ""
"Windows üzerinde :func:`~os.path.realpath` artık ortak bağlantılar ve dizin "
"birleşimleri de dahil olmak üzere yeniden ayrıştırma noktalarını çözümlüyor."

#: whatsnew/3.8.rst:1077
msgid "pathlib"
msgstr "pathlib"

#: whatsnew/3.8.rst:1079
msgid ""
":mod:`pathlib.Path` methods that return a boolean result like :meth:"
"`~pathlib.Path.exists()`, :meth:`~pathlib.Path.is_dir()`, :meth:`~pathlib."
"Path.is_file()`, :meth:`~pathlib.Path.is_mount()`, :meth:`~pathlib.Path."
"is_symlink()`, :meth:`~pathlib.Path.is_block_device()`, :meth:`~pathlib.Path."
"is_char_device()`, :meth:`~pathlib.Path.is_fifo()`, :meth:`~pathlib.Path."
"is_socket()` now return ``False`` instead of raising :exc:`ValueError` or "
"its subclass :exc:`UnicodeEncodeError` for paths that contain characters "
"unrepresentable at the OS level. (Contributed by Serhiy Storchaka in :issue:"
"`33721`.)"
msgstr ""
":meth:`~pathlib.Path.exists()`, :meth:`~pathlib.Path.is_dir()`, :meth:"
"`~pathlib. Path.is_file()`, :meth:`~pathlib.Path.is_mount()`, :meth:"
"`~pathlib.Path.is_symlink()`, :meth:`~pathlib.Path.is_block_device()`, :meth:"
"`~pathlib. Path.is_char_device()`, :meth:`~pathlib.Path.is_fifo()`, :meth:"
"`~pathlib.Path.is_socket()` gibi boolean sonuç döndüren :mod:`pathlib.Path` "
"metotları artık işletim sistemi seviyesinde temsil edilemeyen karakterler "
"içeren yollar için :exc:`ValueError` veya alt sınıfı :exc:"
"`UnicodeEncodeError` yükseltmek yerine ``False`` döndürüyor. (Serhiy "
"Storchaka'nın :issue:`33721` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1089
msgid ""
"Added :meth:`pathlib.Path.link_to()` which creates a hard link pointing to a "
"path. (Contributed by Joannah Nanjekye in :issue:`26978`)"
msgstr ""
"Bir yola işaret eden sabit bir bağlantı oluşturan :meth:`pathlib.Path."
"link_to()` eklendi. (Joannah Nanjekye'nin :issue:`26978` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1095
msgid "pickle"
msgstr "pickle"

#: whatsnew/3.8.rst:1097
msgid ""
":mod:`pickle` extensions subclassing the C-optimized :class:`~pickle."
"Pickler` can now override the pickling logic of functions and classes by "
"defining the special :meth:`~pickle.Pickler.reducer_override` method. "
"(Contributed by Pierre Glaser and Olivier Grisel in :issue:`35900`.)"
msgstr ""
"C-optimized :class:`~pickle.Pickler` alt sınıfını kullanan :mod:`pickle` "
"uzantıları artık özel :meth:`~pickle.Pickler.reducer_override` yöntemini "
"tanımlayarak fonksiyon ve sınıfların pickling mantığını geçersiz kılabilir. "
"(Pierre Glaser ve Olivier Grisel'ın :issue:`35900` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1104
msgid "plistlib"
msgstr "plistlib"

#: whatsnew/3.8.rst:1106
msgid ""
"Added new :class:`plistlib.UID` and enabled support for reading and writing "
"NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in :issue:"
"`26707`.)"
msgstr ""
"Yeni :class:`plistlib.UID` eklendi ve NSKeyedArchiver ile kodlanmış ikili "
"plistleri okuma ve yazma desteği etkinleştirildi. (Jon Janzen tarafından :"
"issue:`26707` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1112
msgid "pprint"
msgstr "pprint"

#: whatsnew/3.8.rst:1114
msgid ""
"The :mod:`pprint` module added a *sort_dicts* parameter to several "
"functions. By default, those functions continue to sort dictionaries before "
"rendering or printing.  However, if *sort_dicts* is set to false, the "
"dictionaries retain the order that keys were inserted.  This can be useful "
"for comparison to JSON inputs during debugging."
msgstr ""
":mod:`pprint` modülü çeşitli fonksiyonlara *sort_dicts* parametresi ekledi. "
"Varsayılan olarak, bu fonksiyonlar sözlükleri oluşturmadan veya yazdırmadan "
"önce sıralamaya devam eder.  Ancak, *sort_dicts* yanlış olarak ayarlanırsa, "
"sözlükler anahtarların eklendiği sırayı korur.  Bu, hata ayıklama sırasında "
"JSON girdileriyle karşılaştırma yapmak için yararlı olabilir."

#: whatsnew/3.8.rst:1120
msgid ""
"In addition, there is a convenience new function, :func:`pprint.pp` that is "
"like :func:`pprint.pprint` but with *sort_dicts* defaulting to ``False``::"
msgstr ""
"In addition, there is a convenience new function, :func:`pprint.pp` that is "
"like :func:`pprint.pprint` but with *sort_dicts* defaulting to ``False``::"

#: whatsnew/3.8.rst:1134
msgid "(Contributed by Rémi Lapeyre in :issue:`30670`.)"
msgstr "(Rémi Lapeyre'nin :issue:`30670` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1138
msgid "py_compile"
msgstr "py_compile"

#: whatsnew/3.8.rst:1140
msgid ""
":func:`py_compile.compile` now supports silent mode. (Contributed by Joannah "
"Nanjekye in :issue:`22640`.)"
msgstr ""
":func:`py_compile.compile` artık sessiz modu destekliyor. (Joannah "
"Nanjekye'nin :issue:`22640` 'taki katkısıyla.)"

#: whatsnew/3.8.rst:1145
msgid "shlex"
msgstr "shlex"

#: whatsnew/3.8.rst:1147
msgid ""
"The new :func:`shlex.join` function acts as the inverse of :func:`shlex."
"split`. (Contributed by Bo Bayles in :issue:`32102`.)"
msgstr ""
"Yeni :func:`shlex.join` fonksiyonu :func:`shlex.split` fonksiyonunun tersi "
"gibi davranır. (Bo Bayles'in :issue:`32102` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1152
msgid "shutil"
msgstr "shutil"

#: whatsnew/3.8.rst:1154
msgid ""
":func:`shutil.copytree` now accepts a new ``dirs_exist_ok`` keyword "
"argument. (Contributed by Josh Bronson in :issue:`20849`.)"
msgstr ""
":func:`shutil.copytree` artık yeni bir ``dirs_exist_ok`` anahtar kelime "
"argümanını kabul ediyor. (Josh Bronson'ın :issue:`20849` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1157
msgid ""
":func:`shutil.make_archive` now defaults to the modern pax (POSIX.1-2001) "
"format for new archives to improve portability and standards conformance, "
"inherited from the corresponding change to the :mod:`tarfile` module. "
"(Contributed by C.A.M. Gerlach in :issue:`30661`.)"
msgstr ""
":func:`shutil.make_archive` artık taşınabilirliği ve standartlara uygunluğu "
"artırmak için yeni arşivler için modern pax (POSIX.1-2001) formatını "
"varsayılan olarak kullanmaktadır, :mod:`tarfile` modülündeki ilgili "
"değişiklikten miras alınmıştır. (C.A.M. Gerlach'ın :issue:`30661` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1162
msgid ""
":func:`shutil.rmtree` on Windows now removes directory junctions without "
"recursively removing their contents first. (Contributed by Steve Dower in :"
"issue:`37834`.)"
msgstr ""
"windows üzerinde :func:`shutil.rmtree` artık dizin bağlantılarını önce "
"içeriklerini özyinelemeli olarak kaldırmadan kaldırıyor. (Steve Dower'ın :"
"issue:`37834` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1168
msgid "socket"
msgstr "socket"

#: whatsnew/3.8.rst:1170
msgid ""
"Added :meth:`~socket.create_server()` and :meth:`~socket."
"has_dualstack_ipv6()` convenience functions to automate the necessary tasks "
"usually involved when creating a server socket, including accepting both "
"IPv4 and IPv6 connections on the same socket.  (Contributed by Giampaolo "
"Rodolà in :issue:`17561`.)"
msgstr ""
"Aynı soket üzerinde hem IPv4 hem de IPv6 bağlantılarını kabul etmek de dahil "
"olmak üzere bir sunucu soketi oluştururken genellikle gerekli görevleri "
"otomatikleştirmek için :meth:`~socket.create_server()` ve :meth:`~socket."
"has_dualstack_ipv6()` kolaylık fonksiyonları eklendi.  (Giampaolo "
"Rodolà'nın :issue:`17561` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1175
msgid ""
"The :func:`socket.if_nameindex()`, :func:`socket.if_nametoindex()`, and :"
"func:`socket.if_indextoname()` functions have been implemented on Windows. "
"(Contributed by Zackery Spytz in :issue:`37007`.)"
msgstr ""
":func:`socket.if_nameindex()`, :func:`socket.if_nametoindex()` ve :func:"
"`socket.if_indextoname()` fonksiyonları Windows'ta uygulanmıştır. (Zackery "
"Spytz'in :issue:`37007` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1181
msgid "ssl"
msgstr "ssl"

#: whatsnew/3.8.rst:1183
msgid ""
"Added :attr:`~ssl.SSLContext.post_handshake_auth` to enable and :meth:`~ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :issue:`34670`.)"
msgstr ""
"TLS 1.3 post-handshake kimlik doğrulamasını başlatmak için :attr:`~ssl."
"SSLContext.post_handshake_auth` etkinleştirildi ve :meth:`~ssl.SSLSocket."
"verify_client_post_handshake` eklendi. (Christian Heimes'in :issue:`34670` "
"'teki katkısıyla.)"

#: whatsnew/3.8.rst:1190
msgid "statistics"
msgstr "statistics"

#: whatsnew/3.8.rst:1192
msgid ""
"Added :func:`statistics.fmean` as a faster, floating point variant of :func:"
"`statistics.mean()`.  (Contributed by Raymond Hettinger and Steven D'Aprano "
"in :issue:`35904`.)"
msgstr ""
"Eklenen :func:`statistics.fmean`, :func:`statistics.mean()` 'in daha hızlı, "
"kayan noktalı bir çeşididir.  (Raymond Hettinger ve Steven D'Aprano 'nun :"
"issue:`35904` 'taki katkılarıyla.)"

#: whatsnew/3.8.rst:1196
msgid ""
"Added :func:`statistics.geometric_mean()` (Contributed by Raymond Hettinger "
"in :issue:`27181`.)"
msgstr ""
":func:`statistics.geometric_mean()` eklendi (Raymond Hettinger'ın :issue:"
"`27181` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1199
msgid ""
"Added :func:`statistics.multimode` that returns a list of the most common "
"values. (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"En yaygın değerlerin bir listesini döndüren :func:`statistics.multimode` "
"eklendi. (Raymond Hettinger'ın :issue:`35892` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1202
msgid ""
"Added :func:`statistics.quantiles` that divides data or a distribution in to "
"equiprobable intervals (e.g. quartiles, deciles, or percentiles). "
"(Contributed by Raymond Hettinger in :issue:`36546`.)"
msgstr ""
"Verileri veya bir dağılımı eşitlenebilir aralıklara (örneğin çeyrekler, "
"ondalıklar veya yüzdelikler) bölen :func:`statistics.quantiles` eklendi. "
"(Raymond Hettinger'ın :issue:`36546` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1206
msgid ""
"Added :class:`statistics.NormalDist`, a tool for creating and manipulating "
"normal distributions of a random variable. (Contributed by Raymond Hettinger "
"in :issue:`36018`.)"
msgstr ""
"Rastgele bir değişkenin normal dağılımlarını oluşturmak ve işlemek için bir "
"araç olan :class:`statistics.NormalDist` eklendi. (Raymond Hettinger'ın :"
"issue:`36018` 'deki katkısıyla. )"

#: whatsnew/3.8.rst:1236
msgid "sys"
msgstr "sys"

#: whatsnew/3.8.rst:1238
msgid ""
"Add new :func:`sys.unraisablehook` function which can be overridden to "
"control how \"unraisable exceptions\" are handled. It is called when an "
"exception has occurred but there is no way for Python to handle it. For "
"example, when a destructor raises an exception or during garbage collection "
"(:func:`gc.collect`). (Contributed by Victor Stinner in :issue:`36829`.)"
msgstr ""
"Yeni :func:`sys.unraisablehook` fonksiyonunu ekleyin, bu fonksiyon "
"\"kaldırılamayan istisnaların\" nasıl işleneceğini kontrol etmek için "
"geçersiz kılınabilir. Bir istisna oluştuğunda çağrılır, ancak Python'un bunu "
"ele almasının bir yolu yoktur. Örneğin, bir yıkıcı bir istisna ortaya "
"çıkardığında veya çöp toplama sırasında (:func:`gc.collect`). (Victor "
"Stinner'ın :issue:`36829` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1247
msgid "tarfile"
msgstr "tarfile"

#: whatsnew/3.8.rst:1249
msgid ""
"The :mod:`tarfile` module now defaults to the modern pax (POSIX.1-2001) "
"format for new archives, instead of the previous GNU-specific one. This "
"improves cross-platform portability with a consistent encoding (UTF-8) in a "
"standardized and extensible format, and offers several other benefits. "
"(Contributed by C.A.M. Gerlach in :issue:`36268`.)"
msgstr ""
":mod:`tarfile` modülü artık yeni arşivler için önceki GNU'ya özgü format "
"yerine modern pax (POSIX.1-2001) formatını varsayılan olarak kullanmaktadır. "
"Bu, standartlaştırılmış ve genişletilebilir bir formatta tutarlı bir kodlama "
"(UTF-8) ile platformlar arası taşınabilirliği geliştirir ve başka avantajlar "
"da sunar. (C.A.M. Gerlach'ın :issue:`36268` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1257
msgid "threading"
msgstr "threading"

#: whatsnew/3.8.rst:1259
msgid ""
"Add a new :func:`threading.excepthook` function which handles uncaught :meth:"
"`threading.Thread.run` exception. It can be overridden to control how "
"uncaught :meth:`threading.Thread.run` exceptions are handled. (Contributed "
"by Victor Stinner in :issue:`1230540`.)"
msgstr ""
"Yakalanmamış :meth:`threading.Thread.run` istisnalarını işleyen yeni bir :"
"func:`threading.excepthook` fonksiyonu ekleyin. Yakalanmamış :meth:"
"`threading.Thread.run` istisnalarının nasıl işleneceğini kontrol etmek için "
"geçersiz kılınabilir. (Victor Stinner'ın :issue:`1230540` 'taki katkısıyla.)"

#: whatsnew/3.8.rst:1264
msgid ""
"Add a new :func:`threading.get_native_id` function and a :data:`~threading."
"Thread.native_id` attribute to the :class:`threading.Thread` class. These "
"return the native integral Thread ID of the current thread assigned by the "
"kernel. This feature is only available on certain platforms, see :func:"
"`get_native_id <threading.get_native_id>` for more information. (Contributed "
"by Jake Tesler in :issue:`36084`.)"
msgstr ""
"Yeni bir :func:`threading.get_native_id` fonksiyonu ve :data:`~threading."
"Thread.native_id` niteliğini :class:`threading.Thread` sınıfına ekleyin. "
"Bunlar, çekirdek tarafından atanan geçerli iş parçacığının yerel integral İş "
"Parçacığı Kimliğini döndürür. Bu özellik yalnızca belirli platformlarda "
"kullanılabilir, daha fazla bilgi için :func:`get_native_id <threading."
"get_native_id>` bölümüne bakın. (Jake Tesler'ın :issue:`36084` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1274
msgid "tokenize"
msgstr "tokenize"

#: whatsnew/3.8.rst:1276
msgid ""
"The :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token when "
"provided with input that does not have a trailing new line.  This behavior "
"now matches what the C tokenizer does internally. (Contributed by Ammar "
"Askar in :issue:`33899`.)"
msgstr ""
":mod:`tokenize` modülü artık sonda yeni bir satır olmayan girdi "
"sağlandığında örtük olarak bir ``NEWLINE`` belirteci yayar.  Bu davranış "
"artık C tokenizer'ın dahili olarak yaptığı ile eşleşiyor. (Ammar Askar'ın :"
"issue:`33899` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1283
msgid "tkinter"
msgstr "tkinter"

#: whatsnew/3.8.rst:1285
msgid ""
"Added methods :meth:`~tkinter.Spinbox.selection_from`, :meth:`~tkinter."
"Spinbox.selection_present`, :meth:`~tkinter.Spinbox.selection_range` and :"
"meth:`~tkinter.Spinbox.selection_to` in the :class:`tkinter.Spinbox` class. "
"(Contributed by Juliette Monsel in :issue:`34829`.)"
msgstr ""
":class:`tkinter.Spinbox` sınıfına :meth:`~tkinter.Spinbox.selection_from`, :"
"meth:`~tkinter.Spinbox.selection_present`, :meth:`~tkinter.Spinbox."
"selection_range` ve :meth:`~tkinter.Spinbox.selection_to` yöntemleri "
"eklendi. (Juliette Monsel'ın :issue:`34829` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1292
msgid ""
"Added method :meth:`~tkinter.Canvas.moveto` in the :class:`tkinter.Canvas` "
"class. (Contributed by Juliette Monsel in :issue:`23831`.)"
msgstr ""
":class:`tkinter.Canvas` sınıfına :meth:`~tkinter.Canvas.moveto` metodu "
"eklendi. (Juliette Monsel'ın :issue:`23831` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1296
msgid ""
"The :class:`tkinter.PhotoImage` class now has :meth:`~tkinter.PhotoImage."
"transparency_get` and :meth:`~tkinter.PhotoImage.transparency_set` methods.  "
"(Contributed by Zackery Spytz in :issue:`25451`.)"
msgstr ""
":class:`tkinter.PhotoImage` sınıfı artık :meth:`~tkinter.PhotoImage."
"transparency_get` ve :meth:`~tkinter.PhotoImage.transparency_set` "
"yöntemlerine sahiptir.  (Zackery Spytz'in :issue:`25451` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1303
msgid "time"
msgstr "time"

#: whatsnew/3.8.rst:1305
msgid ""
"Added new clock :data:`~time.CLOCK_UPTIME_RAW` for macOS 10.12. (Contributed "
"by Joannah Nanjekye in :issue:`35702`.)"
msgstr ""
"macOS 10.12 için yeni saat :data:`~time.CLOCK_UPTIME_RAW` eklendi. (Joannah "
"Nanjekye'nın :issue:`35702` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1310
msgid "typing"
msgstr "typing"

#: whatsnew/3.8.rst:1312
msgid "The :mod:`typing` module incorporates several new features:"
msgstr ":mod:`typing` modülü birkaç yeni özellik içerir:"

#: whatsnew/3.8.rst:1314
msgid ""
"A dictionary type with per-key types.  See :pep:`589` and :class:`typing."
"TypedDict`. TypedDict uses only string keys.  By default, every key is "
"required to be present. Specify \"total=False\" to allow keys to be "
"optional::"
msgstr ""
"Anahtar başına türleri olan bir sözlük türü.  Bakınız :pep:`589` ve :class:"
"`typing.TypedDict`. TypedDict yalnızca dize anahtarları kullanır.  "
"Varsayılan olarak, her anahtarın mevcut olması gerekir. Anahtarların isteğe "
"bağlı olmasına izin vermek için \"total=False\" belirtin::"

#: whatsnew/3.8.rst:1324
msgid ""
"Literal types.  See :pep:`586` and :class:`typing.Literal`. Literal types "
"indicate that a parameter or return value is constrained to one or more "
"specific literal values::"
msgstr ""
"Değişmez tipler.  Bakınız :pep:`586` ve :class:`typing.Literal`. Değişmez "
"tipler, bir parametrenin veya dönüş değerinin bir veya daha fazla belirli "
"değişmez değerle sınırlandırıldığını gösterir::"

#: whatsnew/3.8.rst:1331
msgid ""
"\"Final\" variables, functions, methods and classes.  See :pep:`591`, :class:"
"`typing.Final` and :func:`typing.final`. The final qualifier instructs a "
"static type checker to restrict subclassing, overriding, or reassignment::"
msgstr ""
"\"Final\" değişkenler, fonksiyonlar, metotlar ve sınıflar.  Bakınız :pep:"
"`591`, :class:`typing.Final` ve :func:`typing.final`. Final niteleyicisi "
"statik tip denetleyicisine alt sınıflamayı, geçersiz kılmayı veya yeniden "
"atamayı kısıtlama talimatı verir::"

#: whatsnew/3.8.rst:1338
msgid ""
"Protocol definitions.  See :pep:`544`, :class:`typing.Protocol` and :func:"
"`typing.runtime_checkable`.  Simple ABCs like :class:`typing.SupportsInt` "
"are now ``Protocol`` subclasses."
msgstr ""
"Protokol tanımları.  Bakınız :pep:`544`, :class:`typing.Protocol` ve :func:"
"`typing.runtime_checkable`.  :class:`typing.SupportsInt` gibi basit ABC'ler "
"artık ``Protocol`` alt sınıflarıdır."

#: whatsnew/3.8.rst:1342
msgid "New protocol class :class:`typing.SupportsIndex`."
msgstr "Yeni protokol sınıfı :class:`typing.SupportsIndex`."

#: whatsnew/3.8.rst:1344
msgid "New functions :func:`typing.get_origin` and :func:`typing.get_args`."
msgstr ""
"Yeni fonksiyonlar :func:`typing.get_origin` ve :func:`typing.get_args`."

#: whatsnew/3.8.rst:1348
msgid "unicodedata"
msgstr "unicodedata"

#: whatsnew/3.8.rst:1350
msgid ""
"The :mod:`unicodedata` module has been upgraded to use the `Unicode 12.1.0 "
"<https://blog.unicode.org/2019/05/unicode-12-1-en.html>`_ release."
msgstr ""
":mod:`unicodedata` modülü `Unicode 12.1.0 <http://blog.unicode.org/2019/05/"
"unicode-12-1-en.html>`_ sürümünü kullanacak şekilde yükseltildi."

#: whatsnew/3.8.rst:1353
msgid ""
"New function :func:`~unicodedata.is_normalized` can be used to verify a "
"string is in a specific normal form, often much faster than by actually "
"normalizing the string.  (Contributed by Max Belanger, David Euresti, and "
"Greg Price in :issue:`32285` and :issue:`37966`)."
msgstr ""
"Yeni :func:`~unicodedata.is_normalized` fonksiyonu, bir dizenin belirli bir "
"normal formda olduğunu doğrulamak için kullanılabilir, genellikle dizeyi "
"gerçekten normalleştirmekten çok daha hızlıdır.  (Max Belanger, David "
"Euresti ve Greg Price'ın :issue:`32285` ve :issue:`37966` 'daki "
"katkılarıyla)."

#: whatsnew/3.8.rst:1360
msgid "unittest"
msgstr "unittest"

#: whatsnew/3.8.rst:1362
msgid ""
"Added :class:`~unittest.mock.AsyncMock` to support an asynchronous version "
"of :class:`~unittest.mock.Mock`.  Appropriate new assert functions for "
"testing have been added as well. (Contributed by Lisa Roach in :issue:"
"`26467`)."
msgstr ""
"Eklenen :class:`~unittest.mock.AsyncMock`, :class:`~unittest.mock.Mock` 'un "
"asenkron versiyonunu desteklemektedir.  Test için uygun yeni savunma "
"fonksiyonları da eklenmiştir. (Lisa Roach'ın :issue:`26467` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1367
msgid ""
"Added :func:`~unittest.addModuleCleanup()` and :meth:`~unittest.TestCase."
"addClassCleanup()` to unittest to support cleanups for :func:`~unittest."
"setUpModule()` and :meth:`~unittest.TestCase.setUpClass()`. (Contributed by "
"Lisa Roach in :issue:`24412`.)"
msgstr ""
"Unitteste :func:`~unittest.setUpModule()` ve :meth:`~unittest.TestCase."
"setUpClass()` için temizleme işlemlerini desteklemek üzere :func:`~unittest."
"addModuleCleanup()` ve :meth:`~unittest.TestCase.addClassCleanup()` eklendi. "
"(Lisa Roach 'un :issue:`24412` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1373
msgid ""
"Several mock assert functions now also print a list of actual calls upon "
"failure. (Contributed by Petter Strandmark in :issue:`35047`.)"
msgstr ""
"Birkaç sahte savunma fonksiyonu artık başarısızlık durumunda gerçek "
"çağrıların bir listesini de yazdırıyor. (Petter Strandmark'ın :issue:`35047` "
"'deki katkısıyla.)"

#: whatsnew/3.8.rst:1376
msgid ""
":mod:`unittest` module gained support for coroutines to be used as test "
"cases with :class:`unittest.IsolatedAsyncioTestCase`. (Contributed by Andrew "
"Svetlov in :issue:`32972`.)"
msgstr ""
":mod:`unittest` modülü, :class:`unittest.IsolatedAsyncioTestCase` ile test "
"durumları olarak kullanılacak korutinler için destek kazandı. (Andrew "
"Svetlov'un :issue:`32972` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1380
msgid "Example::"
msgstr "Örnek:"

#: whatsnew/3.8.rst:1403
msgid "venv"
msgstr "venv"

#: whatsnew/3.8.rst:1405
msgid ""
":mod:`venv` now includes an ``Activate.ps1`` script on all platforms for "
"activating virtual environments under PowerShell Core 6.1. (Contributed by "
"Brett Cannon in :issue:`32718`.)"
msgstr ""
":mod:`venv` artık PowerShell Core 6.1 altında sanal ortamları etkinleştirmek "
"için tüm platformlarda bir ``Activate.ps1`` dizesi içeriyor (Brett "
"Cannon'un :issue:`32718` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1411
msgid "weakref"
msgstr "weakref"

#: whatsnew/3.8.rst:1413
msgid ""
"The proxy objects returned by :func:`weakref.proxy` now support the matrix "
"multiplication operators ``@`` and ``@=`` in addition to the other numeric "
"operators. (Contributed by Mark Dickinson in :issue:`36669`.)"
msgstr ""
":func:`weakref.proxy` tarafından döndürülen proxy nesneleri artık diğer "
"sayısal operatörlere ek olarak ``@`` ve ``@=`` matris çarpma operatörlerini "
"de desteklemektedir. (Mark Dickinson'ın :issue:`36669` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1419
msgid "xml"
msgstr "xml"

#: whatsnew/3.8.rst:1421
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and :mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"DTD ve harici varlık alımına karşı hafifletme olarak, :mod:`xml.dom.minidom` "
"ve :mod:`xml.sax` modülleri artık varsayılan olarak harici varlıkları "
"işlememektedir. (Christian Heimes'ın :issue:`17239` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1426
msgid ""
"The ``.find*()`` methods in the :mod:`xml.etree.ElementTree` module support "
"wildcard searches like ``{*}tag`` which ignores the namespace and "
"``{namespace}*`` which returns all tags in the given namespace. (Contributed "
"by Stefan Behnel in :issue:`28238`.)"
msgstr ""
":mod:`xml.etree.ElementTree` modülündeki ``.find*()`` yöntemleri, ad alanını "
"yok sayan ``{*}tag`` ve verilen ad alanındaki tüm etiketleri döndüren "
"``{namespace}*`` gibi joker karakter aramalarını destekler. (Stefan "
"Behnel'ın :issue:`28238` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1431
msgid ""
"The :mod:`xml.etree.ElementTree` module provides a new function :func:`–xml."
"etree.ElementTree.canonicalize()` that implements C14N 2.0. (Contributed by "
"Stefan Behnel in :issue:`13611`.)"
msgstr ""
":mod:`xml.etree.ElementTree` modülü, C14N 2.0'ı uygulayan yeni bir :func:`-"
"xml.etree.ElementTree.canonicalize()` fonksiyonu sağlar. (Stefan Behnel'ın :"
"issue:`13611` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1435
msgid ""
"The target object of :class:`xml.etree.ElementTree.XMLParser` can receive "
"namespace declaration events through the new callback methods ``start_ns()`` "
"and ``end_ns()``.  Additionally, the :class:`xml.etree.ElementTree."
"TreeBuilder` target can be configured to process events about comments and "
"processing instructions to include them in the generated tree. (Contributed "
"by Stefan Behnel in :issue:`36676` and :issue:`36673`.)"
msgstr ""
":class:`xml.etree.ElementTree.XMLParser` hedef nesnesi, yeni ``start_ns()`` "
"ve ``end_ns()`` geri çağırma yöntemleri aracılığıyla ad alanı bildirimi "
"olaylarını alabilir.  Ek olarak, :class:`xml.etree.ElementTree.TreeBuilder` "
"hedefi, yorumlarla ilgili olayları ve bunları oluşturulan ağaca dahil etmek "
"için işleme talimatlarını işlemek üzere yapılandırılabilir. (Stefan "
"Behnel'ın :issue:`36676` ve :issue:`36673` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:1445
msgid "xmlrpc"
msgstr "xmlrpc"

#: whatsnew/3.8.rst:1447
msgid ""
":class:`xmlrpc.client.ServerProxy` now supports an optional *headers* "
"keyword argument for a sequence of HTTP headers to be sent with each "
"request.  Among other things, this makes it possible to upgrade from default "
"basic authentication to faster session authentication. (Contributed by "
"Cédric Krier in :issue:`35153`.)"
msgstr ""
":class:`xmlrpc.client.ServerProxy` artık her istekle birlikte gönderilecek "
"bir dizi HTTP başlığı için isteğe bağlı bir *headers* anahtar kelime "
"argümanını destekliyor.  Diğer şeylerin yanı sıra, bu, varsayılan temel "
"kimlik doğrulamasından daha hızlı oturum kimlik doğrulamasına yükseltmeyi "
"mümkün kılar. (Cédric Krier'ın :issue:`35153` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1455
msgid "Optimizations"
msgstr "Optimizasyonlar"

#: whatsnew/3.8.rst:1457
msgid ""
"The :mod:`subprocess` module can now use the :func:`os.posix_spawn` function "
"in some cases for better performance. Currently, it is only used on macOS "
"and Linux (using glibc 2.24 or newer) if all these conditions are met:"
msgstr ""
":mod:`subprocess` modülü artık daha iyi performans için bazı durumlarda :"
"func:`os.posix_spawn` fonksiyonunu kullanabilir. Şu anda, yalnızca macOS ve "
"Linux'ta (glibc 2.24 veya daha yenisini kullanan) tüm bu koşullar yerine "
"getirilirse kullanılmaktadır:"

#: whatsnew/3.8.rst:1461
msgid "*close_fds* is false;"
msgstr "*close_fds* yanlıştır;"

#: whatsnew/3.8.rst:1462
msgid ""
"*preexec_fn*, *pass_fds*, *cwd* and *start_new_session* parameters are not "
"set;"
msgstr ""
"*preexec_fn*, *pass_fds*, *cwd* ve *start_new_session* parametreleri "
"ayarlanmamış;"

#: whatsnew/3.8.rst:1464
msgid "the *executable* path contains a directory."
msgstr "*yürütülebilir* yol bir dizin içerir."

#: whatsnew/3.8.rst:1466
msgid "(Contributed by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr ""
"(Victor Stinner ve Joannah Nanjekye'nin :issue:`35537` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1468
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-"
"copy\" syscalls on Linux and macOS in order to copy the file more "
"efficiently. \"fast-copy\" means that the copying operation occurs within "
"the kernel, avoiding the use of userspace buffers in Python as in \"``outfd."
"write(infd.read())``\". On Windows :func:`shutil.copyfile` uses a bigger "
"default buffer size (1 MiB instead of 16 KiB) and a :func:`memoryview`-based "
"variant of :func:`shutil.copyfileobj` is used. The speedup for copying a 512 "
"MiB file within the same partition is about +26% on Linux, +50% on macOS and "
"+40% on Windows. Also, much less CPU cycles are consumed. See :ref:`shutil-"
"platform-dependent-efficient-copy-operations` section. (Contributed by "
"Giampaolo Rodolà in :issue:`33671`.)"
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` ve :func:`shutil.move`, dosyayı daha verimli bir şekilde "
"kopyalamak için Linux ve macOS'ta platforma özgü \"fast-copy\" sistem "
"çağrılarını kullanır. \"fast-copy\", kopyalama işleminin çekirdek içinde "
"gerçekleştiği ve Python'da \"``outfd.write(infd.read())``\" gibi kullanıcı "
"alanı tamponlarının kullanılmasından kaçınıldığı anlamına gelir. Windows "
"üzerinde :func:`shutil.copyfile` daha büyük bir varsayılan tampon boyutu "
"kullanır (16 KiB yerine 1 MiB) ve :func:`shutil.copyfileobj` 'nin :func:"
"`memoryview` tabanlı bir çeşidi kullanılır. Aynı bölüm içinde 512 MiB'lık "
"bir dosyayı kopyalamak için hızlanma yaklaşık olarak Linux'te +26%, macOS'da "
"+50% ve Windows'ta +40%'tır. Ayrıca, çok daha az CPU döngüsü tüketilir. Bkz :"
"ref:`shutil-platform-dependent-efficient-copy-operations` bölümü. (Giampaolo "
"Rodolà'nın :issue:`33671` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1484
msgid ""
":func:`shutil.copytree` uses :func:`os.scandir` function and all copy "
"functions depending from it use cached :func:`os.stat` values. The speedup "
"for copying a directory with 8000 files is around +9% on Linux, +20% on "
"Windows and +30% on a Windows SMB share. Also the number of :func:`os.stat` "
"syscalls is reduced by 38% making :func:`shutil.copytree` especially faster "
"on network filesystems. (Contributed by Giampaolo Rodolà in :issue:`33695`.)"
msgstr ""
":func:`shutil.copytree` :func:`os.scandir` fonksiyonunu kullanır ve buna "
"bağlı tüm kopyalama fonksiyonları önbelleğe alınmış :func:`os.stat` "
"değerlerini kullanır. Linux'ta 8000 dosyalık bir dizini kopyalama hız "
"değişimi +9% o, Windows'ta +20% ve Windows SMB paylaşımında +30% "
"civarındadır. Ayrıca :func:`os.stat` sistem çağrılarının sayısı %38 oranında "
"azaltılarak :func:`shutil.copytree` özellikle ağ dosya sistemlerinde daha "
"hızlı hale getirilmiştir. (Giampaolo Rodolà'nın :issue:`33695` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1491
msgid ""
"The default protocol in the :mod:`pickle` module is now Protocol 4, first "
"introduced in Python 3.4.  It offers better performance and smaller size "
"compared to Protocol 3 available since Python 3.0."
msgstr ""
":mod:`pickle` modülündeki varsayılan protokol artık ilk olarak Python 3.4'te "
"tanıtılan Protokol 4'tür.  Python 3.0'dan beri mevcut olan Protokol 3'e "
"kıyasla daha iyi performans ve daha küçük boyut sunar."

#: whatsnew/3.8.rst:1495
msgid ""
"Removed one :c:type:`Py_ssize_t` member from ``PyGC_Head``.  All GC tracked "
"objects (e.g. tuple, list, dict) size is reduced 4 or 8 bytes. (Contributed "
"by Inada Naoki in :issue:`33597`.)"
msgstr ""
"Bir :c:type:`Py_ssize_t` üyesi ``PyGC_Head`` 'den kaldırıldı.  Tüm GC "
"izlenen nesnelerin (örn. tuple, list, dict) boyutu 4 veya 8 bayt azaltıldı. "
"(Inada Naoki'nin :issue:`33597` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1499
msgid ""
":class:`uuid.UUID` now uses ``__slots__`` to reduce its memory footprint. "
"(Contributed by Wouter Bolsterlee and Tal Einat in :issue:`30977`)"
msgstr ""
":class:`uuid.UUID` artık bellek ayak izini azaltmak için ``__slots__`` "
"kullanıyor. (Wouter Bolsterlee ve Tal Einat'ın :issue:`30977` 'deki "
"katkılarıyla.)"

#: whatsnew/3.8.rst:1502
msgid ""
"Improved performance of :func:`operator.itemgetter` by 33%.  Optimized "
"argument handling and added a fast path for the common case of a single non-"
"negative integer index into a tuple (which is the typical use case in the "
"standard library).  (Contributed by Raymond Hettinger in :issue:`35664`.)"
msgstr ""
":func:`operator.itemgetter` fonksiyonunun performansı %33 oranında "
"artırıldı.  Argüman işleme optimize edildi ve bir tuple içine negatif "
"olmayan tek bir tamsayı indeksinin yaygın durumu için hızlı bir yol eklendi "
"(standart kütüphanedeki tipik kullanım durumu budur).  (Raymond "
"Hettinger'ın :issue:`35664` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1508
msgid ""
"Sped-up field lookups in :func:`collections.namedtuple`.  They are now more "
"than two times faster, making them the fastest form of instance variable "
"lookup in Python. (Contributed by Raymond Hettinger, Pablo Galindo, and Joe "
"Jevnik, Serhiy Storchaka in :issue:`32492`.)"
msgstr ""
":func:`collections.namedtuple` içindeki alan aramaları hızlandırıldı.  Artık "
"iki kattan daha hızlılar, bu da onları Python'daki en hızlı örnek değişken "
"arama biçimi haline getiriyor. (Raymond Hettinger, Pablo Galindo ve Joe "
"Jevnik, Serhiy Storchaka'nın :issue:`32492` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1513
msgid ""
"The :class:`list` constructor does not overallocate the internal item buffer "
"if the input iterable has a known length (the input implements ``__len__``). "
"This makes the created list 12% smaller on average. (Contributed by Raymond "
"Hettinger and Pablo Galindo in :issue:`33234`.)"
msgstr ""
":class:`list` kurucusu, girdi yinelenebilirinin bilinen bir uzunluğu varsa "
"(girdi ``__len__`` uygular) dahili öğe arabelleğini genel olarak ayırmaz. "
"Bu, oluşturulan listenin ortalama %12 daha küçük olmasını sağlar. (Raymond "
"Hettinger ve Pablo Galindo'nun :issue:`33234` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:1518
msgid ""
"Doubled the speed of class variable writes.  When a non-dunder attribute was "
"updated, there was an unnecessary call to update slots. (Contributed by "
"Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil Schemenauer, "
"and Serhiy Storchaka in :issue:`36012`.)"
msgstr ""
"Sınıf değişkeni yazma hızı iki katına çıkarıldı.  Dunder olmayan bir nitelik "
"güncellendiğinde, yuvaları güncellemek için gereksiz bir çağrı vardı. "
"(Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil Schemenauer "
"ve Serhiy Storchaka'nın :issue:`36012` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1523
msgid ""
"Reduced an overhead of converting arguments passed to many builtin functions "
"and methods.  This sped up calling some simple builtin functions and methods "
"up to 20--50%.  (Contributed by Serhiy Storchaka in :issue:`23867`, :issue:"
"`35582` and :issue:`36127`.)"
msgstr ""
"Birçok yerleşik fonksiyon ve metoda aktarılan argümanları dönüştürme yükü "
"azaltıldı.  Bu, bazı basit yerleşik fonksiyonların ve yöntemlerin "
"çağrılmasını %20--50'ye kadar hızlandırdı.  (Serhiy Storchaka'nın :issue:"
"`23867`, :issue:`35582` ve :issue:`36127` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1528
msgid ""
"``LOAD_GLOBAL`` instruction now uses new \"per opcode cache\" mechanism. It "
"is about 40% faster now.  (Contributed by Yury Selivanov and Inada Naoki in :"
"issue:`26219`.)"
msgstr ""
"``LOAD_GLOBAL`` komutu artık yeni \"işlem kodu başına önbellek\" "
"mekanizmasını kullanıyor. Şimdi yaklaşık 40% daha hızlı.  (Yury Selivanov ve "
"Inada Naoki'nin :issue:`26219` 'daki katkılarıyla.)"

#: whatsnew/3.8.rst:1534
msgid "Build and C API Changes"
msgstr "Derleme ve C API Değişiklikleri"

#: whatsnew/3.8.rst:1536
msgid ""
"Default :data:`sys.abiflags` became an empty string: the ``m`` flag for "
"pymalloc became useless (builds with and without pymalloc are ABI "
"compatible) and so has been removed. (Contributed by Victor Stinner in :"
"issue:`36707`.)"
msgstr ""
"Varsayılan :data:`sys.abiflags` boş bir dize haline geldi: pymalloc için "
"``m`` bayrağı işe yaramaz hale geldi (hem pymalloc içeren hem de içermeyen "
"derlemeler ABI uyumludur) ve bu nedenle kaldırıldı. (Victor Stinner'ın :"
"issue:`36707` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1540
msgid "Example of changes:"
msgstr "Değişikliklerin örneği:"

#: whatsnew/3.8.rst:1542
msgid ""
"Only ``python3.8`` program is installed, ``python3.8m`` program is gone."
msgstr ""
"Sadece ``python3.8`` programı kurulur, ``python3.8m`` programı kaldırılır."

#: whatsnew/3.8.rst:1543
msgid ""
"Only ``python3.8-config`` script is installed, ``python3.8m-config`` script "
"is gone."
msgstr ""
"Yalnızca ``python3.8-config`` dizesi yüklendi, ``python3.8m-config`` dizesi "
"gitti."

#: whatsnew/3.8.rst:1545
msgid ""
"The ``m`` flag has been removed from the suffix of dynamic library "
"filenames: extension modules in the standard library as well as those "
"produced and installed by third-party packages, like those downloaded from "
"PyPI. On Linux, for example, the Python 3.7 suffix ``.cpython-37m-x86_64-"
"linux-gnu.so`` became ``.cpython-38-x86_64-linux-gnu.so`` in Python 3.8."
msgstr ""
"Dinamik kütüphane dosya adlarının son ekinden ``m`` bayrağı kaldırıldı: "
"standart kütüphanedeki uzantı modüllerinin yanı sıra PyPI'dan indirilenler "
"gibi üçüncü taraf paketleri tarafından üretilen ve yüklenenler. Örneğin "
"Linux'ta Python 3.7 soneki ``.cpython-37m-x86_64-linux-gnu.so`` Python "
"3.8'de ``.cpython-38-x86_64-linux-gnu.so`` oldu."

#: whatsnew/3.8.rst:1552
msgid ""
"The header files have been reorganized to better separate the different "
"kinds of APIs:"
msgstr ""
"Başlık dosyaları, farklı API türlerini daha iyi ayırmak için yeniden "
"düzenlenmiştir:"

#: whatsnew/3.8.rst:1555
msgid "``Include/*.h`` should be the portable public stable C API."
msgstr "``Include/*.h``, taşınabilir genel kararlı C API'si olmalıdır."

#: whatsnew/3.8.rst:1556
msgid ""
"``Include/cpython/*.h`` should be the unstable C API specific to CPython; "
"public API, with some private API prefixed by ``_Py`` or ``_PY``."
msgstr ""
"``Include/cpython/*.h``, CPython'a özgü kararsız C API'si olmalıdır; ``_Py`` "
"veya ``_PY`` ile ön eklenmiş bazı özel API ile genel API."

#: whatsnew/3.8.rst:1558
msgid ""
"``Include/internal/*.h`` is the private internal C API very specific to "
"CPython. This API comes with no backward compatibility warranty and should "
"not be used outside CPython. It is only exposed for very specific needs like "
"debuggers and profiles which has to access to CPython internals without "
"calling functions. This API is now installed by ``make install``."
msgstr ""
"``Include/internal/*.h`` CPython'a özgü özel dahili C API'sidir. Bu API "
"geriye dönük uyumluluk garantisi olmadan gelir ve CPython dışında "
"kullanılmamalıdır. Sadece hata ayıklayıcılar ve fonksiyonları çağırmadan "
"CPython içlerine erişmek zorunda olan profiller gibi çok özel ihtiyaçlar "
"için açığa çıkar. Bu API artık ``make install`` tarafından yüklenmektedir."

#: whatsnew/3.8.rst:1564
msgid ""
"(Contributed by Victor Stinner in :issue:`35134` and :issue:`35081`, work "
"initiated by Eric Snow in Python 3.7.)"
msgstr ""
"(Eric Snow tarafından Python 3.7'de başlatılan çalışmaya :issue:`35134` ve :"
"issue:`35081` 'de Victor Stinner tarafından katkı sağlanmıştır.)"

#: whatsnew/3.8.rst:1567
msgid ""
"Some macros have been converted to static inline functions: parameter types "
"and return type are well defined, they don't have issues specific to macros, "
"variables have a local scopes. Examples:"
msgstr ""
"Bazı makrolar statik satır içi fonksiyonlara dönüştürülmüştür: parametre "
"türleri ve dönüş türü iyi tanımlanmıştır, makrolara özgü sorunları yoktur, "
"değişkenlerin yerel kapsamları vardır. Örnekler:"

#: whatsnew/3.8.rst:1571
msgid ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"
msgstr ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"

#: whatsnew/3.8.rst:1572
msgid ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"
msgstr ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"

#: whatsnew/3.8.rst:1573
msgid ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"
msgstr ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"

#: whatsnew/3.8.rst:1574
msgid ""
"Private functions: :c:func:`_PyObject_GC_TRACK`, :c:func:"
"`_PyObject_GC_UNTRACK`, :c:func:`_Py_Dealloc`"
msgstr ""
"Özel fonksiyonlar: :c:func:`_PyObject_GC_TRACK`, :c:func:"
"`_PyObject_GC_UNTRACK`, :c:func:`_Py_Dealloc`"

#: whatsnew/3.8.rst:1577
msgid "(Contributed by Victor Stinner in :issue:`35059`.)"
msgstr "(Victor Stinner'ın :issue:`35059` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1579
msgid ""
"The :c:func:`PyByteArray_Init` and :c:func:`PyByteArray_Fini` functions have "
"been removed. They did nothing since Python 2.7.4 and Python 3.2.0, were "
"excluded from the limited API (stable ABI), and were not documented. "
"(Contributed by Victor Stinner in :issue:`35713`.)"
msgstr ""
":c:func:`PyByteArray_Init` ve :c:func:`PyByteArray_Fini` fonksiyonları "
"kaldırıldı. Python 2.7.4 ve Python 3.2.0'dan bu yana hiçbir şey yapmadılar, "
"sınırlı API'den (kararlı ABI) çıkarıldılar ve belgelenmediler. (Victor "
"Stinner'ın :issue:`35713` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1584
msgid ""
"The result of :c:func:`PyExceptionClass_Name` is now of type ``const char "
"*`` rather of ``char *``. (Contributed by Serhiy Storchaka in :issue:"
"`33818`.)"
msgstr ""
":c:func:`PyExceptionClass_Name` sonucu artık ``char *`` yerine ``const char "
"*`` türündedir. (Serhiy Storchaka'nın :issue:`33818` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1588
msgid ""
"The duality of ``Modules/Setup.dist`` and ``Modules/Setup`` has been "
"removed.  Previously, when updating the CPython source tree, one had to "
"manually copy ``Modules/Setup.dist`` (inside the source tree) to ``Modules/"
"Setup`` (inside the build tree) in order to reflect any changes upstream.  "
"This was of a small benefit to packagers at the expense of a frequent "
"annoyance to developers following CPython development, as forgetting to copy "
"the file could produce build failures."
msgstr ""
"``Modules/Setup.dist`` ve ``Modules/Setup`` ikiliği kaldırıldı.  Önceden, "
"CPython kaynak ağacını güncellerken, yukarı akıştaki değişiklikleri "
"yansıtmak için ``Modules/Setup.dist`` dosyasını (kaynak ağacının içinde) "
"``Modules/Setup`` dosyasına (derleme ağacının içinde) manuel olarak "
"kopyalamak gerekiyordu.  Bu, CPython geliştirmesini takip eden "
"geliştiriciler için sık sık can sıkıntısı pahasına paketleyicilere küçük bir "
"fayda sağlıyordu, çünkü dosyayı kopyalamayı unutmak derleme hatalarına neden "
"olabiliyordu."

#: whatsnew/3.8.rst:1596
msgid ""
"Now the build system always reads from ``Modules/Setup`` inside the source "
"tree.  People who want to customize that file are encouraged to maintain "
"their changes in a git fork of CPython or as patch files, as they would do "
"for any other change to the source tree."
msgstr ""
"Artık derleme sistemi her zaman kaynak ağacının içindeki ``Modules/Setup`` "
"dosyasını okuyor.  Bu dosyayı özelleştirmek isteyen kişilerin, "
"değişikliklerini CPython'un bir git çatalında veya kaynak ağacındaki diğer "
"değişiklikler için yapacakları gibi yama dosyaları olarak sürdürmeleri "
"teşvik edilir."

#: whatsnew/3.8.rst:1601
msgid "(Contributed by Antoine Pitrou in :issue:`32430`.)"
msgstr "(Antoine Pitrou'nun :issue:`32388` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1603
msgid ""
"Functions that convert Python number to C integer like :c:func:"
"`PyLong_AsLong` and argument parsing functions like :c:func:"
"`PyArg_ParseTuple` with integer converting format units like ``'i'`` will "
"now use the :meth:`~object.__index__` special method instead of :meth:"
"`~object.__int__`, if available.  The deprecation warning will be emitted "
"for objects with the ``__int__()`` method but without the ``__index__()`` "
"method (like :class:`~decimal.Decimal` and :class:`~fractions.Fraction`).  :"
"c:func:`PyNumber_Check` will now return ``1`` for objects implementing "
"``__index__()``. :c:func:`PyNumber_Long`, :c:func:`PyNumber_Float` and :c:"
"func:`PyFloat_AsDouble` also now use the ``__index__()`` method if "
"available. (Contributed by Serhiy Storchaka in :issue:`36048` and :issue:"
"`20092`.)"
msgstr ""
":c:func:`PyLong_AsLong` gibi Python sayısını C tamsayısına dönüştüren "
"fonksiyonlar ve :c:func:`PyArg_ParseTuple` gibi ``'i'`` gibi tamsayı "
"dönüştürme format birimlerine sahip argüman ayrıştırma fonksiyonları artık "
"mümkünse :meth:`~object.__int__`  yerine :meth:`~object.__index__` özel "
"metodunu kullanacaktır.  Kullanımdan kaldırma uyarısı, ``__int__()`` yöntemi "
"olan ancak ``index__()`` yöntemi olmayan nesneler (:class:`~decimal.Decimal` "
"ve :class:`~fractions.Fraction` gibi) için verilecektir.  :c:func:"
"`PyNumber_Check` artık ``__index__()`` yöntemini uygulayan nesneler için "
"``1`` değerini döndürecektir. :c:func:`PyNumber_Long`, :c:func:"
"`PyNumber_Float` ve :c:func:`PyFloat_AsDouble` artık mümkünse "
"``__index__()`` yöntemini de kullanmaktadır. (Serhiy Storchaka'nın :issue:"
"`36048` ve :issue:`20092` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:1617
msgid ""
"Heap-allocated type objects will now increase their reference count in :c:"
"func:`PyObject_Init` (and its parallel macro ``PyObject_INIT``) instead of "
"in :c:func:`PyType_GenericAlloc`. Types that modify instance allocation or "
"deallocation may need to be adjusted. (Contributed by Eddie Elizondo in :"
"issue:`35810`.)"
msgstr ""
"Yığın tahsisli tip nesneleri artık referans sayılarını :c:func:"
"`PyType_GenericAlloc` yerine :c:func:`PyObject_Init` (ve paralel makrosu "
"``PyObject_INIT``) içinde artıracaktır. Örnek paylaştırma veya serbest "
"bırakma işlemini değiştiren türlerin ayarlanması gerekebilir. (Eddie "
"Elizondo'nun :issue:`35810` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1623
msgid ""
"The new function :c:func:`PyCode_NewWithPosOnlyArgs` allows to create code "
"objects like :c:func:`PyCode_New`, but with an extra *posonlyargcount* "
"parameter for indicating the number of positional-only arguments. "
"(Contributed by Pablo Galindo in :issue:`37221`.)"
msgstr ""
"Yeni :c:func:`PyCode_NewWithPosOnlyArgs` fonksiyonu, :c:func:`PyCode_New` "
"gibi kod nesneleri oluşturmaya izin verir, ancak yalnızca konumsal bağımsız "
"değişkenlerin sayısını belirtmek için fazladan bir *posonlyargcount* "
"parametresi içerir. (Pablo Galindo'nun :issue:`37221` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1628
msgid ""
":c:func:`Py_SetPath` now sets :data:`sys.executable` to the program full "
"path (:c:func:`Py_GetProgramFullPath`) rather than to the program name (:c:"
"func:`Py_GetProgramName`). (Contributed by Victor Stinner in :issue:`38234`.)"
msgstr ""
":c:func:`Py_SetPath` artık :data:`sys.executable` 'ı program adına (:c:func:"
"`Py_GetProgramName`) yerine programın tam yoluna (:c:func:"
"`Py_GetProgramFullPath`) ayarlıyor. (Victor Stinner'ın :issue:`38234` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1635
msgid "Deprecated"
msgstr "Kullanımdan kaldırıldı"

#: whatsnew/3.8.rst:1637
msgid ""
"The distutils ``bdist_wininst`` command is now deprecated, use "
"``bdist_wheel`` (wheel packages) instead. (Contributed by Victor Stinner in :"
"issue:`37481`.)"
msgstr ""
"Distutils ``bdist_wininst`` komutu artık kullanımdan kaldırılmıştır, bunun "
"yerine ``bdist_wheel`` (tekerlek paketleri) kullanın. (Victor Stinner'ın :"
"issue:`37481` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1641
msgid ""
"Deprecated methods ``getchildren()`` and ``getiterator()`` in the :mod:`~xml."
"etree.ElementTree` module now emit a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`. They will be removed in Python 3.9. "
"(Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
":mod:`~xml.etree.ElementTree` modülündeki kullanımdan kaldırılan "
"``getchildren()`` ve ``getiterator()`` yöntemleri artık :exc:"
"`PendingDeprecationWarning` yerine bir :exc:`DeprecationWarning` yayıyor. "
"Python 3.9'da kaldırılacaklar. (Serhiy Storchaka'nın :issue:`29209` 'daki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1647
msgid ""
"Passing an object that is not an instance of :class:`concurrent.futures."
"ThreadPoolExecutor` to :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` is deprecated and will be prohibited in Python 3.9. "
"(Contributed by Elvis Pranskevichus in :issue:`34075`.)"
msgstr ""
"Bir :class:`concurrent.futures.ThreadPoolExecutor` örneği olmayan bir "
"nesneyi :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` 'a geçirmek kullanımdan kaldırılmıştır ve Python "
"3.9'da yasaklanacaktır. (Elvis Pranskevichus'un :issue:`34075` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1653
msgid ""
"The :meth:`__getitem__` methods of :class:`xml.dom.pulldom.DOMEventStream`, :"
"class:`wsgiref.util.FileWrapper` and :class:`fileinput.FileInput` have been "
"deprecated."
msgstr ""
":class:`xml.dom.pulldom.DOMEventStream`, :class:`wsgiref.util.FileWrapper` "
"ve :class:`fileinput.FileInput` metotlarının :meth:`__getitem__` metotları "
"kullanımdan kaldırılmıştır."

#: whatsnew/3.8.rst:1657
msgid ""
"Implementations of these methods have been ignoring their *index* parameter, "
"and returning the next item instead. (Contributed by Berker Peksag in :issue:"
"`9372`.)"
msgstr ""
"Bu yöntemlerin uygulamaları *index* parametresini yok saymakta ve bunun "
"yerine bir sonraki öğeyi döndürmektedir. (Berker Peksag'ın :issue:`9372` "
"'deki katkısıyla.)"

#: whatsnew/3.8.rst:1661
msgid ""
"The :class:`typing.NamedTuple` class has deprecated the ``_field_types`` "
"attribute in favor of the ``__annotations__`` attribute which has the same "
"information. (Contributed by Raymond Hettinger in :issue:`36320`.)"
msgstr ""
":class:`typing.NamedTuple` sınıfı, aynı bilgileri içeren ``__annotations__`` "
"niteliği lehine ``_field_types`` niteliğini kullanımdan kaldırmıştır. "
"(Raymond Hettinger'ın :issue:`36320` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1665
msgid ""
":mod:`ast` classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` and "
"``Ellipsis`` are considered deprecated and will be removed in future Python "
"versions. :class:`~ast.Constant` should be used instead. (Contributed by "
"Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
":mod:`ast` sınıfları ``Num``, ``Str``, ``Bytes``, ``NameConstant`` ve "
"``Ellipsis`` kullanımdan kaldırılmıştır ve gelecek Python sürümlerinde "
"kaldırılacaktır. Yerine :class:`~ast.Constant` kullanılmalıdır. (Serhiy "
"Storchaka'nın :issue:`32892` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1670
msgid ""
":class:`ast.NodeVisitor` methods ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` and ``visit_Ellipsis()`` are "
"deprecated now and will not be called in future Python versions. Add the :"
"meth:`~ast.NodeVisitor.visit_Constant` method to handle all constant nodes. "
"(Contributed by Serhiy Storchaka in :issue:`36917`.)"
msgstr ""
":class:`ast.NodeVisitor` metotları ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` ve ``visit_Ellipsis()`` artık "
"kullanımdan kaldırılmıştır ve gelecekteki Python sürümlerinde "
"çağrılmayacaktır. Tüm sabit düğümleri işlemek için :meth:`~ast.NodeVisitor."
"visit_Constant` yöntemini ekleyin. (Serhiy Storchaka'nın :issue:`36917` "
"'deki katkısıyla.)"

#: whatsnew/3.8.rst:1677
msgid ""
"The :func:`asyncio.coroutine` :term:`decorator` is deprecated and will be "
"removed in version 3.10.  Instead of ``@asyncio.coroutine``, use :keyword:"
"`async def` instead. (Contributed by Andrew Svetlov in :issue:`36921`.)"
msgstr ""
":func:`asyncio.coroutine` :term:`decorator` kullanımdan kaldırılmıştır ve "
"3.10 sürümünde kaldırılacaktır.  ``@asyncio.coroutine`` yerine :keyword:"
"`async def` kullanın. (Andrew Svetlov'un :issue:`36921` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1682
msgid ""
"In :mod:`asyncio`, the explicit passing of a *loop* argument has been "
"deprecated and will be removed in version 3.10 for the following: :func:"
"`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, :func:"
"`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio.as_completed`, :"
"class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio.Event`, :class:"
"`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:`asyncio."
"BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec`, and :func:`asyncio.create_subprocess_shell`."
msgstr ""
":mod:`asyncio` içinde, bir *loop* argümanının açıkça geçilmesi kullanımdan "
"kaldırılmıştır ve 3.10 sürümünde aşağıdakiler için kaldırılacaktır: :func:"
"`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, :func:"
"`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio.as_completed`, :"
"class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio.Event`, :class:"
"`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:`asyncio."
"BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec`, ve :func:`asyncio.create_subprocess_shell`."

#: whatsnew/3.8.rst:1692
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov in :issue:`34790`.)"
msgstr ""
"Korutin nesnelerinin :func:`asyncio.wait` 'e açık bir şekilde aktarılması "
"kullanımdan kaldırılmıştır ve 3.11 sürümünde kaldırılacaktır (Yury "
"Selivanov'un :issue:`34790` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1696
msgid ""
"The following functions and methods are deprecated in the :mod:`gettext` "
"module: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:"
"`~gettext.lngettext` and :func:`~gettext.ldngettext`. They return encoded "
"bytes, and it's possible that you will get unexpected Unicode-related "
"exceptions if there are encoding problems with the translated strings. It's "
"much better to use alternatives which return Unicode strings in Python 3. "
"These functions have been broken for a long time."
msgstr ""
"Aşağıdaki fonksiyonlar ve yöntemler :mod:`gettext` modülünde kullanımdan "
"kaldırılmıştır: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:"
"`~gettext.lngettext` ve :func:`~gettext.ldngettext`. Bunlar kodlanmış "
"baytlar döndürür ve çevrilen dizelerde kodlama sorunları varsa Unicode ile "
"ilgili beklenmedik istisnalar almanız olasıdır. Python 3'te Unicode "
"dizgileri döndüren alternatifleri kullanmak çok daha iyidir. Bu fonksiyonlar "
"uzun süredir bozuk."

#: whatsnew/3.8.rst:1704
msgid ""
"Function :func:`~gettext.bind_textdomain_codeset`, methods :meth:`~gettext."
"NullTranslations.output_charset` and :meth:`~gettext.NullTranslations."
"set_output_charset`, and the *codeset* parameter of functions :func:"
"`~gettext.translation` and :func:`~gettext.install` are also deprecated, "
"since they are only used for the ``l*gettext()`` functions. (Contributed by "
"Serhiy Storchaka in :issue:`33710`.)"
msgstr ""
":func:`~gettext.bind_textdomain_codeset` fonksiyonu, :meth:`~gettext."
"NullTranslations.output_charset` ve :meth:`~gettext.NullTranslations."
"set_output_charset` yöntemleri ve :func:`~gettext.translation` ve :func:"
"`~gettext.install` fonksiyonlarının *codeset* parametresi de yalnızca "
"``l*gettext()`` fonksiyonları için kullanıldığından kullanımdan "
"kaldırılmıştır. (Serhiy Storchaka'nın :issue:`33710` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1712
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been deprecated. (Contributed by Dong-hee Na in :issue:`35283`.)"
msgstr ""
":class:`threading.Thread` metodunun :meth:`~threading.Thread.isAlive()` "
"metodu kullanımdan kaldırılmıştır. (Dong-hee Na'nın :issue:`35283` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1716
msgid ""
"Many builtin and extension functions that take integer arguments will now "
"emit a deprecation warning for :class:`~decimal.Decimal`\\ s, :class:"
"`~fractions.Fraction`\\ s and any other objects that can be converted to "
"integers only with a loss (e.g. that have the :meth:`~object.__int__` method "
"but do not have the :meth:`~object.__index__` method).  In future version "
"they will be errors. (Contributed by Serhiy Storchaka in :issue:`36048`.)"
msgstr ""
"Tamsayı argümanları alan birçok yerleşik ve uzantı fonksiyonu artık :class:"
"`~decimal.Decimal`, :class:`~fractions.Fraction` ve yalnızca bir kayıpla "
"tamsayılara dönüştürülebilen diğer nesneler (örneğin :meth:`~object.__int__` "
"yöntemine sahip olan ancak :meth:`~object.__index__` yöntemine sahip "
"olmayan) için bir kullanımdan kaldırma uyarısı verecektir.  Gelecek sürümde "
"bunlar hata olacaktır. (Serhiy Storchaka'nın :issue:`36048` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1724
msgid "Deprecated passing the following arguments as keyword arguments:"
msgstr ""
"Aşağıdaki bağımsız değişkenlerin anahtar sözcük bağımsız değişkenleri olarak "
"iletilmesi kullanımdan kaldırılmıştır:"

#: whatsnew/3.8.rst:1726
msgid ""
"*func* in :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` and :func:`curses.wrapper`."
msgstr ""
"*func* in :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` and :func:`curses.wrapper`."

#: whatsnew/3.8.rst:1730
msgid "*function* in :meth:`unittest.TestCase.addCleanup`."
msgstr ":meth:`unittest.TestCase.addCleanup` içindeki *fonksiyon*."

#: whatsnew/3.8.rst:1731
msgid ""
"*fn* in the :meth:`~concurrent.futures.Executor.submit` method of :class:"
"`concurrent.futures.ThreadPoolExecutor` and :class:`concurrent.futures."
"ProcessPoolExecutor`."
msgstr ""
"*fn* içinde :meth:`~concurrent.futures.Executor.submit` yöntemi :class:"
"`concurrent.futures.ThreadPoolExecutor` ve :class:`concurrent.futures."
"ProcessPoolExecutor`."

#: whatsnew/3.8.rst:1734
msgid ""
"*callback* in :meth:`contextlib.ExitStack.callback`, :meth:`contextlib."
"AsyncExitStack.callback` and :meth:`contextlib.AsyncExitStack."
"push_async_callback`."
msgstr ""
":meth:`contextlib.ExitStack.callback`, :meth:`contextlib.AsyncExitStack."
"callback` ve :meth:`contextlib.AsyncExitStack.push_async_callback` içinde "
"*geri arama*."

#: whatsnew/3.8.rst:1737
msgid ""
"*c* and *typeid* in the :meth:`~multiprocessing.managers.Server.create` "
"method of :class:`multiprocessing.managers.Server` and :class:"
"`multiprocessing.managers.SharedMemoryServer`."
msgstr ""
"*c* ve *typeid* öğeleri :class:`multiprocessing.managers.Server` ve :class:"
"`multiprocessing.managers.SharedMemoryServer` öğelerinin :meth:"
"`~multiprocessing.managers.Server.create` yönteminde yer alır."

#: whatsnew/3.8.rst:1740
msgid "*obj* in :func:`weakref.finalize`."
msgstr ":func:`weakref.finalize` içindeki *obj*."

#: whatsnew/3.8.rst:1742
msgid ""
"In future releases of Python, they will be :ref:`positional-only <positional-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`36492`.)"
msgstr ""
"Python'un gelecekteki sürümlerinde, bunlar :ref:`positional-only <positional-"
"only_parameter>` olacaktır. (Serhiy Storchaka'nın :issue:`36492` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1748
msgid "API and Feature Removals"
msgstr "API ve Özellik Kaldırmaları"

#: whatsnew/3.8.rst:1750
msgid "The following features and APIs have been removed from Python 3.8:"
msgstr "Aşağıdaki özellikler ve API'ler Python 3.8'den kaldırılmıştır:"

#: whatsnew/3.8.rst:1752
msgid ""
"Starting with Python 3.3, importing ABCs from :mod:`collections` was "
"deprecated, and importing should be done from :mod:`collections.abc`. Being "
"able to import from collections was marked for removal in 3.8, but has been "
"delayed to 3.9. (See :issue:`36952`.)"
msgstr ""
"Python 3.3 ile başlayarak, ABC'leri :mod:`collections` 'dan içe aktarmak "
"kullanımdan kaldırıldı ve içe aktarma :mod:`collections.abc` 'den "
"yapılmalıdır. Koleksiyonlardan içe aktarabilmek 3.8'de kaldırılmak üzere "
"işaretlenmişti, ancak 3.9'a ertelendi. (Bkz. :issue:`36952`.)"

#: whatsnew/3.8.rst:1757
msgid ""
"The :mod:`macpath` module, deprecated in Python 3.7, has been removed. "
"(Contributed by Victor Stinner in :issue:`35471`.)"
msgstr ""
"Python 3.7'de kullanımdan kaldırılan :mod:`macpath` modülü kaldırıldı. "
"(Victor Stinner'ın :issue:`35471` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1879
msgid ""
"The function :func:`platform.popen` has been removed, after having been "
"deprecated since Python 3.3: use :func:`os.popen` instead. (Contributed by "
"Victor Stinner in :issue:`35345`.)"
msgstr ""
"Python 3.3'ten beri kullanımda olmayan  :func:`platform.popen` fonksiyonu "
"kaldırıldı: bunun yerine :func:`os.popen` kullanın. (Victor Stinner'ın :"
"issue:`35345` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1764
msgid ""
"The function :func:`time.clock` has been removed, after having been "
"deprecated since Python 3.3: use :func:`time.perf_counter` or :func:`time."
"process_time` instead, depending on your requirements, to have well-defined "
"behavior. (Contributed by Matthias Bussonnier in :issue:`36895`.)"
msgstr ""
"Python 3.3'ten beri kullanımdan kaldırılan :func:`time.clock` fonksiyonu "
"kaldırıldı: iyi tanımlanmış davranışa sahip olmak için gereksinimlerinize "
"bağlı olarak bunun yerine :func:`time.perf_counter` veya :func:`time."
"process_time` kullanın. (Matthias Bussonnier'ın :issue:`36895` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1770
msgid ""
"The ``pyvenv`` script has been removed in favor of ``python3.8 -m venv`` to "
"help eliminate confusion as to what Python interpreter the ``pyvenv`` script "
"is tied to. (Contributed by Brett Cannon in :issue:`25427`.)"
msgstr ""
"``pyvenv`` betiğinin hangi Python yorumlayıcısına bağlı olduğu konusundaki "
"karışıklığı ortadan kaldırmak için ``python3.8 -m venv`` betiği lehine "
"``pyvenv`` betiği kaldırıldı. (Brett Cannon'ın :issue:`25427` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1774
msgid ""
"``parse_qs``, ``parse_qsl``, and ``escape`` are removed from the :mod:`cgi` "
"module.  They are deprecated in Python 3.2 or older. They should be imported "
"from the ``urllib.parse`` and ``html`` modules instead."
msgstr ""
"``parse_qs``, ``parse_qsl`` ve ``escape`` :mod:`cgi` modülünden "
"kaldırılmıştır.  Python 3.2 veya daha eski sürümlerde kullanımdan "
"kaldırılmışlardır. Bunun yerine ``urllib.parse`` ve ``html`` modüllerinden "
"içe aktarılmalıdırlar."

#: whatsnew/3.8.rst:1778
msgid ""
"``filemode`` function is removed from the :mod:`tarfile` module. It is not "
"documented and deprecated since Python 3.3."
msgstr ""
"``filemode`` fonksiyonu :mod:`tarfile` modülünden kaldırılmıştır. Python "
"3.3'ten beri belgelenmemiştir ve kullanımdan kaldırılmıştır."

#: whatsnew/3.8.rst:1781
msgid ""
"The :class:`~xml.etree.ElementTree.XMLParser` constructor no longer accepts "
"the *html* argument.  It never had an effect and was deprecated in Python "
"3.4. All other parameters are now :ref:`keyword-only <keyword-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
":class:`~xml.etree.ElementTree.XMLParser` yapıcısı artık *html* argümanını "
"kabul etmiyor.  Hiçbir zaman bir etkisi olmadı ve Python 3.4'te kullanımdan "
"kaldırıldı. Diğer tüm parametreler artık :ref:`keyword-only <keyword-"
"only_parameter>` şeklindedir. (Serhiy Storchaka'nın :issue:`29209` 'daki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1786
msgid ""
"Removed the ``doctype()`` method of :class:`~xml.etree.ElementTree."
"XMLParser`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
":class:`~xml.etree.ElementTree.XMLParser` metodunun ``doctype()`` metodu "
"kaldırıldı. (Serhiy Storchaka'nın :issue:`29209` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1789
msgid ""
"\"unicode_internal\" codec is removed. (Contributed by Inada Naoki in :issue:"
"`36297`.)"
msgstr ""
"\"unicode_internal\" codec'i kaldırıldı. (Inada Naoki'nin :issue:`36297` "
"'deki katkısıyla.)"

#: whatsnew/3.8.rst:1792
msgid ""
"The ``Cache`` and ``Statement`` objects of the :mod:`sqlite3` module are not "
"exposed to the user. (Contributed by Aviv Palivoda in :issue:`30262`.)"
msgstr ""
":mod:`sqlite3` modülünün ``Cache`` ve ``Statement`` nesneleri kullanıcıya "
"açık değildir. (Aviv Palivoda'nın :issue:`30262` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1796
msgid ""
"The ``bufsize`` keyword argument of :func:`fileinput.input` and :func:"
"`fileinput.FileInput` which was ignored and deprecated since Python 3.6 has "
"been removed. :issue:`36952` (Contributed by Matthias Bussonnier.)"
msgstr ""
"Python 3.6'dan beri göz ardı edilen ve kullanımdan kaldırılan :func:"
"`fileinput.input` ve :func:`fileinput.FileInput` anahtar kelime argümanı "
"``bufsize`` kaldırıldı. :issue:`36952` (Matthias Bussonnier'ın katkısıyla.)"

#: whatsnew/3.8.rst:1800
msgid ""
"The functions :func:`sys.set_coroutine_wrapper` and :func:`sys."
"get_coroutine_wrapper` deprecated in Python 3.7 have been removed; :issue:"
"`36933` (Contributed by Matthias Bussonnier.)"
msgstr ""
"Python 3.7'de kullanımdan kaldırılan :func:`sys.set_coroutine_wrapper` ve :"
"func:`sys.get_coroutine_wrapper` fonksiyonları kaldırıldı; :issue:`36933` "
"(Matthias Bussonnier'ın katkısıyla.)"

#: whatsnew/3.8.rst:1806
msgid "Porting to Python 3.8"
msgstr "Python 3.8'e Taşıma"

#: whatsnew/3.8.rst:1808
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Bu bölüm, daha önce açıklanan değişiklikleri ve kodunuzda değişiklik "
"gerektirebilecek diğer hata düzeltmelerini listeler."

#: whatsnew/3.8.rst:1813
msgid "Changes in Python behavior"
msgstr "Python davranışındaki değişiklikler"

#: whatsnew/3.8.rst:1815
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"disallowed in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`!for` clause). (Contributed by "
"Serhiy Storchaka in :issue:`10544`.)"
msgstr ""
"Yield ifadelerine (hem ``yield`` hem de ``yield from`` cümleleri) artık "
"anlamalarda ve oluşturucu ifadelerinde (en soldaki :keyword:`!for` "
"cümlesindeki yinelenebilir ifadesi dışında) izin verilmemektedir. (Serhiy "
"Storchaka'nın :issue:`10544` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1820
msgid ""
"The compiler now produces a :exc:`SyntaxWarning` when identity checks "
"(``is`` and ``is not``) are used with certain types of literals (e.g. "
"strings, numbers).  These can often work by accident in CPython, but are not "
"guaranteed by the language spec.  The warning advises users to use equality "
"tests (``==`` and ``!=``) instead. (Contributed by Serhiy Storchaka in :"
"issue:`34850`.)"
msgstr ""
"Derleyici artık kimlik kontrolleri (``is`` ve ``is not``) belirli türdeki "
"değişmezlerle (örneğin dizeler, sayılar) kullanıldığında bir :exc:"
"`SyntaxWarning` üretiyor.  Bunlar CPython'da genellikle kazara çalışabilir, "
"ancak dil özellikleri tarafından garanti edilmez.  Uyarı, kullanıcılara "
"bunun yerine eşitlik testlerini (``==`` ve ``!=``) kullanmalarını önerir. "
"(Serhiy Storchaka'nın :issue:`34850` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1827
msgid ""
"The CPython interpreter can swallow exceptions in some circumstances. In "
"Python 3.8 this happens in fewer cases.  In particular, exceptions raised "
"when getting the attribute from the type dictionary are no longer ignored. "
"(Contributed by Serhiy Storchaka in :issue:`35459`.)"
msgstr ""
"CPython yorumlayıcısı bazı durumlarda istisnaları yutabilir. Python 3.8'de "
"bu daha az durumda gerçekleşir.  Özellikle, tip sözlüğünden öznitelik "
"alınırken ortaya çıkan istisnalar artık göz ardı edilmiyor. (Serhiy "
"Storchaka'nın :issue:`35459` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1832
msgid ""
"Removed ``__str__`` implementations from builtin types :class:`bool`, :class:"
"`int`, :class:`float`, :class:`complex` and few classes from the standard "
"library.  They now inherit ``__str__()`` from :class:`object`. As result, "
"defining the ``__repr__()`` method in the subclass of these classes will "
"affect their string representation. (Contributed by Serhiy Storchaka in :"
"issue:`36793`.)"
msgstr ""
":class:`bool`, :class:`int`, :class:`float`, :class:`complex` yerleşik "
"türlerinden ve standart kütüphanedeki birkaç sınıftan ``__str__`` "
"uygulamaları kaldırıldı.  Bunlar artık :class:`object` türünden "
"``__str__()`` miras almaktadır. Sonuç olarak, bu sınıfların alt sınıflarında "
"``__repr__()`` metodunu tanımlamak onların string gösterimlerini "
"etkileyecektir. (Serhiy Storchaka'nın :issue:`36793` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1839
msgid ""
"On AIX, :attr:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'aix'``, instead of ``'aix3'`` .. ``'aix7'``.  Since older "
"Python versions include the version number, so it is recommended to always "
"use ``sys.platform.startswith('aix')``. (Contributed by M. Felt in :issue:"
"`36588`.)"
msgstr ""
"AIX üzerinde, :attr:`sys.platform` artık ana sürümü içermemektedir. Bu her "
"zaman ``'aix3'`` ... ``'aix7'`` yerine ``'aix'`` şeklindedir.  Eski Python "
"sürümleri sürüm numarasını içerdiğinden, her zaman ``sys.platform."
"startswith('aix')`` kullanılması önerilir. (M. Felt'in :issue:`36588` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1845
msgid ""
":c:func:`PyEval_AcquireLock` and :c:func:`PyEval_AcquireThread` now "
"terminate the current thread if called while the interpreter is finalizing, "
"making them consistent with :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS`, and :c:func:`PyGILState_Ensure`. If this behavior is "
"not desired, guard the call by checking :c:func:`_Py_IsFinalizing` or :c:"
"func:`sys.is_finalizing`. (Contributed by Joannah Nanjekye in :issue:"
"`36475`.)"
msgstr ""
":c:func:`PyEval_AcquireLock` ve :c:func:`PyEval_AcquireThread` artık "
"yorumlayıcı sonlandırılırken çağrılırsa geçerli iş parçacığını "
"sonlandırarak :c:func:`PyEval_RestoreThread`, :c:func:`Py_END_ALLOW_THREADS` "
"ve :c:func:`PyGILState_Ensure` ile tutarlı hale geliyor. Bu davranış "
"istenmiyorsa, :c:func:`_Py_IsFinalizing` veya :c:func:`sys.is_finalizing` "
"kontrolünü yaparak çağrıyı koruyun. (Joannah Nanjekye'nin :issue:`36475` "
"'teki katkısıyla.)"

#: whatsnew/3.8.rst:1855
msgid "Changes in the Python API"
msgstr "Python API'sindeki değişiklikler"

#: whatsnew/3.8.rst:1857
msgid ""
"The :func:`os.getcwdb` function now uses the UTF-8 encoding on Windows, "
"rather than the ANSI code page: see :pep:`529` for the rationale. The "
"function is no longer deprecated on Windows. (Contributed by Victor Stinner "
"in :issue:`37412`.)"
msgstr ""
":func:`os.getcwdb` fonksiyonu artık Windows'ta ANSI kod sayfası yerine UTF-8 "
"kodlamasını kullanıyor: gerekçe için bkz. :pep:`529`. İşlev artık Windows'ta "
"kullanımdan kaldırılmamıştır. (Victor Stinner'ın :issue:`37412` 'deki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1862
msgid ""
":class:`subprocess.Popen` can now use :func:`os.posix_spawn` in some cases "
"for better performance. On Windows Subsystem for Linux and QEMU User "
"Emulation, the :class:`Popen` constructor using :func:`os.posix_spawn` no "
"longer raises an exception on errors like \"missing program\".  Instead the "
"child process fails with a non-zero :attr:`~Popen.returncode`. (Contributed "
"by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr ""
":class:`subprocess.Popen` artık daha iyi performans için bazı durumlarda :"
"func:`os.posix_spawn` kullanabilir. Linux ve QEMU Kullanıcı Emülasyonu için "
"Windows Alt Sisteminde, :func:`os.posix_spawn` kullanan :class:`Popen` "
"kurucusu artık \"eksik program\" gibi hatalarda bir istisna oluşturmuyor.  "
"Bunun yerine alt süreç sıfır olmayan bir :attr:`~Popen.returncode` ile "
"başarısız olur. (Joannah Nanjekye ve Victor Stinner'ın :issue:`35537` 'deki "
"katkılarıyla.)"

#: whatsnew/3.8.rst:1869
msgid ""
"The *preexec_fn* argument of * :class:`subprocess.Popen` is no longer "
"compatible with subinterpreters. The use of the parameter in a "
"subinterpreter now raises :exc:`RuntimeError`. (Contributed by Eric Snow in :"
"issue:`34651`, modified by Christian Heimes in :issue:`37951`.)"
msgstr ""
":class:`subprocess.Popen` parametresinin *preexec_fn* argümanı artık alt "
"yorumlayıcılarla uyumlu değildir. Parametrenin bir alt yorumlayıcıda "
"kullanılması artık :exc:`RuntimeError` uyarısı veriyor. (Eric Snow "
"tarafından :issue:`34651` 'de katkıda bulunulmuş, Christian Heimes "
"tarafından :issue:`37951` 'de değiştirilmiştir.)"

#: whatsnew/3.8.rst:1875
msgid ""
"The :meth:`imap.IMAP4.logout` method no longer silently ignores arbitrary "
"exceptions. (Contributed by Victor Stinner in :issue:`36348`.)"
msgstr ""
":meth:`imap.IMAP4.logout` yöntemi artık keyfi istisnaları sessizce yok "
"saymaz. (Victor Stinner'ın :issue:`36348` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1883
msgid ""
"The :func:`statistics.mode` function no longer raises an exception when "
"given multimodal data.  Instead, it returns the first mode encountered in "
"the input data.  (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
":func:`statistics.mode` fonksiyonu artık çok modlu veriler verildiğinde bir "
"istisna oluşturmuyor.  Bunun yerine, girdi verilerinde karşılaşılan ilk modu "
"döndürür.  (Raymond Hettinger'ın :issue:`35892` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1888
msgid ""
"The :meth:`~tkinter.ttk.Treeview.selection` method of the :class:`tkinter."
"ttk.Treeview` class no longer takes arguments.  Using it with arguments for "
"changing the selection was deprecated in Python 3.6.  Use specialized "
"methods like :meth:`~tkinter.ttk.Treeview.selection_set` for changing the "
"selection.  (Contributed by Serhiy Storchaka in :issue:`31508`.)"
msgstr ""
":class:`tkinter.ttk.Treeview` sınıfının :meth:`~tkinter.ttk.Treeview."
"selection` yöntemi artık argüman almıyor.  Seçimi değiştirmek için "
"argümanlarla kullanılması Python 3.6'da kullanımdan kaldırılmıştır.  Seçimi "
"değiştirmek için :meth:`~tkinter.ttk.Treeview.selection_set` gibi özel "
"yöntemler kullanın.  (Serhiy Storchaka'ın :issue:`31508` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1894
msgid ""
"The :meth:`writexml`, :meth:`toxml` and :meth:`toprettyxml` methods of :mod:"
"`xml.dom.minidom`, and the :meth:`write` method of :mod:`xml.etree`, now "
"preserve the attribute order specified by the user. (Contributed by Diego "
"Rojas and Raymond Hettinger in :issue:`34160`.)"
msgstr ""
":mod:`xml.dom.minidom` metodunun :meth:`writexml`, :meth:`toxml` ve :meth:"
"`toprettyxml` metotları ve :mod:`xml.etree` metodunun :meth:`write` metodu "
"artık kullanıcı tarafından belirtilen öznitelik sırasını korumaktadır. "
"(Diego Rojas ve Raymond Hettinger'ın :issue:`34160` 'daki katkılarıyla.)"

#: whatsnew/3.8.rst:1899
msgid ""
"A :mod:`dbm.dumb` database opened with flags ``'r'`` is now read-only. :func:"
"`dbm.dumb.open` with flags ``'r'`` and ``'w'`` no longer creates a database "
"if it does not exist. (Contributed by Serhiy Storchaka in :issue:`32749`.)"
msgstr ""
"Bir :mod:`dbm.dumb` veritabanı ``'r'`` bayraklarıyla açıldığında artık salt "
"okunurdur. :func:`dbm.dumb.open`, ``'r'`` ve ``'w'`` bayraklarıyla artık "
"mevcut değilse bir veritabanı oluşturmaz. (Serhiy Storchaka'nın :issue:"
"`32749` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1904
msgid ""
"The ``doctype()`` method defined in a subclass of :class:`~xml.etree."
"ElementTree.XMLParser` will no longer be called and will emit a :exc:"
"`RuntimeWarning` instead of a :exc:`DeprecationWarning`. Define the :meth:"
"`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` method on a target "
"for handling an XML doctype declaration. (Contributed by Serhiy Storchaka "
"in :issue:`29209`.)"
msgstr ""
":class:`~xml.etree.ElementTree.XMLParser` alt sınıfında tanımlanan "
"``doctype()`` yöntemi artık çağrılmayacak ve bir :exc:`DeprecationWarning` "
"yerine bir :exc:`RuntimeWarning` yayacaktır. Bir XML doctype bildirimini "
"işlemek için bir hedef üzerinde :meth:`doctype() <xml.etree.ElementTree."
"TreeBuilder.doctype>` yöntemini tanımlayın. (Serhiy Storchaka'nın :issue:"
"`29209` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:1911
msgid ""
"A :exc:`RuntimeError` is now raised when the custom metaclass doesn't "
"provide the ``__classcell__`` entry in the namespace passed to ``type."
"__new__``.  A :exc:`DeprecationWarning` was emitted in Python 3.6--3.7.  "
"(Contributed by Serhiy Storchaka in :issue:`23722`.)"
msgstr ""
"Özel metaclass, ``type.__new__`` 'e aktarılan ad alanında ``__classcell__`` "
"girdisini sağlamadığında artık bir :exc:`RuntimeError` ortaya çıkıyor.  Bir :"
"exc:`DeprecationWarning` Python 3.6--3.7` 'de yayınlandı (Serhiy "
"Storchaka'nın :issue:`23722` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1916
msgid ""
"The :class:`cProfile.Profile` class can now be used as a context manager. "
"(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr ""
":class:`cProfile.Profile` sınıfı artık bir bağlam yöneticisi olarak "
"kullanılabilir. (Scott Sanderson'ın :issue:`29235` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1919
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-"
"copy\" syscalls (see :ref:`shutil-platform-dependent-efficient-copy-"
"operations` section)."
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` ve :func:`shutil.move` platforma özgü \"fast-copy\" sistem "
"çağrılarını kullanır (bkz. :ref:`shutil-platform-dependent-efficient-copy-"
"operations` bölümü)."

#: whatsnew/3.8.rst:1924
msgid ""
":func:`shutil.copyfile` default buffer size on Windows was changed from 16 "
"KiB to 1 MiB."
msgstr ""
":func:`shutil.copyfile` Windows üzerindeki varsayılan tampon boyutu 16 "
"KiB'den 1 MiB'ye değiştirildi."

#: whatsnew/3.8.rst:1927
msgid ""
"The ``PyGC_Head`` struct has changed completely.  All code that touched the "
"struct member should be rewritten.  (See :issue:`33597`.)"
msgstr ""
"``PyGC_Head`` yapısı tamamen değişti.  Bu yapı üyesine dokunan tüm kodlar "
"yeniden yazılmalıdır.  (Bkz :issue:`33597`.)"

#: whatsnew/3.8.rst:1930
msgid ""
"The :c:type:`PyInterpreterState` struct has been moved into the \"internal\" "
"header files (specifically Include/internal/pycore_pystate.h).  An opaque "
"``PyInterpreterState`` is still available as part of the public API (and "
"stable ABI).  The docs indicate that none of the struct's fields are public, "
"so we hope no one has been using them.  However, if you do rely on one or "
"more of those private fields and have no alternative then please open a BPO "
"issue.  We'll work on helping you adjust (possibly including adding accessor "
"functions to the public API).  (See :issue:`35886`.)"
msgstr ""
":c:type:`PyInterpreterState` yapısı \"dahili\" başlık dosyalarına "
"taşınmıştır (özellikle Include/internal/pycore_pystate.h).  Opak bir "
"``PyInterpreterState`` hala genel API'nin (ve kararlı ABI'nin) bir parçası "
"olarak mevcuttur.  Dokümanlar, yapının hiçbir alanının herkese açık "
"olmadığını belirtmektedir, bu nedenle kimsenin bunları kullanmadığını "
"umuyoruz.  Ancak, bu özel alanlardan birine veya daha fazlasına "
"güveniyorsanız ve alternatifiniz yoksa, lütfen bir BPO sorunu açın.  "
"Ayarlama yapmanıza yardımcı olmak için çalışacağız (muhtemelen genel API'ye "
"erişim fonksiyonları eklemek dahil).  (Bkz. :issue:`35886`.)"

#: whatsnew/3.8.rst:1940
msgid ""
"The :meth:`mmap.flush() <mmap.mmap.flush>` method now returns ``None`` on "
"success and raises an exception on error under all platforms.  Previously, "
"its behavior was platform-dependent: a nonzero value was returned on "
"success; zero was returned on error under Windows.  A zero value was "
"returned on success; an exception was raised on error under Unix. "
"(Contributed by Berker Peksag in :issue:`2122`.)"
msgstr ""
":meth:`mmap.flush() <mmap.mmap.flush>` yöntemi artık başarı durumunda "
"``None`` değerini döndürmekte ve tüm platformlarda hata durumunda bir "
"istisna oluşturmaktadır.  Önceden metodun davranışı platforma bağlıydı: "
"başarı durumunda sıfır olmayan bir değer döndürülüyordu; Windows altında "
"hata durumunda sıfır döndürülüyordu.  Unix altında başarı durumunda sıfır "
"değeri döndürülürken hata durumunda bir istisna ortaya çıkıyordu. (Berker "
"Peksağ'ın :issue:`2122` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1947
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external "
"entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
":mod:`xml.dom.minidom` ve :mod:`xml.sax` modülleri artık varsayılan olarak "
"harici varlıkları işlemiyor. (Christian Heimes'in :issue:`17239` 'daki "
"katkısıyla.)"

#: whatsnew/3.8.rst:1951
msgid ""
"Deleting a key from a read-only :mod:`dbm` database (:mod:`dbm.dumb`, :mod:"
"`dbm.gnu` or :mod:`dbm.ndbm`) raises :attr:`error` (:exc:`dbm.dumb.error`, :"
"exc:`dbm.gnu.error` or :exc:`dbm.ndbm.error`) instead of :exc:`KeyError`. "
"(Contributed by Xiang Zhang in :issue:`33106`.)"
msgstr ""
"Salt okunur :mod:`dbm` veritabanından bir anahtar silindiğinde (:mod:`dbm."
"dumb`, :mod:`dbm.gnu` veya :mod:`dbm.ndbm`) :exc:`KeyError` yerine :attr:"
"`error` (:exc:`dbm.dumb.error`, :exc:`dbm.gnu.error` veya :exc:`dbm.ndbm."
"error`) ortaya çıkar. (Xiang Zhang'ın :issue:`33106` 'teki katkılarıyla.)"

#: whatsnew/3.8.rst:1956
msgid ""
"Simplified AST for literals.  All constants will be represented as :class:"
"`ast.Constant` instances.  Instantiating old classes ``Num``, ``Str``, "
"``Bytes``, ``NameConstant`` and ``Ellipsis`` will return an instance of "
"``Constant``. (Contributed by Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
"Değişmezler için basitleştirilmiş AST.  Tüm sabitler :class:`ast.Constant` "
"örnekleri olarak temsil edilecektir.  Eski ``Num``, ``Str``, ``Bytes``, "
"``NameConstant`` ve ``Ellipsis`` sınıflarını örneklemek bir ``Constant`` "
"örneği döndürecektir. (Serhiy Storchaka'nın :issue:`32892` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1972
msgid ""
"The function :func:`asyncio.wait_for` now correctly waits for cancellation "
"when using an instance of :class:`asyncio.Task`. Previously, upon reaching "
"*timeout*, it was cancelled and immediately returned. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
":func:`asyncio.wait_for` fonksiyonu artık :class:`asyncio.Task` örneğini "
"kullanırken iptal için doğru şekilde bekliyor. Önceden, *zaman aşımına* "
"ulaşıldığında iptal ediliyor ve hemen geri dönüyordu. (Elvis "
"Pranskevichus'un :issue:`32751` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1977
msgid ""
"The function :func:`asyncio.BaseTransport.get_extra_info` now returns a safe "
"to use socket object when 'socket' is passed to the *name* parameter. "
"(Contributed by Yury Selivanov in :issue:`37027`.)"
msgstr ""
"Fonksiyon :func:`asyncio.BaseTransport.get_extra_info` artık *name* "
"parametresine 'socket' geçildiğinde kullanımı güvenli bir soket nesnesi "
"döndürüyor. (Yury Selivanov'un :issue:`37027` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:1981
msgid ":class:`asyncio.BufferedProtocol` has graduated to the stable API."
msgstr ":class:`asyncio.BufferedProtocol` kararlı API'ye geçiş yaptı."

#: whatsnew/3.8.rst:1985
msgid ""
"DLL dependencies for extension modules and DLLs loaded with :mod:`ctypes` on "
"Windows are now resolved more securely. Only the system paths, the directory "
"containing the DLL or PYD file, and directories added with :func:`~os."
"add_dll_directory` are searched for load-time dependencies. Specifically, :"
"envvar:`PATH` and the current working directory are no longer used, and "
"modifications to these will no longer have any effect on normal DLL "
"resolution. If your application relies on these mechanisms, you should check "
"for :func:`~os.add_dll_directory` and if it exists, use it to add your DLLs "
"directory while loading your library. Note that Windows 7 users will need to "
"ensure that Windows Update KB2533623 has been installed (this is also "
"verified by the installer). (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"Windows üzerinde :mod:`ctypes` ile yüklenen uzantı modülleri ve DLL'ler için "
"DLL bağımlılıkları artık daha güvenli bir şekilde çözümlenmektedir. Yükleme "
"zamanı bağımlılıkları için yalnızca sistem yolları, DLL veya PYD dosyasını "
"içeren dizin ve :func:`~os.add_dll_directory` ile eklenen dizinler aranır. "
"Özellikle, :envvar:`PATH` ve geçerli çalışma dizini artık kullanılmamaktadır "
"ve bunlarda yapılan değişikliklerin normal DLL çözümlemesi üzerinde herhangi "
"bir etkisi olmayacaktır. Uygulamanız bu mekanizmalara güveniyorsa, :func:"
"`~os.add_dll_directory` dosyasını kontrol etmeli ve varsa, kütüphanenizi "
"yüklerken DLL'lerinizin dizinini eklemek için kullanmalısınız. Windows 7 "
"kullanıcılarının Windows Update KB2533623'ün yüklendiğinden emin olmaları "
"gerektiğini unutmayın (bu aynı zamanda yükleyici tarafından da doğrulanır). "
"(Steve Dower'ın :issue:`36085` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:1998
msgid ""
"The header files and functions related to pgen have been removed after its "
"replacement by a pure Python implementation. (Contributed by Pablo Galindo "
"in :issue:`36623`.)"
msgstr ""
"Pgen ile ilgili başlık dosyaları ve fonksiyonlar, saf bir Python "
"uygulamasıyla değiştirildikten sonra kaldırılmıştır. (Pablo Galindo'nun :"
"issue:`36623` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:2002
msgid ""
":class:`types.CodeType` has a new parameter in the second position of the "
"constructor (*posonlyargcount*) to support positional-only arguments defined "
"in :pep:`570`. The first argument (*argcount*) now represents the total "
"number of positional arguments (including positional-only arguments). The "
"new ``replace()`` method of :class:`types.CodeType` can be used to make the "
"code future-proof."
msgstr ""
":class:`types.CodeType`, :pep:`570` 'te tanımlanan sadece pozisyonel "
"argümanları desteklemek için kurucunun ikinci pozisyonunda "
"(*posonlyargcount*) yeni bir parametreye sahiptir. İlk argüman (*argcount*) "
"artık toplam konumsal argüman sayısını (sadece konumsal argümanlar dahil) "
"temsil etmektedir. :class:`types.CodeType` 'ın yeni ``replace()`` yöntemi, "
"kodu geleceğe hazır hale getirmek için kullanılabilir."

#: whatsnew/3.8.rst:2009
msgid ""
"The parameter ``digestmod`` for :func:`hmac.new` no longer uses the MD5 "
"digest by default."
msgstr ""
":func:`hmac.new` için ``digestmod`` parametresi artık varsayılan olarak MD5 "
"özetini kullanmıyor."

#: whatsnew/3.8.rst:2013
msgid "Changes in the C API"
msgstr "C API'sindeki değişiklikler"

#: whatsnew/3.8.rst:2015
msgid ""
"The :c:struct:`PyCompilerFlags` structure got a new *cf_feature_version* "
"field. It should be initialized to ``PY_MINOR_VERSION``. The field is "
"ignored by default, and is used if and only if ``PyCF_ONLY_AST`` flag is set "
"in *cf_flags*. (Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr ""
":c:struct:`PyCompilerFlags` yapısı yeni bir *cf_feature_version* alanına "
"sahiptir. Bu alan ``PY_MINOR_VERSION`` olarak başlatılmalıdır. Bu alan "
"varsayılan olarak yok sayılır ve yalnızca *cf_flags* içinde "
"``PyCF_ONLY_AST`` bayrağı ayarlanmışsa kullanılır. (Guido van Rossum'un :"
"issue:`35766` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:2021
msgid ""
"The :c:func:`PyEval_ReInitThreads` function has been removed from the C API. "
"It should not be called explicitly: use :c:func:`PyOS_AfterFork_Child` "
"instead. (Contributed by Victor Stinner in :issue:`36728`.)"
msgstr ""
":c:func:`PyEval_ReInitThreads` fonksiyonu C API'sinden kaldırıldı. Açıkça "
"çağrılmamalıdır: bunun yerine :c:func:`PyOS_AfterFork_Child` kullanın. "
"(Victor Stinner'ın :issue:`36728` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:2026
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. When Python is embedded, ``libpython`` must not be loaded with "
"``RTLD_LOCAL``, but ``RTLD_GLOBAL`` instead. Previously, using "
"``RTLD_LOCAL``, it was already not possible to load C extensions which were "
"not linked to ``libpython``, like C extensions of the standard library built "
"by the ``*shared*`` section of ``Modules/Setup``. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"Unix'te, Android ve Cygwin dışında C uzantıları artık libpython'a bağlı "
"değildir. Python gömülü olduğunda, ``libpython`` ``RTLD_LOCAL`` ile değil, "
"bunun yerine ``RTLD_GLOBAL`` ile yüklenmelidir. Önceden ``RTLD_LOCAL`` "
"kullanıldığında, ``Modules/Setup`` bölümünün ``*shared*`` bölümü tarafından "
"oluşturulan standart kütüphanenin C uzantıları gibi ``libpython`` ile "
"bağlantılı olmayan C uzantılarını yüklemek zaten mümkün değildi. (Victor "
"Stinner'ın  :issue:`21536` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:2034
msgid ""
"Use of ``#`` variants of formats in parsing or building value (e.g. :c:func:"
"`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :c:func:"
"`PyObject_CallFunction`, etc.) without ``PY_SSIZE_T_CLEAN`` defined raises "
"``DeprecationWarning`` now. It will be removed in 3.10 or 4.0.  Read :ref:"
"`arg-parsing` for detail. (Contributed by Inada Naoki in :issue:`36381`.)"
msgstr ""
"Ayrıştırma veya değer oluşturmada biçimlerin ``#`` varyantlarının kullanımı "
"(örneğin :c:func:`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :c:func:"
"`PyObject_CallFunction`, vb.) ``PY_SSIZE_T_CLEAN`` tanımlanmadan artık "
"``DeprecationWarning`` verir. Bu uyarı 3.10 veya 4.0'da kaldırılacaktır.  "
"Ayrıntılar için :ref:`arg-parsing` sayfasını okuyun. (Inada Naoki'nin :issue:"
"`36381` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:2040
msgid ""
"Instances of heap-allocated types (such as those created with :c:func:"
"`PyType_FromSpec`) hold a reference to their type object. Increasing the "
"reference count of these type objects has been moved from :c:func:"
"`PyType_GenericAlloc` to the more low-level functions, :c:func:"
"`PyObject_Init` and :c:func:`PyObject_INIT`. This makes types created "
"through :c:func:`PyType_FromSpec` behave like other classes in managed code."
msgstr ""
"Yığın tahsisli tiplerin örnekleri (örneğin :c:func:`PyType_FromSpec` ile "
"oluşturulanlar) tip nesnelerine bir referans tutar. Bu tip nesnelerinin "
"referans sayısının artırılması :c:func:`PyType_GenericAlloc` fonksiyonundan "
"daha düşük seviyeli :c:func:`PyObject_Init` ve :c:func:`PyObject_INIT` "
"fonksiyonlarına taşınmıştır. Bu, :c:func:`PyType_FromSpec` aracılığıyla "
"oluşturulan türlerin yönetilen koddaki diğer sınıflar gibi davranmasını "
"sağlar."

#: whatsnew/3.8.rst:2048
msgid ":ref:`Statically allocated types <static-types>` are not affected."
msgstr ":ref:`Statically allocated types <static-types>` etkilenmez."

#: whatsnew/3.8.rst:2050
msgid ""
"For the vast majority of cases, there should be no side effect. However, "
"types that manually increase the reference count after allocating an "
"instance (perhaps to work around the bug) may now become immortal. To avoid "
"this, these classes need to call Py_DECREF on the type object during "
"instance deallocation."
msgstr ""
"Durumların büyük çoğunluğu için herhangi bir yan etki olmamalıdır. Ancak, "
"bir örnek tahsis ettikten sonra referans sayısını manuel olarak artıran "
"türler (belki de hatanın etrafında çalışmak için) artık ölümsüz hale "
"gelebilir. Bundan kaçınmak için, bu sınıfların örnek ayırma sırasında tür "
"nesnesi üzerinde Py_DECREF'i çağırması gerekir."

#: whatsnew/3.8.rst:2056
msgid ""
"To correctly port these types into 3.8, please apply the following changes:"
msgstr ""
"Bu türleri 3.8 'e doğru bir şekilde taşımak için lütfen aşağıdaki "
"değişiklikleri uygulayın:"

#: whatsnew/3.8.rst:2059
msgid ""
"Remove :c:macro:`Py_INCREF` on the type object after allocating an instance "
"- if any. This may happen after calling :c:func:`PyObject_New`, :c:func:"
"`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:func:`PyObject_GC_NewVar`, "
"or any other custom allocator that uses :c:func:`PyObject_Init` or :c:func:"
"`PyObject_INIT`."
msgstr ""
"Varsa, bir örnek ayırdıktan sonra tür nesnesi üzerindeki :c:macro:"
"`Py_INCREF` öğesini kaldırın. Bu, :c:func:`PyObject_New`, :c:func:"
"`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:func:`PyObject_GC_NewVar` "
"veya :c:func:`PyObject_Init` veya :c:func:`PyObject_INIT` kullanan herhangi "
"bir özel ayırıcı çağrıldıktan sonra gerçekleşebilir."

#: whatsnew/3.8.rst:2085 whatsnew/3.8.rst:2104
msgid "Example:"
msgstr "Örnek:"

#: whatsnew/3.8.rst:2082
msgid ""
"Ensure that all custom ``tp_dealloc`` functions of heap-allocated types "
"decrease the type's reference count."
msgstr ""
"Yığın tahsisli türlerin tüm özel ``tp_dealloc`` fonksiyonlarının, türün "
"referans sayısını azalttığından emin olun."

#: whatsnew/3.8.rst:2099
msgid "(Contributed by Eddie Elizondo in :issue:`35810`.)"
msgstr "(Eddie Elizondo'nun :issue:`35810` 'daki katkısıyla.)"

#: whatsnew/3.8.rst:2101
msgid ""
"The :c:macro:`Py_DEPRECATED()` macro has been implemented for MSVC. The "
"macro now must be placed before the symbol name."
msgstr ""
":c:macro:`Py_DEPRECATED()` makrosu MSVC için uygulanmıştır. Makro artık "
"sembol adından önce yerleştirilmelidir."

#: whatsnew/3.8.rst:2110
msgid "(Contributed by Zackery Spytz in :issue:`33407`.)"
msgstr "(Zackery Spytz'in :issue:`33407` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:2112
msgid ""
"The interpreter does not pretend to support binary compatibility of "
"extension types across feature releases, anymore.  A :c:type:`PyTypeObject` "
"exported by a third-party extension module is supposed to have all the slots "
"expected in the current Python version, including :c:member:`~PyTypeObject."
"tp_finalize` (:const:`Py_TPFLAGS_HAVE_FINALIZE` is not checked anymore "
"before reading :c:member:`~PyTypeObject.tp_finalize`)."
msgstr ""
"Yorumlayıcı, artık özellik sürümleri arasında uzantı türlerinin ikili "
"uyumluluğunu destekliyormuş gibi davranmıyor.  Üçüncü taraf bir uzantı "
"modülü tarafından dışa aktarılan bir :c:type:`PyTypeObject`, :c:member:"
"`~PyTypeObject.tp_finalize` dahil olmak üzere mevcut Python sürümünde "
"beklenen tüm yuvalara sahip olmalıdır (:const:`Py_TPFLAGS_HAVE_FINALIZE` "
"artık :c:member:`~PyTypeObject.tp_finalize` okunmadan önce kontrol "
"edilmiyor)."

#: whatsnew/3.8.rst:2119
msgid "(Contributed by Antoine Pitrou in :issue:`32388`.)"
msgstr "(Antoine Pitrou'nun :issue:`32388` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:2121
msgid ""
"The functions :c:func:`PyNode_AddChild` and :c:func:`PyParser_AddToken` now "
"accept two additional ``int`` arguments *end_lineno* and *end_col_offset*."
msgstr ""
":c:func:`PyNode_AddChild` ve :c:func:`PyParser_AddToken` fonksiyonları artık "
"iki ek ``int`` argüman *end_lineno* ve *end_col_offset* kabul etmektedir."

#: whatsnew/3.8.rst:2124
msgid ""
"The :file:`libpython38.a` file to allow MinGW tools to link directly "
"against :file:`python38.dll` is no longer included in the regular Windows "
"distribution. If you require this file, it may be generated with the "
"``gendef`` and ``dlltool`` tools, which are part of the MinGW binutils "
"package:"
msgstr ""
"MinGW araçlarının doğrudan :file:`python38.dll` dosyasına bağlanmasını "
"sağlayan :file:`libpython38.a` dosyası artık normal Windows dağıtımına dahil "
"değildir. Bu dosyaya ihtiyacınız varsa, MinGW binutils paketinin bir parçası "
"olan ``gendef`` ve ``dlltool`` araçları ile oluşturulabilir:"

#: whatsnew/3.8.rst:2134
msgid ""
"The location of an installed :file:`pythonXY.dll` will depend on the "
"installation options and the version and language of Windows. See :ref:"
"`using-on-windows` for more information. The resulting library should be "
"placed in the same directory as :file:`pythonXY.lib`, which is generally "
"the :file:`libs` directory under your Python installation."
msgstr ""
"Yüklü bir :file:`pythonXY.dll` dosyasının konumu, kurulum seçeneklerine ve "
"Windows'un sürümüne ve diline bağlı olacaktır. Daha fazla bilgi için :ref:"
"`Windows'ta kullanma <using-on-windows>` konusuna bakın. Ortaya çıkan "
"kitaplık, genellikle Python kurulumunuzun altındaki :file:`libs` dizini "
"olan :file:`pythonXY.lib` ile aynı dizine yerleştirilmelidir."

#: whatsnew/3.8.rst:2140
msgid "(Contributed by Steve Dower in :issue:`37351`.)"
msgstr "(Steve Dower'ın :issue:`37351` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:2144
msgid "CPython bytecode changes"
msgstr "CPython bayt kodu değişiklikleri"

#: whatsnew/3.8.rst:2146
msgid ""
"The interpreter loop  has been simplified by moving the logic of unrolling "
"the stack of blocks into the compiler.  The compiler emits now explicit "
"instructions for adjusting the stack of values and calling the cleaning-up "
"code for :keyword:`break`, :keyword:`continue` and :keyword:`return`."
msgstr ""
"Yorumlayıcı döngüsü, blok yığınını açma mantığı derleyiciye taşınarak "
"basitleştirilmiştir.  Derleyici artık değer yığınını ayarlamak ve :keyword:"
"`break`, :keyword:`continue` ve :keyword:`return` için temizleme kodunu "
"çağırmak için açık talimatlar yayınlar."

#: whatsnew/3.8.rst:2152
msgid ""
"Removed opcodes :opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, :opcode:"
"`SETUP_LOOP` and :opcode:`SETUP_EXCEPT`.  Added new opcodes :opcode:"
"`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` and :opcode:"
"`POP_FINALLY`.  Changed the behavior of :opcode:`END_FINALLY` and :opcode:"
"`WITH_CLEANUP_START`."
msgstr ""
":opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, :opcode:`SETUP_LOOP` ve :"
"opcode:`SETUP_EXCEPT` kodları kaldırıldı.  Yeni :opcode:`ROT_FOUR`, :opcode:"
"`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` ve :opcode:`POP_FINALLY` kodları "
"eklendi.  :opcode:`END_FINALLY` ve :opcode:`WITH_CLEANUP_START` davranışları "
"değiştirildi."

#: whatsnew/3.8.rst:2158
msgid ""
"(Contributed by Mark Shannon, Antoine Pitrou and Serhiy Storchaka in :issue:"
"`17611`.)"
msgstr ""
"(Mark Shannon, Antoine Pitrou ve Serhiy Storchaka'nın :issue:`17611` 'deki "
"katkılarıyla.)"

#: whatsnew/3.8.rst:2161
msgid ""
"Added new opcode :opcode:`END_ASYNC_FOR` for handling exceptions raised when "
"awaiting a next item in an :keyword:`async for` loop. (Contributed by Serhiy "
"Storchaka in :issue:`33041`.)"
msgstr ""
"Bir :keyword:`async for` döngüsünde bir sonraki öğe beklenirken ortaya çıkan "
"istisnaları işlemek için yeni :opcode:`END_ASYNC_FOR` kodu eklendi. (Serhiy "
"Storchaka'nın :issue:`33041` 'deki katkısıyla.)"

#: whatsnew/3.8.rst:2165
msgid ""
"The :opcode:`MAP_ADD` now expects the value as the first element in the "
"stack and the key as the second element. This change was made so the key is "
"always evaluated before the value in dictionary comprehensions, as proposed "
"by :pep:`572`. (Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr ""
":opcode:`MAP_ADD` artık değeri yığının ilk elemanı ve anahtarı da ikinci "
"eleman olarak beklemektedir. Bu değişiklik, :pep:`572` tarafından önerildiği "
"gibi, sözlük kavramalarında anahtarın her zaman değerden önce "
"değerlendirilmesi için yapılmıştır. (Jörn Heissler'ın :issue:`35224` 'teki "
"katkısıyla.)"

#: whatsnew/3.8.rst:2172
msgid "Demos and Tools"
msgstr "Demolar ve Araçlar"

#: whatsnew/3.8.rst:2174
msgid ""
"Added a benchmark script for timing various ways to access variables: "
"``Tools/scripts/var_access_benchmark.py``. (Contributed by Raymond Hettinger "
"in :issue:`35884`.)"
msgstr ""
"Değişkenlere erişmenin çeşitli yollarını zamanlamak için bir kıyaslama "
"dizesi eklendi: ``Tools/scripts/var_access_benchmark.py``. (Raymond "
"Hettinger'ın :issue:`35884` 'teki katkısıyla.)"

#: whatsnew/3.8.rst:2178
msgid "Here's a summary of performance improvements since Python 3.3:"
msgstr "İşte Python 3.3'ten bu yana performans iyileştirmelerinin bir özeti:"

#: whatsnew/3.8.rst:2225
msgid ""
"The benchmarks were measured on an `Intel® Core™ i7-4960HQ processor "
"<https://ark.intel.com/content/www/us/en/ark/products/76088/intel-core-"
"i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ running the macOS 64-bit "
"builds found at `python.org <https://www.python.org/downloads/mac-osx/>`_. "
"The benchmark script displays timings in nanoseconds."
msgstr ""
"Kıyaslamalar `python.org <https://www.python.org/downloads/mac-osx/>`_ "
"adresinde bulunan macOS 64-bit yapılarını çalıştıran bir `Intel® Core™ "
"i7-4960HQ işlemci <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ üzerinde ölçülmüştür. Kıyaslama betiği zamanlamaları nanosaniye "
"cinsinden gösterir."

#: whatsnew/3.8.rst:2234
msgid "Notable changes in Python 3.8.1"
msgstr "Python 3.8.1'deki önemli değişiklikler"

#: whatsnew/3.8.rst:2236
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Önemli güvenlik endişeleri nedeniyle, :meth:`asyncio.loop."
"create_datagram_endpoint` parametresinin *reuse_address* parametresi artık "
"desteklenmemektedir. Bunun nedeni UDP'deki ``SO_REUSEADDR`` soket "
"seçeneğinin davranışıdır. Daha fazla ayrıntı için ``loop."
"create_datagram_endpoint()`` belgelerine bakın. (Kyle Stanley, Antoine "
"Pitrou ve Yury Selivanov'un :issue:`37228` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:2244
msgid "Notable changes in Python 3.8.8"
msgstr "Python 3.8.8'deki önemli değişiklikler"

#: whatsnew/3.8.rst:2246
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Daha önceki Python sürümleri :func:`urllib.parse.parse_qs` ve :func:`urllib."
"parse.parse_qsl` içinde sorgu parametresi ayırıcıları olarak hem ``;`` hem "
"de ``&`` kullanılmasına izin veriyordu.  Güvenlik endişeleri nedeniyle ve "
"daha yeni W3C önerilerine uymak için, bu, varsayılan olarak ``&`` ile "
"yalnızca tek bir ayırıcı anahtara izin verecek şekilde değiştirildi.  Bu "
"değişiklik aynı zamanda :func:`cgi.parse` ve :func:`cgi.parse_multipart` "
"fonksiyonlarını da etkilemektedir. Daha fazla ayrıntı için lütfen ilgili "
"belgelere bakın. (Adam Goldschmidt, Senthil Kumaran ve Ken Jin'in :issue:"
"`42967` 'deki katkılarıyla.)"

#: whatsnew/3.8.rst:2257
msgid "Notable changes in Python 3.8.12"
msgstr "Python 3.8.12'deki önemli değişiklikler"

#: whatsnew/3.8.rst:2259
msgid ""
"Starting with Python 3.8.12 the :mod:`ipaddress` module no longer accepts "
"any leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros."
msgstr ""
"Python 3.8.12'den itibaren :mod:`ipaddress` modülü artık IPv4 adres "
"dizilerinde baştaki sıfırları kabul etmemektedir. Öndeki sıfırlar "
"belirsizdir ve bazı kitaplıklar tarafından sekizli gösterim olarak "
"yorumlanır. Örneğin, eski fonksiyon :func:`socket.inet_aton` baştaki "
"sıfırları sekizli gösterim olarak ele alır. Modern :func:`~socket.inet_pton` "
"glibc uygulaması baştaki sıfırları kabul etmez."

#: whatsnew/3.8.rst:2266
msgid ""
"(Originally contributed by Christian Heimes in :issue:`36384`, and "
"backported to 3.8 by Achraf Merzouki.)"
msgstr ""
"(Aslen :issue:`36384` içinde Christian Heimes tarafından katkıda "
"bulunulmuştur ve Achraf Merzouki tarafından 3.8'e geri aktarılmıştır.)"
