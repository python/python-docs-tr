# Python Documentation Turkish Translation
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-01 00:18+0000\n"
"PO-Revision-Date: 2023-03-08 10:13-0500\n"
"Last-Translator: \n"
"Language-Team: TURKISH <python.docs.tr@gmail.com>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 3.2.2\n"

#: library/functions.rst:11
msgid "Built-in Functions"
msgstr "Gömülü Fonksiyonlar"

#: library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"Python yorumlayıcısı, içinde gömülü olarak gelen ve her zaman kullanılabilen "
"bir dizi fonksiyon ve tür barındırır. Burada alfabetik sıraya göre "
"listelenmiştir."

#: library/functions.rst:0
msgid "**A**"
msgstr "**A**"

#: library/functions.rst:0
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: library/functions.rst:0
msgid ":func:`aiter`"
msgstr ":func:`aiter`"

#: library/functions.rst:0
msgid ":func:`all`"
msgstr ":func:`all`"

#: library/functions.rst:0
msgid ":func:`any`"
msgstr ":func:`any`"

#: library/functions.rst:0
msgid ":func:`anext`"
msgstr ":func:`anext`"

#: library/functions.rst:0
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: library/functions.rst:0
msgid "**B**"
msgstr "**B**"

#: library/functions.rst:0
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: library/functions.rst:0
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: library/functions.rst:0
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: library/functions.rst:0
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: library/functions.rst:0
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: library/functions.rst:0
msgid "**C**"
msgstr "**C**"

#: library/functions.rst:0
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: library/functions.rst:0
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: library/functions.rst:0
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: library/functions.rst:0
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: library/functions.rst:0
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: library/functions.rst:0
msgid "**D**"
msgstr "**D**"

#: library/functions.rst:0
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: library/functions.rst:0
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: library/functions.rst:0
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: library/functions.rst:0
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: library/functions.rst:0
msgid "**E**"
msgstr "**E**"

#: library/functions.rst:0
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: library/functions.rst:0
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: library/functions.rst:0
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: library/functions.rst:0
msgid "**F**"
msgstr "**F**"

#: library/functions.rst:0
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: library/functions.rst:0
msgid ":func:`float`"
msgstr ":func:`float`"

#: library/functions.rst:0
msgid ":func:`format`"
msgstr ":func:`format`"

#: library/functions.rst:0
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: library/functions.rst:0
msgid "**G**"
msgstr "**G**"

#: library/functions.rst:0
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: library/functions.rst:0
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: library/functions.rst:0
msgid "**H**"
msgstr "**H**"

#: library/functions.rst:0
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: library/functions.rst:0
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: library/functions.rst:0
msgid ":func:`help`"
msgstr ":func:`help`"

#: library/functions.rst:0
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: library/functions.rst:0
msgid "**I**"
msgstr "**I**"

#: library/functions.rst:0
msgid ":func:`id`"
msgstr ":func:`id`"

#: library/functions.rst:0
msgid ":func:`input`"
msgstr ":func:`input`"

#: library/functions.rst:0
msgid ":func:`int`"
msgstr ":func:`int`"

#: library/functions.rst:0
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: library/functions.rst:0
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: library/functions.rst:0
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: library/functions.rst:0
msgid "**L**"
msgstr "**L**"

#: library/functions.rst:0
msgid ":func:`len`"
msgstr ":func:`len`"

#: library/functions.rst:0
msgid "|func-list|_"
msgstr "|func-list|_"

#: library/functions.rst:0
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: library/functions.rst:0
msgid "**M**"
msgstr "**M**"

#: library/functions.rst:0
msgid ":func:`map`"
msgstr ":func:`map`"

#: library/functions.rst:0
msgid ":func:`max`"
msgstr ":func:`max`"

#: library/functions.rst:0
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: library/functions.rst:0
msgid ":func:`min`"
msgstr ":func:`min`"

#: library/functions.rst:0
msgid "**N**"
msgstr "**N**"

#: library/functions.rst:0
msgid ":func:`next`"
msgstr ":func:`next`"

#: library/functions.rst:0
msgid "**O**"
msgstr "**O**"

#: library/functions.rst:0
msgid ":func:`object`"
msgstr ":func:`object`"

#: library/functions.rst:0
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: library/functions.rst:0
msgid ":func:`open`"
msgstr ":func:`open`"

#: library/functions.rst:0
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: library/functions.rst:0
msgid "**P**"
msgstr "**P**"

#: library/functions.rst:0
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: library/functions.rst:0
msgid ":func:`print`"
msgstr ":func:`print`"

#: library/functions.rst:0
msgid ":func:`property`"
msgstr ":func:`property`"

#: library/functions.rst:0
msgid "**R**"
msgstr "**R**"

#: library/functions.rst:0
msgid "|func-range|_"
msgstr "|func-range|_"

#: library/functions.rst:0
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: library/functions.rst:0
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: library/functions.rst:0
msgid ":func:`round`"
msgstr ":func:`round`"

#: library/functions.rst:0
msgid "**S**"
msgstr "**S**"

#: library/functions.rst:0
msgid "|func-set|_"
msgstr "|func-set|_"

#: library/functions.rst:0
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: library/functions.rst:0
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: library/functions.rst:0
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: library/functions.rst:0
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: library/functions.rst:0
msgid "|func-str|_"
msgstr "|func-str|_"

#: library/functions.rst:0
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: library/functions.rst:0
msgid ":func:`super`"
msgstr ":func:`super`"

#: library/functions.rst:0
msgid "**T**"
msgstr "**T**"

#: library/functions.rst:0
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: library/functions.rst:0
msgid ":func:`type`"
msgstr ":func:`type`"

#: library/functions.rst:0
msgid "**V**"
msgstr "**V**"

#: library/functions.rst:0
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: library/functions.rst:0
msgid "**Z**"
msgstr "**Z**"

#: library/functions.rst:0
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: library/functions.rst:0
msgid "**_**"
msgstr "**_**"

#: library/functions.rst:0
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: library/functions.rst:59
msgid ""
"Return the absolute value of a number.  The argument may be an integer, a "
"floating point number, or an object implementing :meth:`__abs__`. If the "
"argument is a complex number, its magnitude is returned."
msgstr ""
"Bir sayının mutlak değerini döndürür. Argüman bir tam sayı, gerçel sayı "
"veya :meth:`__abs__` 'i uygulayan bir nesne olabilir. Eğer argüman bir "
"karmaşık sayıysa, onun büyüklüğü döndürülür."

#: library/functions.rst:66
msgid ""
"Return an :term:`asynchronous iterator` for an :term:`asynchronous "
"iterable`. Equivalent to calling ``x.__aiter__()``."
msgstr ""
"Bir :term:`asynchronous iterable` için bir :term:`asynchronous iterator` "
"döndürür. ``x.__aiter__()`` çağrısına eş değerdir."

#: library/functions.rst:69
msgid "Note: Unlike :func:`iter`, :func:`aiter` has no 2-argument variant."
msgstr ""
"Not: :func:`iter` 'in aksine, :func:`aiter` 'in 2 argümanlı biçimi yoktur."

#: library/functions.rst:75
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"Eğer *iterable* 'ın tüm elementleri doğruysa, ``True`` döndürür.  Şuna eş "
"değerdir::"

#: library/functions.rst:88
msgid ""
"When awaited, return the next item from the given :term:`asynchronous "
"iterator`, or *default* if given and the iterator is exhausted."
msgstr ""
"Hazır olunduğunda, verilen :term:`asynchronous iterator` 'dan sıradaki "
"parçayı döndürür. Eğer yineleyici tükendiyse ve *default* değer verildiyse, "
"*default* değeri döndürür."

#: library/functions.rst:91
msgid ""
"This is the async variant of the :func:`next` builtin, and behaves similarly."
msgstr ""
"Bu, gömülü fonksiyonlardan olan :func:`next` 'in asenkron bir varyantıdır, "
"benzer şekilde çalışır."

#: library/functions.rst:94
msgid ""
"This calls the :meth:`~object.__anext__` method of *async_iterator*, "
"returning an :term:`awaitable`. Awaiting this returns the next value of the "
"iterator. If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopAsyncIteration` is raised."
msgstr ""
"Bu *async_iterator* 'ın :meth:`~object.__anext__` metodunu çağırır. Bir :"
"term:`awaitable` döndürür. Bunu beklemek yineleyicinin bir sonraki değerini "
"döndürür. Eğer *default* değer verildiyse, yineleyici tükendiğinde o "
"döndürülür. Aksi takdirde :exc:`StopAsyncIteration` hatası ortaya çıkar."

#: library/functions.rst:103
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"Eğer *iterable* 'ın elementlerinden herhangi biri doğru ise ``True`` "
"döndürür. Eğer *iterable* boş ise, ``False`` döndürür. Şuna eşittir::"

#: library/functions.rst:115
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u``, or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
":func:`repr` 'in bir nesnenin yazdırılabilir temsilini içeren bir dize "
"döndürdüğü, ancak :func:`repr` tarafından döndürülen dizedeki ASCII olmayan "
"karakterlerden ``\\x``, ``\\u`` veya ``\\U`` gibi kaçış karakterlerini "
"kullanarak kaçtığı gibi, bu da Python 2'deki :func:`repr` tarafından "
"döndürülen değere benzeyen bir string üretir."

#: library/functions.rst:123
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"Bir tam sayıyı, ön eki \"0b\" olan ikili bir dizeye dönüştürür. Sonuç "
"geçerli bir Python ifadesidir. Eğer *x* bir Python :class:`int` nesnesi "
"değilse, tam sayı döndüren bir :meth:`__index__` metodu tanımlaması gerekir. "
"Bazı örnekler:"

#: library/functions.rst:133
msgid ""
"If the prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr ""
"Eğer ön ek olarak \"0b\" isteniyorsa veya istenmiyorsa, aşağıdaki gibi iki "
"şekilde de kullanabilirsiniz."

#: library/functions.rst:834 library/functions.rst:1151
msgid "See also :func:`format` for more information."
msgstr "Ayrıca daha fazla bilgi için :func:`format` 'a bakabilirsiniz."

#: library/functions.rst:145
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  *x* is converted "
"using the standard :ref:`truth testing procedure <truth>`.  If *x* is false "
"or omitted, this returns ``False``; otherwise, it returns ``True``.  The :"
"class:`bool` class is a subclass of :class:`int` (see :ref:`typesnumeric`). "
"It cannot be subclassed further.  Its only instances are ``False`` and "
"``True`` (see :ref:`bltin-boolean-values`)."
msgstr ""
"``True`` ya da ``False`` değeri döndürür. *x*, standart :ref:`truth testing "
"procedure <truth>` kullanılarak boolean veri tipine dönüştürülür. *x* "
"yanlışsa veya atlanırsa, bu ``False`` döndürür; aksi takdirde, ``True`` "
"değerini döndürür. :class:`bool` sınıfı :class:`int` öğesinin bir alt "
"sınıfıdır (bkz. :ref:`typesnumeric`). Daha fazla alt sınıfa ayrılamaz. Bunun "
"tek örnekleri ``False`` ve ``True`` 'dur (bkz. :ref:`bltin-boolean-values`)."

#: library/functions.rst:699 library/functions.rst:923
msgid "*x* is now a positional-only parameter."
msgstr "*x* artık yalnızca konumsal bir parametredir."

#: library/functions.rst:159
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace()` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice. If :func:`sys.breakpointhook` is "
"not accessible, this function will raise :exc:`RuntimeError`."
msgstr ""
"Bu fonksiyon sizi çağrılma bölgesindeki hata ayıklayıcıya bırakır.  Spesifik "
"olarak, :func:`sys.breakpointhook` 'u çağırır, ``args`` ve ``kws`` 'yi "
"doğrudan geçer. Varsayılan olarak, ``sys.breakpointhook()`` hiçbir parametre "
"beklemeden :func:`pdb.set_trace()` fonksiyonunu çağırır. Bu durumda, bu "
"tamamen size kolaylık sağlamak içindir, bu nedenle hata ayıklayıcıya girmek "
"için :mod:`pdb` 'yi içe aktarmanız veya fazla kod yazmanız gerekmez. Buna "
"rağmen, :func:`sys.breakpointhook` başka bir fonksiyona ayarlanabilir ve :"
"func:`breakpoint` otomatik olarak bunu çağırır ve tercih ettiğiniz hata "
"ayıklayıcıya girmenize izin verir. Eğer :func:`sys.breakpointhook` "
"ulaşılabilir değilse, bu fonksiyon :exc:`RuntimeError` hatasını verecektir."

#: library/functions.rst:13
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"``breakpointhook`` parametresi ile :ref:`denetleme olayı <auditing>` "
"``builtins.breakpoint`` ortaya çıkartır."

#: library/functions.rst:181
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"Baytlardan oluşan yeni bir dizi döndürür. :class:`bytearray` sınıfı 0 <= x < "
"256 aralığındaki tam sayılardan oluşan değişebilir bir dizedir. :ref:"
"`typesseq-mutable` 'da tarif edildiği gibi değişebilir dizeler klasik "
"metotlarının çoğuna sahiptir. :class:`bytes` tipinin sahip olduğu metotlar "
"için, :ref:`bytes-methods` 'a bakınız."

#: library/functions.rst:186
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"Opsiyonel *source* parametresi diziyi birkaç farklı şekilde başlatmak için "
"kullanılabilir:"

#: library/functions.rst:189
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"Eğer bir *string* ise, *encoding* (ve istenirse, *errors*) parametrelerini "
"de vermelisiniz; sonrasında :func:`bytearray` :meth:`str.encode` kullanarak "
"dizeyi bayta çevirecektir."

#: library/functions.rst:193
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"Eğer bir *integer* ise, dizi bu boyuta göre null baytlar ile doldurulur."

#: library/functions.rst:196
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"Eğer :ref:`arabellek arayüzü <bufferobjects>` 'ne uyan bir objeyse, bayt "
"dizisini başlatmak için bir salt okunur arabellek kullanılır."

#: library/functions.rst:199
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"Eğer *iterable* ise, 0 <= x < 256 aralığındaki dizinin başlangıç içeriği "
"olan tam sayılardan oluşan bir yinelenebilir nesne olmalıdır."

#: library/functions.rst:202
msgid "Without an argument, an array of size 0 is created."
msgstr "Argüman yoksa, boyutu 0 olan bir dizi oluşturulur."

#: library/functions.rst:204
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr ":ref:`binaryseq` ve :ref:`typebytearray` 'a bakınız."

#: library/functions.rst:213
msgid ""
"Return a new \"bytes\" object which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"``0 <= x < 256`` aralığındaki tam sayılardan oluşan değiştirilemez bir "
"\"bayt\" objesi döndürür. :class:`bytes`, :class:`bytearray` 'in "
"değiştirilemez versiyonudur. Aynı objeyi değiştirmeyen metotlara, indeksleme "
"ve dilimleme davranışına sahiptir."

#: library/functions.rst:218
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr "Buna göre, yapıcı argümanları :func:`bytearray` için yorumlanır."

#: library/functions.rst:220
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"Bayt nesneleri değişmez değerler ile de oluşturulabilir, :ref:`strings` 'a "
"bakınız."

#: library/functions.rst:222
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr ""
"Ayrıca :ref:`binaryseq`, :ref:`typebytes`, ve :ref:`bytes-methods` 'a "
"bakınız."

#: library/functions.rst:227
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`__call__` method."
msgstr ""
"Eğer *object* argümanı çağrılabilir ise, :const:`True` , değilse :const:"
"`False` döndürür. Eğer ``True`` döndürür ise, bir çağrının başarısız olması "
"hala mümkündür, ``False`` döndürdüğü takdirde, *object* çağrısı hiçbir zaman "
"başarılı olamaz. Sınıfların ve örneklerin (Sınıflarında :meth:`__call__`  "
"metodu varsa) çağrılabilir olduğunu not edin. Bir sınıfı çağırmak sınıftan "
"türeyen yeni bir örnek döndürür."

#: library/functions.rst:233
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr ""
"Bu fonksiyon Python 3.0 versiyonunda kaldırılmıştı ama Python 3.2 "
"versiyonunda geri getirildi."

#: library/functions.rst:240
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"Unicode kod noktası *i* tamsayısı olan bir karakteri temsil eden dizeyi "
"döndürür. Örneğin, ``chr(97)`` , ``'a'`` dizesini döndürürken, "
"``chr(8364)`` , ``'€'`` dizesini döndürür. Bu fonksiyon, :func:`ord` 'un tam "
"tersidir."

#: library/functions.rst:244
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"Argüman için geçerli değer 0 ile 1.114.111 arasındadır (16'lık sayı "
"sisteminde 0x10FFFF). Eğer *i* aralığın dışında ise :exc:`ValueError` hatası "
"ortaya çıkar."

#: library/functions.rst:250
msgid "Transform a method into a class method."
msgstr "Bir metodu sınıf metoduna dönüştürür."

#: library/functions.rst:252
msgid ""
"A class method receives the class as an implicit first argument, just like "
"an instance method receives the instance. To declare a class method, use "
"this idiom::"
msgstr ""
"Bir sınıf metodu, sınıfı örtük ilk argüman olarak alır, aynı sınıftan "
"türeyen bir örneğin metodunun örneği aldığı gibi. Bir sınıf metodunu bu "
"şekilde tanımlayabilirsiniz::"

#: library/functions.rst:260
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"``@classmethod`` formu, bir :term:`decorator` fonksiyonudur. -- detaylar "
"için :ref:`function` 'a bakınız."

#: library/functions.rst:263
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"Bir sınıf metodu sınıf (``C.f()`` gibi) veya örnek (``C().f()`` gibi) "
"üzerinden çağırılabilir. Örnek, sınıfı dışında yoksayılır. Eğer bir sınıf "
"metodu türetilmiş bir sınıf için çağrılırsa, türetilmiş sınıf nesnesi örtük "
"ilk argüman olarak geçer."

#: library/functions.rst:268
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section. For more information on "
"class methods, see :ref:`types`."
msgstr ""
"Sınıf metotları C++ ve Java static metotlarından farklıdır. Eğer bunları "
"kullanmak isterseniz, bu bölümdeki :func:`staticmethod` kısmına bakınız. "
"Sınıf metotları hakkında daha fazla bilgi için, :ref:`types` 'a bakınız."

#: library/functions.rst:272
msgid ""
"Class methods can now wrap other :term:`descriptors <descriptor>` such as :"
"func:`property`."
msgstr ""
"Sınıf metotları artık :func:`property` gibi diğer :term:`descriptors "
"<descriptor>` 'ları sarmalayabilir."

#: library/functions.rst:276
msgid ""
"Class methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``) and "
"have a new ``__wrapped__`` attribute."
msgstr ""
"Sınıf metotları artık (``__module__``, ``__name__``, ``__qualname__``, "
"``__doc__`` and ``__annotations__``) metot özelliklerini miras alır ve yeni "
"bir ``__wrapped__`` özelliğine sahiplerdir."

#: library/functions.rst:281
msgid ""
"Class methods can no longer wrap other :term:`descriptors <descriptor>` such "
"as :func:`property`."
msgstr ""
"Sınıf metotları artık :func:`property` gibi diğer :term:`descriptor` 'ları "
"sarmalayamaz."

#: library/functions.rst:288
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"*source* 'ı bir koda veya AST nesnesine derler. Kod nesneleri :func:`exec` "
"veya :func:`eval` fonksiyonları kullanılarak çalıştırılabilir. *source* "
"normal bir dize, bayt dizesi veya bir AST nesnesi olabilir. AST nesneleriyle "
"nasıl çalışılacağını öğrenmek için :mod:`ast` modülüne bkz."

#: library/functions.rst:293
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"*filename* argümanı kodun okunduğu dosyayı vermelidir; eğer bir dosyadan "
"okunmuyorsa ayırtedilebilir bir değer verebilirsin (genellikle "
"``'<string>'`` kullanılır)."

#: library/functions.rst:297
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"*mode* argümanı hangi türden kodun derleneceğini belirtir; eğer *source* bir "
"dizi ifadeden oluşuyorsa ``'exec'`` , eğer tek bir ifadeden oluşuyorsa "
"``'eval'`` , veya tek bir etkileşimli ifadeden oluşuyorsa ``'single'`` "
"olabilir (ikinci durumda, \"None\" dışında bir değere sahip ifadeler "
"yazdırılacaktır)."

#: library/functions.rst:303
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:"
"`compiler options <ast-compiler-flags>` should be activated and which :ref:"
"`future features <future>` should be allowed. If neither is present (or both "
"are zero) the code is compiled with the same flags that affect the code that "
"is calling :func:`compile`. If the *flags* argument is given and "
"*dont_inherit* is not (or is zero) then the compiler options and the future "
"statements specified by the *flags* argument are used in addition to those "
"that would be used anyway. If *dont_inherit* is a non-zero integer then the "
"*flags* argument is it -- the flags (future features and compiler options) "
"in the surrounding code are ignored."
msgstr ""
"*flags* ve *dont_inherit* opsiyonel argümanları hangi :ref:`derleyici "
"seçenekleri <ast-compiler-flags>` 'ın aktive edilmesi gerektiğini ve hangi :"
"ref:`gelecekteki özellikler <future>` 'e izin verileceğini kontrol eder. "
"İkisi de verilmediyse (veya ikisi de sıfır ise) kod, :func:`compile` 'ı "
"çağıran kodu etkileyen aynı bayraklarla derlenir. Eğer *flags* argümanı "
"verilip *dont_inherit* verilmediyse (veya sıfırsa), derleyici seçenekleri ve "
"gelecek ifadeleri *flags* argümanı tarafından belirtilirler, her "
"türlükullanılacak olanlara ek olarak kullanılır. Eğer *dont_inherit* "
"sıfırdan farklı bir tamsayıysa, *flags* argümanı da odur. -- çevreleyen "
"koddaki bayraklar (gelecekteki özellikler ve derleyici seçenekleri) "
"yoksayılır."

#: library/functions.rst:314
msgid ""
"Compiler options and future statements are specified by bits which can be "
"bitwise ORed together to specify multiple options. The bitfield required to "
"specify a given future feature can be found as the :attr:`~__future__."
"_Feature.compiler_flag` attribute on the :class:`~__future__._Feature` "
"instance in the :mod:`__future__` module. :ref:`Compiler flags <ast-compiler-"
"flags>` can be found in :mod:`ast` module, with ``PyCF_`` prefix."
msgstr ""
"Derleyici seçenekleri ve gelecek ifadeleri, birden fazla seçeneği belirlemek "
"için bit düzeyinde VEYA'lanabilen bitler tarafından belirlenirler. "
"Gelecekteki belirli bir özelliği belirtmek için gereken bit alanı, :mod:"
"`__future__` modülündeki :class:`~__future__._Feature` örneğinde :attr:"
"`~__future__._Feature.compiler_flag` niteliği olarak bulunabilir. :ref:"
"`Derleyici bayrakları <ast-compiler-flags>` , :mod:`ast` modülünde ``PyCF_`` "
"öneki ile bulunabilir."

#: library/functions.rst:322
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"*optimize* argümanı derleyicinin optimizasyon seviyesini belirler; ``-1`` "
"varsayılan değeri, :option:`-O` seçenekleri tarafından verilen "
"yorumlayıcının optimizasyon seviyesini seçer. Belli seviyeler: ``0`` "
"(optimizasyon yok; ``__debug__`` doğru), ``1`` (iddialar kaldırılır, "
"``__debug__`` yanlış) veya ``2`` (Ekstradan doküman dizeleri de kaldırıldı)."

#: library/functions.rst:328
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"Bu fonksiyon derlenmiş kaynak geçerli değil ise :exc:`SyntaxError` , null "
"baytlar içeriyorsa :exc:`ValueError` hatalarını ortaya çıkarır."

#: library/functions.rst:331
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"Python kodunu onun AST temsiline ayrıştırmak isterseniz, :func:`ast.parse` "
"'a bakınız."

#: library/functions.rst:47
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source``, ``filename``."
msgstr ""
"``source`` ve ``filename`` argümanlarıyla :ref:`denetleme olayı <auditing>` "
"``compile`` ortaya çıkartır."

#: library/functions.rst:336
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"``source`` ve ``filename`` argümanlarıyla :ref:`denetleme olayı <auditing>` "
"``compile`` ortaya çıkartır. Bu durum, örtük derleme ile de ortaya "
"çıkarılabilir."

#: library/functions.rst:342
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"``'single'`` veya ``'eval'`` modunda çok satırlı bir dize derleneceğinde, "
"giren veri en az bir yeni satır karakteri ile sonlandırılmalıdır. Bu :mod:"
"`code` modülündeki tamamlanmış ve tamamlanmamış ifadelerin tespitini "
"kolaylaştırmak içindir."

#: library/functions.rst:349
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"Python'un AST derleyicisindeki yığın derinliği sınırlamaları nedeniyle "
"yeterince büyük/karmaşık bir dizeyi bir AST nesnesine derlerken Python "
"yorumlayıcısını çökertmek mümkündür."

#: library/functions.rst:353
msgid ""
"Allowed use of Windows and Mac newlines.  Also, input in ``'exec'`` mode "
"does not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"Windows ve Mac yeni satırlarının kullanımına izin verildi. Ayrıca, bundan "
"böyle ``'exec'`` modunda iken veri girişinin yeni satırda sonlanması "
"gerekmiyor. *optimize* parametresi eklendi."

#: library/functions.rst:357
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"Önceden, *source* , null baytlar içeriyorsa :exc:`TypeError` hatası ortaya "
"çıkardı."

#: library/functions.rst:361
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` artık üst düze ``await``, ``async for``, "
"ve ``async with`` desteğini etkinleştirmek için bayraklarla iletilebilir."

#: library/functions.rst:369
msgid ""
"Return a complex number with the value *real* + *imag*\\*1j or convert a "
"string or number to a complex number.  If the first parameter is a string, "
"it will be interpreted as a complex number and the function must be called "
"without a second parameter.  The second parameter can never be a string. "
"Each argument may be any numeric type (including complex).  If *imag* is "
"omitted, it defaults to zero and the constructor serves as a numeric "
"conversion like :class:`int` and :class:`float`.  If both arguments are "
"omitted, returns ``0j``."
msgstr ""
"*real* + *imag*\\*1j değeriyle bir karmaşık sayı döndürür veya dize veya "
"sayıyı karmaşık sayıya dönüştürür. Eğer ilk parametre dize ise, karmaşık "
"sayı olarak yorumlanır ve fonksiyon ikinci bir parametre olmadan "
"çağrılmalıdır. İkinci parametre asla dize olamaz. Her argüman bir sayısal "
"çeşit olabilir (karmaşık sayılar dahil). Eğer *imag* atlandıysa, varsayılan "
"olarak sıfır alınır ve yapıcı metot :class:`int` ve :class:`float` gibi sayı "
"dönüştürme işlevi görür. Eğer iki argüman da atlandıysa, ``0j`` döndürür."

#: library/functions.rst:378
msgid ""
"For a general Python object ``x``, ``complex(x)`` delegates to ``x."
"__complex__()``.  If ``__complex__()`` is not defined then it falls back to :"
"meth:`__float__`.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Genel bir python nesnesi ``x`` için, ``complex(x)`` , ``x.__complex__()`` 'i "
"temsil eder. Eğer ``__complex__()`` tanımlanmadıysa, :meth:`__float__` 'a "
"geri döner. ``__float__()`` tanımlanmadıysa, :meth:`__index__` 'e geri döner."

#: library/functions.rst:385
msgid ""
"When converting from a string, the string must not contain whitespace around "
"the central ``+`` or ``-`` operator.  For example, ``complex('1+2j')`` is "
"fine, but ``complex('1 + 2j')`` raises :exc:`ValueError`."
msgstr ""
"Bir dize dönüştürürken, dizenin, merkezi ``+`` veya ``-`` operatörünün "
"etrafında boşluk içermemelidir. Örnek olarak, ``complex('1+2j')`` uygun, ama "
"``complex('1 + 2j')`` :exc:`ValueError` hatası ortaya çıkarır."

#: library/functions.rst:390
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "Karmaşık tür,  :ref:`typesnumeric` kısmında açıklanmıştır."

#: library/functions.rst:696 library/functions.rst:920
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr ""
"Rakamların, kod sabitlerinde olduğu gibi alt çizgi ile gruplandırılmasına "
"izin verilir."

#: library/functions.rst:395
msgid ""
"Falls back to :meth:`__index__` if :meth:`__complex__` and :meth:`__float__` "
"are not defined."
msgstr ""
"Eğer :meth:`__complex__` ve :meth:`__float__` tanımlanmadıysa, :meth:"
"`__index__` 'e geri döner."

#: library/functions.rst:402
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``. *name* "
"need not be a Python identifier (see :func:`setattr`)."
msgstr ""
":func:`setattr` fonksiyonu ile ilişkilidir . Argümanlar bir nesne ve bir "
"dizedir. Dize nesnenin özelliklerinden birinin adı olmak zorundadır. "
"Fonksiyon nesnenin izin vermesi koşuluyla, dizede belirtilen bu özelliği "
"siler. Örnek olarak, ``delattr(x, 'foobar')`` , ``del x.foobar`` 'a eş "
"değerdir. *name* bir Python tanımlayıcısı olmak zorunda değildir (:func:"
"`setattr` bkz.)."

#: library/functions.rst:415
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"Yeni bir sözlük yaratır. :class:`dict` nesnesi bir sözlük sınıfıdır.  Bu "
"sınıf hakkındaki dökümantasyon için :class:`dict` ve :ref:`typesmapping` 'e "
"bakınız."

#: library/functions.rst:418
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"Diğer konteynerler için dahili :class:`list` , :class:`set` , :class:`tuple` "
"sınıfları ve :mod:`collections` modülüne bakınız."

#: library/functions.rst:425
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"Argüman yoksa, mevcut yerel kapsamdaki isimleri liste olarak döndürür. "
"Argüman varsa, o nesne için geçerli özelliklerin bir listesini döndürmeye "
"çalışır."

#: library/functions.rst:428
msgid ""
"If the object has a method named :meth:`__dir__`, this method will be called "
"and must return the list of attributes. This allows objects that implement a "
"custom :func:`__getattr__` or :func:`__getattribute__` function to customize "
"the way :func:`dir` reports their attributes."
msgstr ""
"Eğer nesne :meth:`__dir__` adında bir metoda sahipse, bu metot çağrılır ve "
"nesnenin özelliklerinin listesini döndürmelidir. Bu, özel bir :func:"
"`__getattr__` veya :func:`__getattribute__` fonksiyonunu uygulayan "
"nesnelerin, :func:`dir` 'in özellikleri bildirme şeklini özelleştirmesine "
"izin verir."

#: library/functions.rst:433
msgid ""
"If the object does not provide :meth:`__dir__`, the function tries its best "
"to gather information from the object's :attr:`~object.__dict__` attribute, "
"if defined, and from its type object.  The resulting list is not necessarily "
"complete and may be inaccurate when the object has a custom :func:"
"`__getattr__`."
msgstr ""
"Eğer nesne :meth:`__dir__` metodu sağlamıyorsa, fonksiyon nesnenin :attr:"
"`~object.__dict__` özelliğinden veri toplamak için elinen gelenin en iyisini "
"dener. Sonuç listesinin tamamlanmış olmasına gerek yoktur ve nesnenin özel "
"bir  :func:`__getattr__` fonksiyonu varsa kusurlu olabilir."

#: library/functions.rst:438
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"Varsayılan :func:`dir` mekanizması, eksiksiz bilgi yerine en alakalı bilgiyi "
"üretmeye çalıştığı için farklı nesne türleriyle farklı çalışır:"

#: library/functions.rst:442
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""
"Eğer nesne bir modül nesnesiyse, liste modülün özelliklerinin isimlerini "
"içerir."

#: library/functions.rst:445
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"Eğer nesne bir tür veya sınıf nesnesiyse, liste onun özelliklerini ve "
"yinelemeli olarak tabanlarının özelliklerini içerir."

#: library/functions.rst:448
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"Aksi takdirde, liste nesnenin özelliklerini, sınıfının özelliklerini ve "
"yinelemeli olarak sınıfının temel sınıflarının özelliklerini içerir."

#: library/functions.rst:452
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "Sonuç listesi alfabetik olarak sıralanmıştır. Örnek olarak:"

#: library/functions.rst:471
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"Çünkü :func:`dir`, öncelikle etkileşimli bir komut isteminde kullanım "
"kolaylığı sunmak amacıyla sağlanır. Titizlikle ve tutarlı bir isim kümesi "
"sağlamaktansa ilginç bir isim kümesi sağlar, Detaylı davranışlı sürümler "
"arasında değişikliğe uğrayabilir. Örnek olarak, argüman sınıf ise metasınıf "
"özellikleri sonuç listesinde yer almaz."

#: library/functions.rst:481
msgid ""
"Take two (non-complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating "
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"Argüman olarak iki (karmaşık olmayan) sayı alır ve bölme işlemi yapılırken "
"bu argümanların bölümleri ve kalanlarından oluşan bir sayı çifti döndürür. "
"Karışık işlenen türlerinde, ikili aritmetik işleçler için geçerli olan "
"kurallar geçerlidir. Sonuç tam sayılar için ``(a // b, a % b)`` , Gerçel "
"sayılar için ``(q, a % b)`` (*q* genellikle ``math.floor(a / b)`` 'ye eşit "
"ama bundan 1 eksik olabilir). Her durumda ``q * b + a % b`` , *a* 'ya çok "
"yakındır. Eğer ``a % b`` sıfır değilse, *b* ile aynı işarete sahiptir ve ``0 "
"<= abs(a % b) < abs(b)``."

#: library/functions.rst:493
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"Bir numaralandırma nesnesi döndürür. *iterable* bir dize, :term:`iterator` "
"veya tekrarlamayı destekleyen başka bir nesne olmalıdır. Yineleyicinin by :"
"func:`enumerate` tarafından döndürülen :meth:`~iterator.__next__` metodu bir "
"sayıyı (varsayılan olarak 0 olan *start* 'dan) ve *iterable* üzerinde "
"yinelemeden elde edilen değerleri içeren bir demet döndürür."

#: library/functions.rst:505
msgid "Equivalent to::"
msgstr "Şuna eşittir::"

#: library/functions.rst:517
msgid ""
"The arguments are a string and optional globals and locals.  If provided, "
"*globals* must be a dictionary.  If provided, *locals* can be any mapping "
"object."
msgstr ""
"Argümanlar bir dize veya opsiyonel global ve yerel değişkenler olabilir. "
"Sağlanırsa, *globals* bir sözlük olmalıdır. Sağlanırsa, *locals* herhangi "
"bir haritalama nesnesi olabilir."

#: library/functions.rst:521
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  That way you can "
"control what builtins are available to the executed code by inserting your "
"own ``__builtins__`` dictionary into *globals* before passing it to :func:"
"`eval`.  If the *locals* dictionary is omitted it defaults to the *globals* "
"dictionary.  If both dictionaries are omitted, the expression is executed "
"with the *globals* and *locals* in the environment where :func:`eval` is "
"called.  Note, *eval()* does not have access to the :term:`nested scopes "
"<nested scope>` (non-locals) in the enclosing environment."
msgstr ""
"*expression* bağımsız değişkeni, genel ve yerel ad alanı olarak *globals* ve "
"*locals* sözlükleri kullanılarak Python ifadesi (teknik olarak bir koşul "
"listesi) olarak ayrıştırılır ve değerlendirilir.  *globals* sözlüğü varsa ve "
"``__builtins__`` anahtarı için bir değer içermiyorsa, *expression* "
"ayrıştırılmadan önce bu anahtarın altına yerleşik modül :mod:`builtins` "
"sözlüğüne bir referans eklenir.  Bu şekilde, kendi ``__builtins__`` "
"sözlüğünüzü :func:`eval` içine geçirmeden önce *globals* içine ekleyerek "
"yürütülen kod için hangi yerleşiklerin kullanılabilir olduğunu kontrol "
"edebilirsiniz.  *locals* sözlüğü atlanırsa, varsayılan olarak *globals* "
"sözlüğünü kullanır.  Her iki sözlük de atlanırsa, ifade :func:`eval` olarak "
"adlandırılan ortamda *globals* ve *locals* ile yürütülür.  Not, *eval()* "
"kapsama ortamında :term:`iç içe kapsamlar <nested scope>` (yerel olmayan) "
"erişimi yoktur."

#: library/functions.rst:536
msgid ""
"The return value is the result of the evaluated expression. Syntax errors "
"are reported as exceptions.  Example:"
msgstr ""
"Dönen değer değerlendirilmiş ifadenin sonucudur. Söz dizimi hataları, "
"istisnalar olarak rapor edilir. Örnek:"

#: library/functions.rst:543
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case, pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"Bu fonksiyon keyfi kod nesnelerini (:func:`compile` tarafından "
"oluşturulanlar gibi) çalıştırmak için de kullanılabilir. Bu durumda, dize "
"yerine bir kod nesnesi iletin. Eğer kod nesnesi *mode* argümanı olarak "
"``'exec'`` ile derlendiyse, :func:`eval` 'in döndürdüğü değer ``None`` "
"olacaktır."

#: library/functions.rst:548
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions return the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"İpuçları: ifadelerin dinamik yürütmeleri :func:`exec` fonksiyonu tarafından "
"desteklenir. :func:`globals` ve :func:`locals` fonksiyonları sırasıyla "
"mevcut global ve yerel sözlüğü döndürür. :func:`eval` veya :func:`exec` "
"tarafından kullanım için dolaşmak yararlı olabilir."

#: library/functions.rst:553
msgid ""
"If the given source is a string, then leading and trailing spaces and tabs "
"are stripped."
msgstr ""
"Eğer verilen kaynak dize ise, baştaki ve sondaki boşluklar ve tab'lar "
"çıkarılır."

#: library/functions.rst:556
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
"Sadece kalıp içeren ifadelerle dizeleri güvenli bir şekilde "
"değerlendirebilen bir fonksiyon arıyorsanız, :func:`ast.literal_eval` 'a "
"bakınız."

#: library/functions.rst:43
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with argument "
"``code_object``."
msgstr ""
"``code_object`` argümanıyla bir :ref:`denetleme olayı <auditing>` ``exec`` "
"hatası ortaya çıkarır."

#: library/functions.rst:602
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"Argüman olarak kod nesnesi ile bir :ref:`denetleme olayı <auditing>` "
"``exec`` hatası ortaya çıkartır. Kodun derlendiği sırada çıkan hatalar da "
"yükseltilir."

#: library/functions.rst:568
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section :ref:`file-input` in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""
"Bu fonksiyon Python kodunun dinamik çalıştırılmasını destekler. *object* bir "
"kod objesi veya dize olmalıdır. Dize ise, dize daha sonra yürütülen bir "
"Python ifadeleri paketi olarak ayrıştırılır (bir sözdizimi hatası "
"olmadıkça). [#]_ eğer bir kod objesiyse, sadece çalıştırılır. Her durumda, "
"çalıştırılacak kodun dosya girişi olarak geçerli olması beklenir (Referans "
"Kılavuzundaki :ref:`file-input` kısmına bakınız). :keyword:`nonlocal`, :"
"keyword:`yield`, ve :keyword:`return` ifadelerinin :func:`exec` fonksiyonuna "
"geçirilen kod kaynağında bile fonksiyonlar dışında kullanılamayacağını "
"unutmayınız. Döndürülen değer ``None`` 'dır."

#: library/functions.rst:579
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at the module level, globals and locals "
"are the same dictionary. If exec gets two separate objects as *globals* and "
"*locals*, the code will be executed as if it were embedded in a class "
"definition."
msgstr ""
"Her durumda eğer opsiyonal kısımlar atlandıysa, kod mevcut kapsamda "
"çalıştırılır. Eğer sadece *globals* sağlandıysa, global ve yerel değişkenler "
"için kullanılacak bir sözlük olmalıdır (bir sözlüğün alt sınıfı değil).  "
"Eğer *globals* ve *locals* sağlandıysa, global ve yerel değişkenler için "
"sırasıyla kullanılırlar. Eğer sağlandıysa, *locals* herhangi bir haritalama "
"objesi olabilir. Modül seviyesinde global ve yerel değişkenlerin aynı "
"sözlükte bulunduğunu unutmayın. Eğer exec *globals* ve *locals* olarak iki "
"ayrı nesne alırsa, kod bir sınıf tanımına gömülmüş gibi çalıştırılacaktır."

#: library/functions.rst:589
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"Eğer *globals* sözlüğü ``__builtins__`` anahtarı için bir değer içermiyorsa, "
"bu anahtarın altına bir referans yerleşik modül :mod:`builtins` 'in "
"sözlüğüne eklenir. Bu şekilde, kendi ``__builtins__`` sözlüğünüzü :func:"
"`exec` 'e geçirmeden önce *globals* içine ekleyerek yürütülen kod için hangi "
"yerleşiklerin mevcut olduğunu kontrol edebilirsiniz."

#: library/functions.rst:595
msgid ""
"The *closure* argument specifies a closure--a tuple of cellvars. It's only "
"valid when the *object* is a code object containing free variables. The "
"length of the tuple must exactly match the number of free variables "
"referenced by the code object."
msgstr ""
"*closure* argümanı, bir hücre değişkenleri demeti olan bir kapatmayı "
"belirtir. Yalnızca *nesne* serbest değişkenler içeren bir kod nesnesi "
"olduğunda geçerlidir. Demetin uzunluğu, kod nesnesi tarafından başvurulan "
"serbest değişkenlerin sayısıyla tam olarak eşleşmelidir."

#: library/functions.rst:607
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""
"Yerleşik :func:`globals` ve :func:`locals` fonksiyonları mevcut global ve "
"yerel sözlüğü sırasıyla döndürür. Bu, :func:`exec` 'e ikinci ve üçüncü "
"argüman olarak kullanılmak üzere geçirmek için yararlı olabilir."

#: library/functions.rst:613
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"Varsayılan *locals* davranışı aşağıda :func:`locals` fonksiyonu için "
"açıklandığı gibi: varsayılan *locals* sözlüğünde değişiklik yapılmaya "
"çalışılmamalıdır. :func:`exec` fonksiyonu değer döndürdükten sonra kodun "
"*locals* üzerindeki etkilerini görmeniz gerekiyorsa, açık bir *local* "
"sözlüğü geçirin."

#: library/functions.rst:618
msgid "Added the *closure* parameter."
msgstr "*closure* parametresi eklendi."

#: library/functions.rst:624
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"is true.  *iterable* may be either a sequence, a container which supports "
"iteration, or an iterator.  If *function* is ``None``, the identity function "
"is assumed, that is, all elements of *iterable* that are false are removed."
msgstr ""
"*fonksiyon*'un doğru olduğu *iterable* öğelerinden bir yineleyici oluşturun. "
"*iterable* bir dizi, yinelemeyi destekleyen bir kapsayıcı veya bir "
"yineleyici olabilir. *fonksiyon* ``None`` ise, kimlik işlevi varsayılır, "
"yani *iterable* öğesinin yanlış olan tüm öğeleri kaldırılır."

#: library/functions.rst:630
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"Eğer fonksiyon ``None`` değilse ve ``(item for item in iterable if item)`` "
"için fonksiyon ``None`` ise, ``filter(function, iterable)`` 'ın bir üretici "
"ifadesine ``(item for item in iterable if function(item))`` eşit olduğunu "
"unutmayın."

#: library/functions.rst:635
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* is false."
msgstr ""
"*fonksiyon*'un yanlış olduğu *iterable* öğelerini döndüren tamamlayıcı "
"fonksiyon için :func:`itertools.filterfalse` konusuna bakın."

#: library/functions.rst:645
msgid "Return a floating point number constructed from a number or string *x*."
msgstr "Bir numara veya string *x* 'ten oluşturulan bir reel sayı döndürür."

#: library/functions.rst:647
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or positive or negative infinity.  More precisely, the input must "
"conform to the ``floatvalue`` production rule in the following grammar, "
"after leading and trailing whitespace characters are removed:"
msgstr ""
"Eğer argüman dize ise, bir ondalık sayı içermelidir, isteğe bağlı olarak "
"önünde bir işaret bulunabilir veya boşluk içine gömülebilir. Opsiyonel "
"işaret ``'+'`` veya ``'-'`` olabilir; ``'+'`` işareti üretilen değerde bir "
"etkisi yoktur. Argüman ayrıca NaN (not-a-number), pozitif sonsuz veya "
"negatif sonsuzu  temsil eden bir dize olabilir. Daha açık olmak gerekirse, "
"baştaki ve sondaki boşluk karakterleri kaldırıldıktan sonra veri girişi "
"aşağıdaki dilbilgisindeki ``floatvalue`` üretim kuralına uygun olmalıdır:"

#: library/functions.rst:665
msgid ""
"Here ``digit`` is a Unicode decimal digit (character in the Unicode general "
"category ``Nd``). Case is not significant, so, for example, \"inf\", "
"\"Inf\", \"INFINITY\", and \"iNfINity\" are all acceptable spellings for "
"positive infinity."
msgstr ""
"Burada ``digit`` bir Unicode ondalık basamağıdır (Unicode genel kategorisi "
"``Nd`` 'deki karakter). Büyük/küçük harf önemli değildir, bu nedenle, "
"örneğin, \"inf\", \"Inf\", \"INFINITY\" ve \"iNfINity\" pozitif sonsuzluk "
"için kabul edilebilir yazımlardır."

#: library/functions.rst:670
msgid ""
"Otherwise, if the argument is an integer or a floating point number, a "
"floating point number with the same value (within Python's floating point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"Aksi takdirde, argüman bir tam sayı veya reel sayıysa, aynı değerde reel "
"sayı döndürülür. Eğer argüman Python reel sayı aralığının dışındaysa, :exc:"
"`OverflowError` hatası ortaya çıkar."

#: library/functions.rst:675
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Genel bir Python nesnesi ``x`` için, ``float(x)``, ``x.__float__()`` "
"fonksiyonuna delege eder. Eğer ``__float__()`` tanımlanmamışsa, :meth:"
"`__index__` 'e geri döner."

#: library/functions.rst:679
msgid "If no argument is given, ``0.0`` is returned."
msgstr "Argüman verilmediyse, ``0.0`` döndürülür."

#: library/functions.rst:681
msgid "Examples::"
msgstr "Örnekler::"

#: library/functions.rst:694
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "Float tipi :ref:`typesnumeric` kısmında açıklandı."

#: library/functions.rst:702
msgid "Falls back to :meth:`__index__` if :meth:`__float__` is not defined."
msgstr ""
":meth:`__float__` tanımlanmadıysa, :meth:`__index__` konumuna geri döner."

#: library/functions.rst:712
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument; however, there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"Bir *value* 'ı, *format_spec* tarafından kontrol edildiği gibi "
"\"biçimlendirilmiş\" bir gösterime dönüştürür. *format_spec* 'in "
"yorumlanması *value* argümanının tipine göre değişkendir; ama, çoğu yerleşik "
"tiplerde kullanılan :ref:`formatspec` adında bir standart biçimlendirme "
"sözdizimi var."

#: library/functions.rst:717
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"Varsayılan *format_spec*, :func:`str(value) <str>` fonksiyonunu çağırmakla "
"aynı etkiyi gösteren boş bir dizedir."

#: library/functions.rst:720
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`__format__` method.  A :exc:`TypeError` "
"exception is raised if the method search reaches :mod:`object` and the "
"*format_spec* is non-empty, or if either the *format_spec* or the return "
"value are not strings."
msgstr ""
"``format(value, format_spec)`` çağrısı, değerin :meth:`__format__` metodunu "
"ararken örnek sözlüğü atlayan ``type(value).__format__(value, format_spec)`` "
"biçimine çevrilir. Eğer metot araması :mod:`object` 'e ulaşırsa ve "
"*format_spec* boş değilse, veya *format_spec* veya döndürülen değer dize "
"değilse, :exc:`TypeError` hatası ortaya çıkar."

#: library/functions.rst:727
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"*format_spec* boş bir dize değilse, ``object().__format__(format_spec)``, :"
"exc:`TypeError` hatasını ortaya çıkartır."

#: library/functions.rst:736
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"Opsiyonel olarak *iterable* öğesinden alınan öğelerle yeni bir :class:"
"`frozenset` nesnesi döndürür. ``frozenset`` yerleşik bir sınıftır. Bu sınıf "
"hakkında dokümantasyona ulaşmak için :class:`frozenset` ve :ref:`types-set` "
"'e bakınız."

#: library/functions.rst:740
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"Diğer konteynerler için, yerleşik :class:`set`, :class:`list`, :class:"
"`tuple`, ve :class:`dict` sınıflarına, ayrıca :mod:`collections` modülüne "
"bakabilirsiniz."

#: library/functions.rst:748
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised. *name* need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"*object* 'in parametre olarak verilmiş isimli özelliğinin değerini döndürür. "
"*name* bir dize olmalıdır. Eğer dize nesnenin özelliklerinden birinin ismi "
"ise, sonuç bu özelliğin değeri olur. Örnek olarak, ``getattr(x, 'foobar')``, "
"``x.foobar`` 'a eşittir. Eğer isimlendirilmiş özellik objede bulunmuyorsa, "
"*default* sağlanmışsa döndürülür, aksi takdirde :exc:`AttributeError` hatası "
"ortaya çıkar. *name* bir Python tanımlayıcısı olmak zorunda değildir (:func:"
"`setattr` bkz)."

#: library/functions.rst:757
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to retrieve it with :func:"
"`getattr`."
msgstr ""
":ref:`özel isim yönetimi <private-name-mangling>` derleme zamanında "
"gerçekleştiğinden dolayı, :func:`getattr` ile almak için özel bir niteliğin "
"(baştaki iki alt çizgili nitelikler) adını manuel olarak değiştirmek gerekir."

#: library/functions.rst:765
msgid ""
"Return the dictionary implementing the current module namespace. For code "
"within functions, this is set when the function is defined and remains the "
"same regardless of where the function is called."
msgstr ""
"Geçerli modül ad alanını uygulayan sözlüğü döndürür. Fonksiyonlar içeren kod "
"için, bu fonksiyon tanımlandığında ayarlanır ve fonksiyonun çağrıldığı "
"yerden bağımsız olarak aynı kalır."

#: library/functions.rst:772
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"Argümanlar bir nesne ve dizedir. Eğer dize, nesnenin özelliklerinden birinin "
"ismiyse ``True``, değilse ``False`` döndürür. (Bu ``getattr(object, name)`` "
"'i çağırarak uygulanır ve :exc:`AttributeError` hatası oluşup oluşmayacağı "
"görülür.)"

#: library/functions.rst:780
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"Nesnenin karma değerini döndürür (eğer varsa). Karma değerler tam "
"sayılardır. Sözlükleri incelerken hızlı bir şekilde anahtarları "
"karşılaştırmak için kullanılırlar. Karşılaştırıldığında aynı olan nümerik "
"değerler aynı karma değere sahiptir (1 ve 1.0 durumunda olduğu gibi farklı "
"veri tiplerinde olsalar bile)."

#: library/functions.rst:787
msgid ""
"For objects with custom :meth:`__hash__` methods, note that :func:`hash` "
"truncates the return value based on the bit width of the host machine. See :"
"meth:`__hash__` for details."
msgstr ""
":meth:`__hash__` metodu olan nesneler için, :func:`hash` öğesinin ana "
"makinenin bit genişliğine göre döndürdüğü değeri kestiğini unutmayın. "
"Detaylar için :meth:`__hash__` 'e bakınız."

#: library/functions.rst:794
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"Yerleşik yardım sistemini çağırın. (Bu fonksiyon interaktif kullanıma "
"yöneliktir.) Eğer argüman verilmediyse, interaktif yardım sistemi "
"yorumlayıcı konsolunda başlar. Eğer argüman bir dize ise, bir modül, "
"fonksiyon, sınıf, metot, anahtar kelime veya dokümantasyon konusu için "
"dizeye bakılır ve bir yardım sayfası konsola bastırılır. Eğer argüman başka "
"tipte bir nesne ise, nesne üzerinde bir yardım sayfası oluşturulur."

#: library/functions.rst:801
msgid ""
"Note that if a slash(/) appears in the parameter list of a function when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"Eğer :func:`help` çağrılırken bir fonksiyonun parametre listesinde eğik "
"çizgi(/) bulunuyorsa, bu, eğik çizgiden önceki parametrelerin yalnızca "
"konumsal olduğu anlamına gelir. Daha fazla bilgi için :ref:`yalnızca "
"konumsalparametrelerle ilgili SSS girişi <faq-positional-only-arguments>` "
"'ne bakınız."

#: library/functions.rst:806
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""
"Bu fonksiyon :mod:`site` modülü tarafından yerleşik ad alanına eklenir."

#: library/functions.rst:808
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
":mod:`pydoc` ve :mod:`inspect` 'e gelen değişiklikler, çağrılabilir nesneler "
"için rapor edilen damgaların artık daha kapsamlı ve tutarlı olduğunu ifade "
"eder."

#: library/functions.rst:815
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`__index__` method that returns an integer. Some examples:"
msgstr ""
"Bir tam sayıyı küçük harflerden oluşan ve \"0x\" ile başlayan onaltılık bir "
"dizeye dönüştürür. Eğer *x* Python :class:`int` nesnesi değilse, tam sayı "
"döndüren bir :meth:`__index__` metoduna sahip olmalidir. Bazı örnekler:"

#: library/functions.rst:824
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"Eğer bir tam sayıyı büyük harf-küçük harf, önekli-öneksiz bir onaltılık "
"sayıya dönüştürmek istiyorsanız, aşağıdaki yolları kullanabilirsiniz:"

#: library/functions.rst:836
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"Ayrıca onaltılık bir dizgiyi 16 tabanını kullanarak bir tam sayıya "
"dönüştürmek için :func:`int` 'e bakınız."

#: library/functions.rst:841
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"Bir gerçel sayıdan onaltılık bir dize gösterimi elde etmek için :meth:`float."
"hex` metodunu kullanın."

#: library/functions.rst:847
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"Bir nesnenin \"kimlik\" 'ini döndürür. Bu nesnenin ömrü boyunca eşsiz ve "
"sabit olduğu garanti edilen bir tam sayıdır. Ömürleri örtüşmeyen iki nesne "
"aynı :func:`id` değerine sahip olabilir."

#: library/functions.rst:852
msgid "This is the address of the object in memory."
msgstr "Bu, bellekteki nesnenin adresidir."

#: library/functions.rst:8
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"``id`` argümanıyla beraber bir :ref:`denetleme olayı <auditing>` ``builtins."
"id`` ortaya çıkartır."

#: library/functions.rst:860
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"Eğer *prompt* argümanı bulunuyorsa, sonunda yeni bir satır olmadan standart "
"çıktıya yazılır. Ardından fonksiyon veri girişinden bir satır okur ve bunu "
"bir dizeye çevirip (sondaki yeni satırı çıkartır) döndürür. EOF "
"okunduğunda, :exc:`EOFError` istisnası ortaya çıkar. Örnek::"

#: library/functions.rst:870
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"Eğer :mod:`readline` modülü yüklendiyse, :func:`input` ayrıntılı satır "
"düzenleme ve geçmiş özellikleri sağlamak için onu kullanacaktır."

#: library/functions.rst:14
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt``."
msgstr ""
"``prompt`` argümanıyla birlikte bir :ref:`denetleme olayı <auditing>` "
"``builtins.input`` ortaya çıkartır."

#: library/functions.rst:875
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"Girişi okumadan önce, ``prompt`` argümanıyla birlikte bir :ref:`denetleme "
"olayı <auditing>` ``builtins.input`` ortaya çıkartır"

#: library/functions.rst:19
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"argument ``result``."
msgstr ""
"``result`` argümanıyla birlikte bir :ref:`denetleme olayı <auditing>` "
"``builtins.input/result`` ortaya çıkartır."

#: library/functions.rst:880
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"the result after successfully reading input."
msgstr ""
"Girişi başarıyla okuduktan sonra sonuçla birlikte bir :ref:`auditing event "
"<auditing>` ``builtins.input/result`` denetleme olayı ortaya çıkarır."

#: library/functions.rst:887
msgid ""
"Return an integer object constructed from a number or string *x*, or return "
"``0`` if no arguments are given.  If *x* defines :meth:`__int__`, ``int(x)`` "
"returns ``x.__int__()``.  If *x* defines :meth:`__index__`, it returns ``x."
"__index__()``.  If *x* defines :meth:`__trunc__`, it returns ``x."
"__trunc__()``. For floating point numbers, this truncates towards zero."
msgstr ""
"Bir numara veya *x* dizesinden bir tam sayı oluşturur. Eğer argüman "
"verilmediyse 0 döndürür. *x* :meth:`__int__` 'i içeriyorsa, ``int(x)`` ``x."
"__int__()`` 'i döndürür. *x* :meth:`__index__` 'i içeriyorsa, ``x."
"__index__()`` 'i döndürür. *x* :meth:`__trunc__` 'ı içeriyorsa, ``x."
"__trunc__()`` 'ı döndürür. Gerçel sayılar için, sayı tam sayıya çevrilir."

#: library/functions.rst:894
msgid ""
"If *x* is not a number or if *base* is given, then *x* must be a string, :"
"class:`bytes`, or :class:`bytearray` instance representing an integer in "
"radix *base*.  Optionally, the string can be preceded by ``+`` or ``-`` "
"(with no space in between), have leading zeros, be surrounded by whitespace, "
"and have single underscores interspersed between digits."
msgstr ""
"Eğer *x* bir sayı değilse veya *base* verilmişse, *x* *base* radiksinde bir "
"tamsayıyı temsil eden bir string, :class:`bytes` veya :class:`bytearray` "
"örneği olmalıdır.  İsteğe bağlı olarak, dizeden önce ``+`` veya ``-`` (arada "
"boşluk olmadan) gelebilir, önünde sıfırlar olabilir, boşluklarla "
"çevrelenebilir ve rakamlar arasına serpiştirilmiş tek alt çizgilere sahip "
"olabilir."

#: library/functions.rst:900
msgid ""
"A base-n integer string contains digits, each representing a value from 0 to "
"n-1. The values 0--9 can be represented by any Unicode decimal digit. The "
"values 10--35 can be represented by ``a`` to ``z`` (or ``A`` to ``Z``). The "
"default *base* is 10. The allowed bases are 0 and 2--36. Base-2, -8, and -16 "
"strings can be optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or "
"``0x``/``0X``, as with integer literals in code.  For base 0, the string is "
"interpreted in a similar way to an :ref:`integer literal in code "
"<integers>`, in that the actual base is 2, 8, 10, or 16 as determined by the "
"prefix. Base 0 also disallows leading zeros: ``int('010', 0)`` is not legal, "
"while ``int('010')`` and ``int('010', 8)`` are."
msgstr ""
"Bir taban-n tamsayı dizesi, her biri 0 ile n-1 arasında bir değeri temsil "
"eden rakamlar içerir. 0--9 değerleri herhangi bir Unicode ondalık basamağı "
"ile temsil edilebilir. 10-35 değerleri ``a`` ila ``z`` (veya ``A`` ila "
"``Z``) ile temsil edilebilir. Varsayılan *taban* 10'dur. İzin verilen "
"tabanlar 0 ve 2--36'dır. Taban-2, -8 ve -16 dizelerinin önüne isteğe bağlı "
"olarak ``0b``/``0B``, ``0o``/``0O`` veya ``0x``/``0X`` eklenebilir, tıpkı "
"koddaki tamsayı değişmezlerinde olduğu gibi.  Taban 0 için, dize :ref:"
"`koddaki tamsayı değişmezi <integers>` 'ne benzer bir şekilde yorumlanır, "
"gerçek taban önek tarafından belirlenen 2, 8, 10 veya 16'dır. Taban 0 ayrıca "
"baştaki sıfırlara da izin vermez: ``int('010', 0)`` yasal değilken, "
"``int('010')`` ve ``int('010', 8)`` yasaldır."

#: library/functions.rst:911
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "Tam sayı tipi :ref:`typesnumeric` kısmında açıklandı."

#: library/functions.rst:913
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"Eğer *base* bir :class:`int` örneği değilse ve *base* objesi :meth:`base."
"__index__ <object.__index__>` metoduna sahipse, bu metot, taban için bir "
"tamsayı elde etmek için çağrılır. Önceki sürümler :meth:`base.__index__ "
"<object.__index__>` yerine :meth:`base.__int__ <object.__int__>` 'i kullandı."

#: library/functions.rst:926
msgid "Falls back to :meth:`__index__` if :meth:`__int__` is not defined."
msgstr ":meth:`__int__` tanımlı değilse :meth:`__index__` konumuna geri döner."

#: library/functions.rst:929
msgid "The delegation to :meth:`__trunc__` is deprecated."
msgstr ":meth:`__trunc__` yetkisi kullanımdan kaldırıldı."

#: library/functions.rst:932
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string *x* to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
":class:`int` dizi girişleri ve dizi gösterimleri, hizmet reddi "
"saldırılarından (DOS) kaçınmaya yardımcı olmak için sınırlandırılabilir. :"
"exc:`ValueError`, bir *x* dizgesini :class:`int` 'e dönüştürürken sınır "
"aşıldığında veya :class:`int` 'i bir dizgeye dönüştürürken sınırı aştığında "
"ortaya çıkar. :ref:`tam sayı dönüştürme uzunluk sınırlaması "
"<int_max_str_digits>` dokümanına bakın."

#: library/functions.rst:942
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect, or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples) or a :ref:`types-union` of "
"multiple types, return ``True`` if *object* is an instance of any of the "
"types. If *classinfo* is not a type or tuple of types and such tuples, a :"
"exc:`TypeError` exception is raised. :exc:`TypeError` may not be raised for "
"an invalid type if an earlier check succeeds."
msgstr ""
"*object* argümanı, *classinfo* argümanının bir örneğiyse veya (doğrudan, "
"dolaylı veya :term:`sanal <abstract base class>`) alt sınıfının bir "
"örneğiyse ``True`` döndürür. Eğer *object* verilen tipte bir nesne değilse, "
"fonksiyon mutlaka ``False`` döndürür. *classinfo*, tür nesnelerinden oluşan "
"bir demet (veya yinelemeli olarak, bu tür diğer demetler) veya birden çok "
"türden bir :ref:`types-union` ise, ayrıca *object* bu verilen türlerden "
"herhangi birinin örneği ise ``True`` döndürür. Eğer *classinfo* bir tür veya "
"türler içeren bir tuple değilse, :exc:`TypeError` hatası ortaya çıkar. Eğer "
"önceden yapılmış bir kontrol başarılıysa :exc:`TypeError` geçersiz bir tip "
"için ortaya çıkmayabilir."

#: library/functions.rst:967
msgid "*classinfo* can be a :ref:`types-union`."
msgstr "*classinfo* bir :ref:`types-union` olabilir."

#: library/functions.rst:959
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect, or :term:"
"`virtual <abstract base class>`) of *classinfo*.  A class is considered a "
"subclass of itself. *classinfo* may be a tuple of class objects (or "
"recursively, other such tuples) or a :ref:`types-union`, in which case "
"return ``True`` if *class* is a subclass of any entry in *classinfo*.  In "
"any other case, a :exc:`TypeError` exception is raised."
msgstr ""
"Eğer *class*, *classinfo* 'nun bir alt sınıfıysa (doğrudan, dolaylı, veya :"
"term:`sanal <abstract base class>`), ``True`` döndürür. Bir sınıf kendisinin "
"alt sınıfı olarak dikkate alınır. *classinfo* sınıf nesnelerinden oluşan bir "
"demet (veya tekrarlı diğer benzer demetler) veya :ref:`types-union` "
"olabilir, bu durumda eğer *class*, *classinfo* 'daki elemanlardan herhangi "
"birinin alt sınıfıysa ``True`` döndürülür. Diğer her durumda, :exc:"
"`TypeError` hatası ortaya çıkar."

#: library/functions.rst:974
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the :"
"term:`iterable` protocol (the :meth:`__iter__` method), or it must support "
"the sequence protocol (the :meth:`__getitem__` method with integer arguments "
"starting at ``0``).  If it does not support either of those protocols, :exc:"
"`TypeError` is raised. If the second argument, *sentinel*, is given, then "
"*object* must be a callable object.  The iterator created in this case will "
"call *object* with no arguments for each call to its :meth:`~iterator."
"__next__` method; if the value returned is equal to *sentinel*, :exc:"
"`StopIteration` will be raised, otherwise the value will be returned."
msgstr ""
"Bir :term:`iterator` nesnesi döndürür. İlk parametre ikinci parametrenin "
"sunumuna oldukça bağımlı bir şekilde yorumlanır. İkinci parametre yoksa, "
"*nesne* :term:`iterable` protokolünü (:meth:`__iter__` metodu) destekleyen "
"bir koleksiyon objesi olmalıdır veya dizi protokolünü (``0`` 'dan başlayarak "
"tam sayı değerleri alan :meth:`__getitem__` metodu) desteklemelidir. Eğer bu "
"iki protokolü de desteklemiyorsa, :exc:`TypeError` hatası ortaya çıkar. Eğer "
"2. argüman, *sentinel*, verildiyse, *nesne* çağırılabilir bir nesne "
"olmalıdır. Bu durumda oluşturulan yineleyici, :meth:`~iterator.__next__` "
"yöntemine yapılan her çağrı için hiçbir argüman olmadan *nesne* 'yi çağırır; "
"döndürülen değer *sentinel* 'e eşitse, :exc:`StopIteration` hatası ortaya "
"çıkar, aksi takdirde değer döndürülür."

#: library/functions.rst:987
msgid "See also :ref:`typeiter`."
msgstr "Ayrıca :ref:`typeiter` bkz."

#: library/functions.rst:989
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
":func:`iter` 'in ikinci formunun kullanışlı uygulamalarından biri bir blok "
"okuyucu inşaa etmektir. Örnek olarak, dosyanın sonuna ulaşılana kadar ikili "
"bir veritabanı dosyasından sabit genişlikte bloklar okunurken::"

#: library/functions.rst:1001
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"Bir objenin uzunluğunu (element sayısını) döndürür. Argüman bir dizi "
"(örneğin dize, bytes, demet, liste veya aralık) veya bir koleksiyon (örneğin "
"sözlük, küme veya dondurulmuş küme) olabilir."

#: library/functions.rst:1007
msgid ""
"``len`` raises :exc:`OverflowError` on lengths larger than :data:`sys."
"maxsize`, such as :class:`range(2 ** 100) <range>`."
msgstr ""
"``len``, :class:`range(2 ** 100) <range>` gibi :data:`sys.maxsize` 'dan daha "
"geniş uzunluklar için :exc:`OverflowError` hatası ortaya çıkartır."

#: library/functions.rst:1016
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"Bir fonksiyon görevi görmektense, :ref:`typesseq-list` ve :ref:`typesseq` de "
"anlatıldığı gibi :class:`list` bir değiştirebilir dizi çeşididir."

#: library/functions.rst:1022
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, :func:"
"`locals` and :func:`globals` are the same dictionary."
msgstr ""
"Anlık yerel sembol tablosunu temsil eden bir sözlüğü günceller ve döndürür. "
"Serbest değişkenler :func:`locals` fonksiyon bloklarında çağırıldığında onun "
"aracılığıyla döndürülür, aynısı sınıf bloklarında geçerli değildir. "
"Unutmayın ki modül seviyesinde, :func:`locals` ve :func:`globals` aynı "
"sözlüklerdir."

#: library/functions.rst:1028
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""
"Bu sözlüğün içeriği modifiye edilmemelidir, değişiklikler yorumlayıcı "
"tarafından kullanılan yerel ve serbest değişkenlerin değerlerini "
"etkilemeyebilir."

#: library/functions.rst:1033
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterables* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"*iterable* 'in her elementini *function* 'a gönderen bir yineleyici döndürür "
"ve sonuçları sunar. Eğer ek *iterables* parametreleri verildiyse, *function* "
"o sayıda parametre almalı ve paralel bir şekilde tüm yinelenebilir "
"nesnelerden tüm elementleri uygulamalıdır. Birden fazla yinelenebilir nesne "
"ile, yineleyici en kısa yinelenebilir nesne tükendiğinde durur. Fonksiyon "
"girdilerinin zaten demetler halinde verildiği durumlar için, :func:"
"`itertools.starmap`\\ 'a bakın."

#: library/functions.rst:1045
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"Bir yineleyicinin veya birden fazla parametrenin en büyük elementini "
"döndürür."

#: library/functions.rst:1048
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"Eğer bir konumsal parametre sağlandıysa, o bir  :term:`iterable` olmalıdır. "
"Yineleyicinin en büyük elementi döndürülür. Eğer iki veya daha fazla "
"pozisyonel parametre sağlandıysa, pozisyonel parametrelerin en büyüğü "
"döndürülür."

#: library/functions.rst:1091
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"İki tane opsiyonel anahtar kelime parametresi vardır. *key* parametresi, :"
"meth:`list.sort` için kullanıldığı gibi bir parametre talep etme "
"fonksiyonunu belirtir. *varsayılan* parametre, sağlanan yineleyici boş ise "
"döndürülecek nesneyi belirtir. Eğer yineleyici boş ve *varsayılan* "
"verilmemiş ise, :exc:`ValueError` hatası ortaya çıkar."

#: library/functions.rst:1059
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"Eğer birden fazla element en büyük ise, fonksiyon ilk rastlananı döndürür. "
"bu ``sorted(iterable, key=keyfunc, reverse=True)[0]`` ve ``heapq.nlargest(1, "
"iterable, key=keyfunc)`` gibi sıralama kararlılığı muhafaza eden araçlar ile "
"uygundur."

#: library/functions.rst:1102
msgid "The *default* keyword-only argument."
msgstr "*varsayılan* yalnızca anahtar kelime parametresi."

#: library/functions.rst:1105
msgid "The *key* can be ``None``."
msgstr "*key* ``None`` olabilir."

#: library/functions.rst:1075
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"Verilen argümandan oluşturulan bir \"memory view\" objesi döndürür. Daha "
"fazla bilgi için :ref:`typememoryview` bkz."

#: library/functions.rst:1083
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"Bir yineleyicideki en küçük elementi veya birden fazla argümandan en "
"küçüğünü döndürür."

#: library/functions.rst:1086
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"Eğer bir argüman sağlandıysa, argüman bir :term:`iterable` olmalıdır. "
"Yineleyicinin en küçük elementi döndürülür. Eğer birden fazla argüman "
"sağlandıysa, argümanların en küçüğü döndürülür."

#: library/functions.rst:1097
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"Eğer birden fazla element minimum ise, ilk karşılaşılan döndürülür. Bu, "
"``sorted(iterable, key=keyfunc)[0]`` ve ``heapq.nsmallest(1, iterable, "
"key=keyfunc)`` gibi diğer sıralama kararlılığını koruma araçlarıyla tutarlı "
"çalışır."

#: library/functions.rst:1112
msgid ""
"Retrieve the next item from the :term:`iterator` by calling its :meth:"
"`~iterator.__next__` method.  If *default* is given, it is returned if the "
"iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
":term:`iterator` 'ın :meth:`~iterator.__next__` metodunu çağırarak sıradaki "
"elementi getirir. Eğer *default* verildiyse ve yineleyici tükenmiş ise "
"*default* döndürülür, aksi takdirde :exc:`StopIteration` hatası ortaya çıkar."

#: library/functions.rst:1119
msgid ""
"Return a new featureless object.  :class:`object` is a base for all classes. "
"It has methods that are common to all instances of Python classes.  This "
"function does not accept any arguments."
msgstr ""
"Yeni bir niteliksiz nesne döndürür. :class:`object` tüm sınıflar için "
"temeldir. Tüm Python sınıflarında bulunan genel metotları içerir. Bu "
"fonksiyon hiçbir argüman kabul etmez."

#: library/functions.rst:1125
msgid ""
":class:`object` does *not* have a :attr:`~object.__dict__`, so you can't "
"assign arbitrary attributes to an instance of the :class:`object` class."
msgstr ""
":class:`object`, :attr:`~object.__dict__` özelliğine sahip *değildir*, yani "
"bir :class:`object` örneğine keyfi özellikler atayamazsınız."

#: library/functions.rst:1131
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. For example:"
msgstr ""
"Bir tamsayıyı \"0o\" ön ekiyle oktal bir dizeye çevirir. Sonuç geçerli bir "
"Python ifadesidir. Eğer *x* bir Python :class:`int` nesnesi değilse, tamsayı "
"döndüren bir :meth:`__index__` metoduna sahip olmalıdır. Örnek olarak:"

#: library/functions.rst:1141
msgid ""
"If you want to convert an integer number to an octal string either with the "
"prefix \"0o\" or not, you can use either of the following ways."
msgstr ""
"Eğer bir tamsayıyı \"0o\" ön ekiyle veya ön eksiz oktal bir dizeye "
"dönüştürmek istiyorsanız, aşağıdaki yolları kullanabilirsiniz."

#: library/functions.rst:1158
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"*file* 'ı açar ve buna karşılık gelen :term:`file object` 'i döndürür. Eğer "
"dosya açılamazsa, :exc:`OSError` hatası ortaya çıkar. Bu fonksiyonun nasıl "
"kullanıldığına dair daha fazla örnek için :ref:`tut-files` bkz."

#: library/functions.rst:1162
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file*, açılan dosyanın açılması veya dosyanın bir tam sayı dosya "
"tanımlayıcısının paketlenmesi için bir yol adını (mutlak veya geçerli "
"çalışma dizinine göre) veren :term:`path-like object` 'dir. (Eğer bir dosya "
"açıklayıcısı veirldiyse, *closefd*, ``False`` 'a ayarlanmadığı sürece I/O "
"nesnesi kapatıldığında kapatılır."

#: library/functions.rst:1168
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation, and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform-dependent: :func:"
"`locale.getencoding()` is called to get the current locale encoding. (For "
"reading and writing raw bytes use binary mode and leave *encoding* "
"unspecified.)  The available modes are:"
msgstr ""
"*mode* dosyanın açılacağı modu belirten opsiyonel bir dizedir. Varsayılan "
"olarak metin modunda okuma anlamına gelen ``'r'`` değerini alır. Diğer "
"sıradan değerler yazmak için (dosya zaten varsa kesilir) ``'w'``, "
"ayrıcalıklı oluşturma için ``'x'`` ve dosyaya ekleme yapmak için (*bazı* "
"Unix sistemlerinde, *hepsi* o anki imleç pozisyonundan bağımsız dosyanın "
"sonuna ekleme anlamına gelir). Metin modunda, *encoding* belirtilmemiş ise "
"kullanılan kodlayıcı platforma bağlıdır: :func:`locale."
"getpreferredencoding(False)` geçerli kodlayıcıyı getirmek için çağırılır. "
"(İşlenmemiş baytlar okumak veya yazmak için ikili modu kullanın ve "
"*encoding* 'i boş bırakın. Geçerli modlar:"

#: library/functions.rst:1185
msgid "Character"
msgstr "Karakter"

#: library/functions.rst:1185
msgid "Meaning"
msgstr "Anlam"

#: library/functions.rst:1187
msgid "``'r'``"
msgstr "``'r'``"

#: library/functions.rst:1187
msgid "open for reading (default)"
msgstr "okumaya açık (varsayılan)"

#: library/functions.rst:1188
msgid "``'w'``"
msgstr "``'w'``"

#: library/functions.rst:1188
msgid "open for writing, truncating the file first"
msgstr "yazmaya açık, önce dosyayı keser"

#: library/functions.rst:1189
msgid "``'x'``"
msgstr "``'x'``"

#: library/functions.rst:1189
msgid "open for exclusive creation, failing if the file already exists"
msgstr "ayrıcalıklı oluşturma için açık, dosya varsa hata verir"

#: library/functions.rst:1190
msgid "``'a'``"
msgstr "``'a'``"

#: library/functions.rst:1190
msgid "open for writing, appending to the end of file if it exists"
msgstr "yazmaya açık, eğer dosya bulunuyorsa dosyaya ekleme yapar"

#: library/functions.rst:1191
msgid "``'b'``"
msgstr "``'b'``"

#: library/functions.rst:1191
msgid "binary mode"
msgstr "ikili mod"

#: library/functions.rst:1192
msgid "``'t'``"
msgstr "``'t'``"

#: library/functions.rst:1192
msgid "text mode (default)"
msgstr "metin modu (varsayılan)"

#: library/functions.rst:1193
msgid "``'+'``"
msgstr "``'+'``"

#: library/functions.rst:1193
msgid "open for updating (reading and writing)"
msgstr "güncellemeye açık (okuma ve yazma)"

#: library/functions.rst:1196
msgid ""
"The default mode is ``'r'`` (open for reading text, a synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"Varsayılan mod ``'r'`` (okumaya açık, ``'rt'`` 'nin eşanlamlısı.) 'dir. "
"``'w+'`` ve ``'w+b'`` modları dosyayı açar ve temizlerler. ``'r+'`` ve "
"``'r+b'`` modları dosyayı temizlemeden açarlar."

#: library/functions.rst:1200
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
":ref:`io-overview` 'de bahsedildiği gibi, Python ikili ve metin I/O arasında "
"ayrım yapar. İkili modda (*mode* parametresinde ``'b'`` 'yi içererek) açılan "
"dosyalar, içerikleri :class:`bytes` nesneleri halinde deşifre etmeden "
"döndürür. Metin modunda (varsayılan, veya *mode* parametresinde ``'t'`` "
"içerildiğinde), dosyanın içeriği :class:`str` olarak döndürülür, baytlar "
"platforma bağlı bir kodlayıcı veya belirtilen *encoding* 'i kullanarak "
"deşifre edilir."

#: library/functions.rst:1210
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"Python, temel alınan işletim sisteminin metin dosyaları kavramına bağlı "
"değildir. Tüm işlemler Python'un kendisi tarafından yapılır ve bu yüzden de "
"platformdan bağımsızdır."

#: library/functions.rst:1214
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable in text mode), and an integer > 1 to indicate the "
"size in bytes of a fixed-size chunk buffer. Note that specifying a buffer "
"size this way applies for binary buffered I/O, but ``TextIOWrapper`` (i.e., "
"files opened with ``mode='r+'``) would have another buffering. To disable "
"buffering in ``TextIOWrapper``, consider using the ``write_through`` flag "
"for :func:`io.TextIOWrapper.reconfigure`. When no *buffering* argument is "
"given, the default buffering policy works as follows:"
msgstr ""
"*buffering*, arabelleğe alma ilkesini ayarlamak için kullanılan isteğe bağlı "
"bir tamsayıdır. Arabelleğe almayı kapatmak için 0 (yalnızca ikili modda izin "
"verilir), satır arabelleğini seçmek için 1 (yalnızca metin modunda "
"kullanılabilir) ve sabit boyutlu yığın arabelleğinin bayt cinsinden boyutunu "
"belirtmek için birden büyük bir tam sayı iletin. Bir arabellek boyutunu bu "
"şekilde belirtmenin ikili arabelleğe alınmış G/Ç için geçerli olduğunu "
"unutmayın, ancak ``TextIOWrapper`` (yani, ``mode='r+'`` ile açılan dosyalar) "
"başka bir arabelleğe alır. ``TextIOWrapper`` arabelleğe almayı devre dışı "
"bırakmak için, :func:`io.TextIOWrapper.reconfigure` için ``write_through`` "
"bayrağını kullanmayı düşünün. *arabelleğe alma* bağımsız değişkeni "
"verilmediğinde, varsayılan arabelleğe alma ilkesi şu şekilde çalışır:"

#: library/functions.rst:1224
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :attr:`io.DEFAULT_BUFFER_SIZE`.  On many systems, "
"the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"İkili dosyalar sabit boyutlu yığınlarda arabelleğe alınır; arabelleğin "
"boyutu temel cihazın \"blok boyutu\"'nu belirlemek için buluşsal bir deney "
"kullanılarak seçilir ve :attr:`io.DEFAULT_BUFFER_SIZE` değerine düşer. Çoğu "
"sistemde, arabellek 4096 veya 8192 bayt uzunluğunda olacaktır."

#: library/functions.rst:1229
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"\"İnteraktif\" metin dosyaları (:meth:`~io.IOBase.isatty` 'nın ``True`` "
"döndürdüğü dosyalar) satır arabelleğe almayı kullanır. Diğer metin dosyaları "
"yukarıda ikili dosyalar için açıklanan poliçeyi kullanırlar."

#: library/functions.rst:1233
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getencoding` returns), but any :term:`text "
"encoding` supported by Python can be used. See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""
"*encoding* dosyayı kodlamak veya deşifre etmek için kullanılan kodlayıcının "
"ismidir. Bu sadece metin modunda kullanılmalıdır. Varsayılan kodlayıcı "
"platforma bağımlıdır (:func:`locale.getpreferredencoding` ne döndürüyorsa), "
"ama Python tarafından desteklenen herhangi bir :term:`text encoding` "
"kullanılabilir. Desteklenen kodlayıcıların listesi için :mod:`codecs` "
"modülüne bkz."

#: library/functions.rst:1239
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* şifreleme ve deşifreleme hatalarının nasıl işleneceğini belirten "
"opsiyonel bir dizedir—bu ikili modda kullanılamaz. Bazı standart hata "
"işleyecileri mevcuttur (:ref:`error-handlers` 'da listelendi), ayrıca :func:"
"`codecs.register_error` ile kaydedilen herhangi bir hata işleyici ismi de "
"geçerlidir. Standart isimler bunları içerir:"

#: library/functions.rst:1247
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'``, bir kodlama hatası varsa bir :exc:`ValueError` istisnasını "
"yükseltmek için kullanılır. Varsayılan değer ``None`` ile aynı etkiyi "
"gösterir."

#: library/functions.rst:1251
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` hataları görmezden gelir. Kodlayıcı hatalarını görmezden "
"gelmenin veri kaybı ile sonuçlanabileceğini unutmayın."

#: library/functions.rst:1254
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'`` hatalı biçimlendirilmiş veri olduğunda  bir yedek işaretleyici "
"(``'?'`` gibi) 'nin hatalı biçimlendirilmiş verinin yerine geçmesine neden "
"olur."

#: library/functions.rst:1257
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as low surrogate "
"code units ranging from U+DC80 to U+DCFF. These surrogate code units will "
"then be turned back into the same bytes when the ``surrogateescape`` error "
"handler is used when writing data.  This is useful for processing files in "
"an unknown encoding."
msgstr ""
"``'surrogateescape'``, hatalı baytları U+DC80'den U+DCFF'ye kadar değişen "
"vekil kod birimleri olarak sunacaktır. Bu vekil kod birimleri sonradan "
"``surrogateescape`` hata işleyicisi veri yazmak için kullanıldığında aynı "
"baytlara geri döndürülecektir. Bu dosyaları bilinmeyen bir kodlayıcıyla "
"işlerken kullanışlıdır."

#: library/functions.rst:1264
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference ``&#nnn;``."
msgstr ""
"``'xmlcharrefreplace'`` sadece bir dosyaya veri yazarken desteklenir. "
"Kodlayıcı tarafından desteklenmeyen karakterler uygun XML karakter örneği "
"ile değiştirilir."

#: library/functions.rst:1268
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` Python'un ters slash kaçış karakterleri yüzünden "
"oluşan hatalı veriyi değiştirir."

#: library/functions.rst:1271
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` (sadece yazarken desteklenir) desteklenmeyen karakterleri "
"``\\N{...}`` kaçış karakterleriyle değiştirir."

#: library/functions.rst:1279
msgid ""
"*newline* determines how to parse newline characters from the stream. It can "
"be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as "
"follows:"
msgstr ""
"*newline* akıştan yeni satır karakterlerinin nasıl ayrıştırılacağını "
"belirler. ``None``, ``''``, ``'\\n'``, ``'\\r'`` ve ``'\\r\\n'`` olabilir. "
"Aşağıdaki gibi çalışır:"

#: library/functions.rst:1283
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"Akıştan veri okurken eğer *newline* ``None`` ise, evrensel *newlines* aktif "
"hale getirilir. Girdideki satırlar ``'\\n'``, ``'\\r'``, veya ``'\\r\\n'`` "
"ile bitebilirler ve bunlar çağrıcıya döndürülmeden önce ``'\\n'`` 'e "
"çevrilirler. Eğer ``''`` ise, evrensel *newlines* aktif hale getirilir ama "
"satır sonları çağrıcıya çevrilmeden döndürülürler. Eğer başka bir geçerli "
"değer verildiyse, girdi satırları sadece verilen dize ile sonlanır ve satır "
"sonu çağrıcıya çevrilmeden döndürülür."

#: library/functions.rst:1291
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Çıktıyı akışa yazarkeni eğer *newline* ``None`` ise, tüm ``'\\n'`` "
"karakterleri sistemin varsayılan satır ayırıcısına, :data:`os.linesep` 'e "
"dönüştürülür. Eğer *newline* ``''`` veya ``'\\n'`` ise, bir dönüştürme "
"yapılmaz. Eğer *newline* diğer uygun değerlerden biri ise, tüm ``'\\n'`` "
"karakterleri verilen dizeye dönüştürülür."

#: library/functions.rst:1297
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default); "
"otherwise, an error will be raised."
msgstr ""
"Eğer *closefd*, ``False`` ise ve dosya adı yerine bir dosya tanımlayıcısı "
"verildiyse, dosya kapatıldığında temel dosya tanımlayıcısı açık kalacaktır. "
"Eğer bir dosya adı verildiyse, *closefd* ``True`` olmalıdır (varsayılan); "
"aksi takdirde, bir hata ortaya çıkar."

#: library/functions.rst:1302
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"*opener* yerine bir çağrılabilir nesne verilerek özel bir açıcı "
"kullanabilirsiniz. Dosya nesnesi için temel dosya tanımlayıcısı sonradan "
"*opener* 'ı (*file*, *flags*) ile çağırarak elde edilir. *opener* bir açık "
"dosya tanımlayıcısı döndürmelidir (*opener* yerine :mod:`os.open` göndermek "
"fonksiyonel olarak ``None`` göndermek ile benzer sonuçlanır)."

#: library/functions.rst:1308
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "Yeni oluşturulan dosya :ref:`non-inheritable <fd_inheritance>` 'dir."

#: library/functions.rst:1310
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"Aşağıdaki örnek verilen bir dizine ait bir dosyayı açmak için :func:`os."
"open` fonksiyonunun :ref:`dir_fd <dir_fd>` parametresini kullanır:"

#: library/functions.rst:1323
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
":func:`open` metodu tarafından döndürülen :term:`file object` 'in tipi moda "
"bağlıdır. :func:`open` bir dosyayı metin modunda (``'w'``, ``'r'``, "
"``'wt'``, ``'rt'`` vb.) açmak için kullanıldığında, :class:`io.TextIOBase` "
"'in bir alt sınıfını döndürür (özellikle :class:`io.TextIOWrapper`). Bir "
"dosyayı ikili modda arabellek ile açmak için kullanıldığında, döndürülen "
"sınıf :class:`io.BufferedIOBase` 'ın alt sınıfıdır. Kesin sınıf değişkendir: "
"ikili okuma modunda, bir :class:`io.BufferedReader` döndürür; ikili yazma ve "
"ikili ekleme modunda, :class:`io.BufferedWriter` döndürür, ve okuma/yazma "
"modunda :class:`io.BufferedRandom` döndürür. Arabelleğe alma devre dışı "
"olduğunda, ham akış, :class:`io.RawIOBase` 'in alt sınıfı, :class:`io."
"FileIO` döndürülür."

#: library/functions.rst:1344
msgid ""
"See also the file handling modules, such as :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"Ayrıca :mod:`fileinput`, :mod:`io` (:func:`open` 'ın tanımlandığı yer), :mod:"
"`os`, :mod:`os.path`, :mod:`tempfile`, ve :mod:`shutil` gibi dosya işleme "
"modüllerine de bkz."

#: library/functions.rst:191
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``file``, "
"``mode``, ``flags``."
msgstr ""
"``file``, ``mode``, ``flags`` parametreleriyle bir :ref:`audition event "
"<auditing>` ``open`` ortaya çıkartır."

#: library/functions.rst:1350
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"``mode`` ve ``flags`` parametreleri orijinal çağrı tarafından modifiye "
"edilmiş veya çıkartılmış olabilir."

#: library/functions.rst:1355
msgid "The *opener* parameter was added."
msgstr "*opener* parametresi eklendi."

#: library/functions.rst:1356
msgid "The ``'x'`` mode was added."
msgstr "``'x'`` modu eklendi."

#: library/functions.rst:1357
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
"Eskiden :exc:`IOError` hatası ortaya çıkardı, şimdi :exc:`OSError` 'un takma "
"adıdır."

#: library/functions.rst:1358
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
"Artık eğer özel oluşturma modunda (``'x'``) açılmış dosyalar zaten "
"bulunuyorsa :exc:`FileExistsError` hatası ortaya çıkar."

#: library/functions.rst:1363
msgid "The file is now non-inheritable."
msgstr "Dosya artık miras alınamaz."

#: library/functions.rst:1367
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"Eğer sistem çağrısı bölündüyse ve sinyal işleyicisi bir hata ortaya "
"çıkartmazsa, artık fonksiyon :exc:`InterruptedError` hatası ortaya çıkartmak "
"yerine sistem çağrısını yeniden dener (açıklama için :pep:`475` bkz)."

#: library/functions.rst:1370
msgid "The ``'namereplace'`` error handler was added."
msgstr "``'namereplace'`` hata işleyicisi eklendi."

#: library/functions.rst:1374
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ":class:`os.PathLike` uygulayan nesneleri kabul etme desteği eklendi."

#: library/functions.rst:1375
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"Windows'da, bir konsol arabelleğinin açılması :class:`io.FileIO` dışında "
"bir :class:`io.RawIOBase` alt sınıfını döndürebilir."

#: library/functions.rst:1378
msgid "The ``'U'`` mode has been removed."
msgstr "``'U'`` modu kaldırıldı."

#: library/functions.rst:1383
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"Bir Unicode karakterini temsil eden dize verilir ve o karakterin Unicode kod "
"noktasını temsil eden bir tamsayı döndürür. Örneğin, ``ord('a')`` ``97`` "
"tamsayısını döndürür ve ``ord('€')`` (Euro simgesi) ``8364`` tamsayısını "
"döndürür. Bu :func:`chr` 'nin tersidir."

#: library/functions.rst:1391
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"*base* 'in *exp* kuvvetini döndürür; *mod* verildiyse, aynı sayı % *mod* "
"sonucunu döndürür (``pow(base,exp) % mod`` 'dan daha verimli işlenir). İki "
"parametreli formu ``pow(base, exp)``, üs operatörü ``base**exp`` kullanmaya "
"eş değerdir."

#: library/functions.rst:1396
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``pow(10, "
"2)`` returns ``100``, but ``pow(10, -2)`` returns ``0.01``.  For a negative "
"base of type :class:`int` or :class:`float` and a non-integral exponent, a "
"complex result is delivered.  For example, ``pow(-9, 0.5)`` returns a value "
"close to ``3j``."
msgstr ""
"Parametreler nümerik olmak zorundadır. Karışık işlenen türleriyle, ikili "
"aritmetik operatörler için baskı kuralları geçerlidir. :class:`int` "
"işlemleri için, ikinci parametre negatif olmadığı sürece sonuç işlenen ile "
"aynı türe sahip olmalıdır (baskıdan sonra); bu durumda, tüm parametreler "
"gerçel sayıya çevrilir ve bir gerçel sayı sonucu teslim edilir. Örneğin "
"``pow(10, 2)``, ``100`` değerini döndürür, ama ``pow(10, -2)``, ``0.01`` "
"değerini döndürür. integral olmayan bir üs ile :class:`int` veya :class:"
"`float` tipinin negatif tabanı için, karmaşık bir sayı çıktı verilir. "
"Örneğin, ``pow(-9, 0.5)``, ``3j`` 'ye yakın bir değer döndürür."

#: library/functions.rst:1406
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
":class:`int` işlemleri için *mod* verilmişse, *base* ve *exp* bir tam sayı "
"olmalıdır, aynı zamanda *mod* sıfır olamaz. Eğer *mod* verilmişse ve *exp* "
"negatifse, *base*, *mod* için görece asal olmalıdır. Bu durumda, "
"``pow(inv_base,-exp,mod)`` döndürülüri *inv_base, *base* mod *mod* 'un "
"tersidir."

#: library/functions.rst:1412
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr "Burada ``38`` mod ``97`` 'nin tersini işlemek için bir örnek var::"

#: library/functions.rst:1419
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
":class:`int` işlenenleri için, ``pow`` 'un üç parametreli formu artık ikinci "
"parametrenin negatif olmasına, modüler terslerin hesaplanmasına izin verir."

#: library/functions.rst:1424
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"Anahtar kelime parametrelerine izin ver, önceden sadece pozisyonel "
"parametreler desteklenirdi."

#: library/functions.rst:1431
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file*, and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"Metin akış *file* 'ına *sep* tarafından ayırılacak ve *end* ile bitirilecek "
"şekilde  *objects* 'i yazdırır. *sep*, *end, *file*, ve *flush* sunulursa "
"anahtar kelime parametreleri olarak verilmelidir."

#: library/functions.rst:1435
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"Tüm anahtar kelime olmayan parametler :func:`str` 'in yaptığı gibi dizeye "
"çevirilir ve *sep* tarafından ayırılıp *end* ile bitecek şekilde akışa "
"yazdırılır. *sep* ve *end* dize veya ``None`` olmalıdır. ``None`` olduğunda "
"varsayılan değerler kullanılır. Eğer *objects* verilmediyse, :func:`print` "
"sadece *end* 'i yazdırır."

#: library/functions.rst:1441
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"*file* parametresi ``write(string)`` metodu içeren bir obje olmalıdır; eğer "
"sunulmamış veya ``None`` ise, :data:`sys.stdout` kullanılacaktır. Yazdırılan "
"argümanlar metin dizelerine çevrildiğinden, :func:`print` ikili dosya "
"nesneleri ile kullanılamaz. Bunlar için, ``file.write(...)`` 'ı kullanın."

#: library/functions.rst:1446
msgid ""
"Whether the output is buffered is usually determined by *file*, but if the "
"*flush* keyword argument is true, the stream is forcibly flushed."
msgstr ""
"Çıktının arabelleğe alınıp alınmadığı genellikle *file* tarafından "
"belirlenir, ama *flush* argümanı doğru ise, akış zorla boşaltılır."

#: library/functions.rst:1449
msgid "Added the *flush* keyword argument."
msgstr "*flush* anahtar kelimesi argümanı eklendi."

#: library/functions.rst:1455
msgid "Return a property attribute."
msgstr "Bir özellik özelliği döndürür."

#: library/functions.rst:1457
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* bir özelliğin değerini almak için kullanılan bir fonksiyondur. *fset* "
"bir özelliğin değerini ayarlamak için kullanılan bir fonksiyondur. *fdel* "
"bir özelliğin değerini silmek için kullanılan bir fonksiyondur, ve *doc* "
"özellik için bir belge dizisi oluşturur."

#: library/functions.rst:1461
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "Yönetilen bir ``x`` özelliği tanımlamak için tipik bir yöntem::"

#: library/functions.rst:1478
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter, and ``del c.x`` the deleter."
msgstr ""
"Eğer *c*, *C* 'nin bir örneğiyse, ``c.x``, alıcı fonksiyonu çağıracaktır. "
"``c.x = value`` ayarlayıcı fonksiyonu, ``del c.x`` ise siliciyi çağıracaktır."

#: library/functions.rst:1481
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"Eğer verildiyse, *doc* property özelliğinin doküman dizisi olacaktır. Aksi "
"takdirde, property *fget* 'in (bulunuyorsa) doküman dizisini "
"kopyalayacaktır. Bu :func:`property` 'i :term:`decorator` olarak kullanarak "
"kolayca salt-okunur özellikler oluşturmayı mümkün kılar::"

#: library/functions.rst:1494
msgid ""
"The ``@property`` decorator turns the :meth:`voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"``@property`` dekoratörü :meth:`voltage` metodunu aynı isimli salt-okunur "
"bir özellik için \"getter\" metoduna dönüştürür ve *voltage* için doküman "
"dizisini \"Get the current voltage.\" olarak ayarlar."

#: library/functions.rst:1498
msgid ""
"A property object has :attr:`~property.getter`, :attr:`~property.setter`, "
"and :attr:`~property.deleter` methods usable as decorators that create a "
"copy of the property with the corresponding accessor function set to the "
"decorated function.  This is best explained with an example::"
msgstr ""
"Bir property nesnesi, dekore edilmiş metoda ayarlanan ilgili erişimci "
"metoduyla özelliğin bir kopyasını oluşturmak için dekoratör olarak "
"kullanılabilen :attr:`~property.getter`, :attr:`~property.setter`, ve :attr:"
"`~property.deleter` metotlarını içerir. Bu en iyi şekilde bir örnekle "
"açıklanabilir::"

#: library/functions.rst:1520
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"Bu kod birinci örneğin tamamen eş değeridir. Orijinal özellikte olduğu gibi "
"ekstra fonksiyonlara aynı ismi verdiğinizden emin olun (bu durumda ``x``)."

#: library/functions.rst:1524
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"Döndürülen property nesnesi yapıcı metotta verilen ``fget``, ``fset``, ve "
"``fdel`` özelliklerine sahiptir."

#: library/functions.rst:1527
msgid "The docstrings of property objects are now writeable."
msgstr "Property nesnelerinin doküman dizeleri artık yazılabilir."

#: library/functions.rst:1536
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
"Bir metot olmaktansa, :class:`range` aslında bir değiştirilemez dizi "
"tipidir. Daha fazla bilgi için :ref:`typesseq-range` ve :ref:`typesseq` 'e "
"bakınız."

#: library/functions.rst:1542
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`; otherwise, "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`__repr__` method. "
"If :func:`sys.displayhook` is not accessible, this function will raise :exc:"
"`RuntimeError`."
msgstr ""
"Bir nesnenin yazdırılabilir temsilini içeren bir dize döndürür. Birçok tür "
"için bu fonksiyon, :func:`eval`; fonksiyonuna iletildiğinde aynı değere "
"sahip bir nesne verecek bir dize döndürme girişiminde bulunur. Aksi halde "
"gösterim, genellikle nesnenin adı ve adresini içeren ek bilgilerle birlikte "
"nesnenin türünün adını içeren açılı ayraçlar içine alınmış bir dizedir. Bir "
"sınıf, bir :meth:`__repr__` yöntemi tanımlayarak bu işlevin örnekleri için "
"ne döndürdüğünü kontrol edebilir. :func:`sys.displayhook` erişilebilir "
"değilse, bu fonksiyon :exc:`RuntimeError` değerini yükseltir."

#: library/functions.rst:1555
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`__reversed__` method or supports the sequence protocol (the :meth:"
"`__len__` method and the :meth:`__getitem__` method with integer arguments "
"starting at ``0``)."
msgstr ""
"Ters bir :term:`iterator` döndürür. *seq* :meth:`__reversed__` metodunu "
"içeren veya dizi protokolünü (:meth:`__len__` metodu ve ``0`` ile başlayıp "
"tam sayı argümanları alan bir :meth:`__getitem__` metodu) destekleyen bir "
"nesne olmalıdır."

#: library/functions.rst:1563
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"Noktadan sonra *ndigits* basamak hassasiyetiyle *number* 'ı yuvarlar. Eğer "
"*ndigits* verilmediyse veya ``None`` ise, *number* 'a en yakın tam sayı "
"döndürülür."

#: library/functions.rst:1567
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise, the return value has the same type as *number*."
msgstr ""
":func:`round` 'u destekleyen yerleşik yapılar için, değerler 10 üssü "
"*ndigits* 'in en yakın katına yuvarlanır; eğer iki kat da eşitse, yuvarlama "
"işlemi çift sayıya doğru yapılır (örneğin, ``round(0.5)`` ve ``round(-0.5)`` "
"'in değerleri ``0`` 'dır. ve ``round(1.5)``, ``2`` 'dir). *ndigits* için "
"herhangi bir tamsayı değeri (pozitif, sıfır veya negatif) uygundur. "
"*ndigits* verilmediyse veya ``None`` ise döndürülen değer bir tam sayıdır. "
"Aksi takdirde, döndürülen değerin tipi *number* 'ınkiyle aynıdır."

#: library/functions.rst:1576
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"Genel bir Python nesnesi için ``number``, ``round`` ``number.__round__`` 'u "
"temsil eder."

#: library/functions.rst:1581
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"Gerçel sayılar için :func:`round` 'un davranışı şaşırtıcı olabilir: örneğin "
"``round(2.675, 2)`` beklenen gibi ``2.68`` yerine ``2.67`` sonucunu verir. "
"Bu bir hata değil; çoğu ondalıklı kesir tamı tamına bir gerçel sayı olarak "
"gösterilemeyeceğinden bu sonucu alıyoruz. Daha fazla bilgi için :ref:`tut-fp-"
"issues` 'e bkz."

#: library/functions.rst:1593
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"Opsiyonel olarak *iterable* 'dan alınan elementlerle yeni bir :class:`set` "
"nesnesi döndürür. ``set`` yerleşik bir sınıftır. Bu sınıf hakkında "
"dokümantasyon için :class:`set` ve :ref:`types-set` 'e bakınız."

#: library/functions.rst:1597
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"Diğer konteynerler için, yerleşik :class:`frozenset`, :class:`list`, :class:"
"`tuple` ve :class:`dict` sınıflarını; aynı zamanda :mod:`collections`  "
"modülüne bakınız."

#: library/functions.rst:1604
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string, and an arbitrary value.  The string may name an existing attribute "
"or a new attribute.  The function assigns the value to the attribute, "
"provided the object allows it.  For example, ``setattr(x, 'foobar', 123)`` "
"is equivalent to ``x.foobar = 123``."
msgstr ""
"Bu :func:`getattr` 'un karşılığıdır. Argümanlar bir nesne, dize ve opsiyonel "
"değerdir. Dize halihazırda var olan veya yeni bir özelliğe isim verebilir. "
"Fonksiyon, nesnenin izin vermesi koşuluyla, değeri özelliğe atar. Örneğin "
"``setattr(x, 'foobar', 123)`` ve ``x.foobar = 123`` eş değerdir."

#: library/functions.rst:1610
msgid ""
"*name* need not be a Python identifier as defined in :ref:`identifiers` "
"unless the object chooses to enforce that, for example in a custom :meth:"
"`~object.__getattribute__` or via :attr:`~object.__slots__`. An attribute "
"whose name is not an identifier will not be accessible using the dot "
"notation, but is accessible through :func:`getattr` etc.."
msgstr ""
"*name*, nesne bunu zorunlu kılmayı seçmedikçe, örneğin özel bir :meth:"
"`~object.__getattribute__` veya :attr:`~object.__slots__` aracılığıyla, :ref:"
"`identifiers` içinde tanımlandığı gibi bir Python tanımlayıcısı olmak "
"zorunda değildir. Adı tanımlayıcı olmayan bir özelliğe nokta kullanılarak "
"erişilemez, ancak :func:`getattr` vb. aracılığıyla erişilebilir."

#: library/functions.rst:1618
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to set it with :func:`setattr`."
msgstr ""
":ref:`Özel isim karıştırma <private-name-mangling>`, derleme sürecinde "
"olacağından, :func:`setattr` ile ayarlamak için özel bir niteliğin (iki alt "
"çizgi ile başlayan nitelikler) adını manuel olarak değiştirmek gerekir."

#: library/functions.rst:1627
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``.  Slice objects have read-only data attributes :attr:`~slice."
"start`, :attr:`~slice.stop`, and :attr:`~slice.step` which merely return the "
"argument values (or their default).  They have no other explicit "
"functionality; however, they are used by NumPy and other third-party "
"packages. Slice objects are also generated when extended indexing syntax is "
"used.  For example: ``a[start:stop:step]`` or ``a[start:stop, i]``.  See :"
"func:`itertools.islice` for an alternate version that returns an iterator."
msgstr ""
"``range(start, stop, step)`` tarafından belirtilen indekslerden oluşan "
"kümeyi temsil eden bir :term:`slice` nesnesi döndürür. *start* ve *step* "
"parametreleri varsayılan olarak ``None`` 'dır. Dilim nesneleri sadece "
"parametre değerlerini (veya varsayılan değerleri) döndüren salt-okunur :attr:"
"`~slice.start`, :attr:`~slice.stop`, ve :attr:`~slice.step` özelliklerine "
"sahiptir. Başka belirgin işlevselliği olmasa da; NumPy ve diğer üçüncü parti "
"paketler tarafından kullanılırlar. Dilim nesneleri, genişletilmiş indeksleme "
"sözdizimi kullanıldığında da üretilirler. Örneğin: ``a[start:stop:step]`` "
"veya ``a[start:stop, i]``. Yineleyici döndüren alternatif bir versiyon için :"
"func:`itertools.islice` 'e bakınız."

#: library/functions.rst:1640
msgid "Return a new sorted list from the items in *iterable*."
msgstr ""
"*iterable* 'ın içindeki elementlerden oluşan sıralı bir liste döndürür."

#: library/functions.rst:1642
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr "İsimle belirtilmesi gereken 2 opsiyonel parametresi vardır."

#: library/functions.rst:1644
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key*, *iterable* 'ın her elementinden bir karşılaştırma anahtarı ayıklamak "
"için kullanılan bir argümanın fonksiyonunu belirtir (örneğin, ``key=str."
"lower``). Varsayılan değer ``None`` 'dır (elementleri direkt karşılaştırır)."

#: library/functions.rst:1648
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* bir boolean değerdir. Eğer ``True`` ise, liste elementleri tüm "
"karşılaştırmalar tersine çevrilmiş şekilde sıralanır."

#: library/functions.rst:1651
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"Eski stil *cmp* fonksiyonunu bir *key* fonksiyonuna dönüştürmek için :func:"
"`functools.cmp_to_key` 'yi kullanın."

#: library/functions.rst:1654
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"Yerleşik :func:`sorted` fonksiyonunun stabil çalışması garantilenmiştir. Bir "
"sıralama eşit olan elementlerin ilgili sırasını değiştirmemeyi "
"garantiliyorsa stabildir --- bu çoklu geçişlerle sıralama (örneğin önce "
"departman, ardından maaş sıralama) için yardımcıdır."

#: library/functions.rst:1659
msgid ""
"The sort algorithm uses only ``<`` comparisons between items.  While "
"defining an :meth:`~object.__lt__` method will suffice for sorting, :PEP:`8` "
"recommends that all six :ref:`rich comparisons <comparisons>` be "
"implemented.  This will help avoid bugs when using the same data with other "
"ordering tools such as :func:`max` that rely on a different underlying "
"method.  Implementing all six comparisons also helps avoid confusion for "
"mixed type comparisons which can call reflected the :meth:`~object.__gt__` "
"method."
msgstr ""
"Sıralama algoritması elementler arasında sadece ``<`` karşılaştırmalarını "
"kullanır. Bir :meth:`~object.__lt__` metodu tanımlamak sıralamak için "
"yeterli olmasına rağmen, :PEP:`8` tüm altı :ref:`rich comparisons "
"<comparisons>` 'ların uygulanmasını öneriyor. Bu aynı veri ile :func:`max` "
"gibi farklı bir temel metot ile çalışan farklı sıralama araçlarını "
"kullanırken hataları önlemeyi kolaylaştıracaktır. Tüm karşılaştırmaları "
"uygulamak ayrıca yansıtılan :meth:`~object.__gt__` metodunu çağırabilen "
"karmaşık tür karşılaştırmaları için karışıklığı da önler."

#: library/functions.rst:1668
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Sıralama örnekleri ve kısa sıralama öğreticisi için :ref:`sortinghowto` 'ya "
"bakınız."

#: library/functions.rst:1672
msgid "Transform a method into a static method."
msgstr "Bir metodu statik metoda dönüştürür."

#: library/functions.rst:1674
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"Statik bir metot üstü kapalı şekilde bir ilk argüman almaz. Statik metot "
"tanımlamak için bu ifadeyi kullanabilirsiniz::"

#: library/functions.rst:1681
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"``@staticmethod`` ifadesi bir :term:`decorator` fonksiyonudur. -- detaylar "
"için :ref:`function` bkz."

#: library/functions.rst:1684
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``). Moreover, they can be called as regular "
"functions (such as ``f()``)."
msgstr ""
"Bir statik metot sınıf üzerinden (``C.f()`` gibi) veya bir örnek üzerinden "
"(``C().f()`` gibi) çağırılabilir. Hatta normal fonksiyonlar gibi (``f()``) "
"de çağırılabilirler."

#: library/functions.rst:1688
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also, "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"Python'daki statik metotlar Java ve C++'takilerle benzerdir. Ayrıca, sınıf "
"için alternatif bir yapıcı metot oluşturmak isterseniz :func:`classmethod` "
"bkz."

#: library/functions.rst:1692
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"Tüm dekoratörler gibi, ``staticmethod`` 'u normal bir fonksiyon gibi "
"çağırmak ve sonucu ile bir şeyler yapmak mümkündür. Bu, bir sınıfın "
"fonksiyonuna referans vermeniz gerektiğinde ve örnek metoda otomatik "
"dönüşümü engellemek istediğinizde işinize yarayabilir. Böyle durumlar için, "
"bu ifadeyi kullanabilirsiniz::"

#: library/functions.rst:1704
msgid "For more information on static methods, see :ref:`types`."
msgstr "Statik metotlar hakkında daha fazla bilgi için, :ref:`types` bkz."

#: library/functions.rst:1706
msgid ""
"Static methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``), have a "
"new ``__wrapped__`` attribute, and are now callable as regular functions."
msgstr ""
"Statik metotlar artık metot özelliklerini (``__module__``, ``__name__``, "
"``__qualname__``, ``__doc__`` and ``__annotations__``) miras alır, yeni bir "
"``__wrapped__`` özellikleri var ve artık normal fonksiyonlar gibi "
"çağırılabilirler."

#: library/functions.rst:1721
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"*object* 'in :class:`str` versiyonunu döndürür. Detaylar için :func:`str` "
"bkz."

#: library/functions.rst:1723
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` yerleşik dize :term:`class` 'ıdır. Dizeler hakkında genel bilgi "
"için, :ref:`textseq` bkz."

#: library/functions.rst:1729
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"*start* ve *iterable* 'ın elemanlarını soldan sağa toplar ve toplamı "
"döndürür. *iterable* 'ın elemanları normal olarak numaralardır ve başlangıç "
"değeri bir dize olamaz."

#: library/functions.rst:1733
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"Bazı kullanım durumları için, :func:`sum` fonksiyonuna iyi alternatifler "
"var. Dizelerden oluşan bir diziyi birleştirmek için tercih edilen hızlı "
"yöntem ``''.join(sequence)`` fonksiyonudur. Gerçel değerleri hassas bir "
"şekilde eklemek istiyorsanız, :func:`math.fsum`\\ bkz. Yinelenebilir "
"nesnelerden oluşan bir diziyi birleştirmek istiyorsanız, :func:`itertools."
"chain` fonksiyonunu kullanmayı göz önünde bulundurun."

#: library/functions.rst:1739
msgid "The *start* parameter can be specified as a keyword argument."
msgstr "*start* parametresi bir anahtar kelime argümanı olarak belirtilebilir."

#: library/functions.rst:1745
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"*type* 'ın ebeveyn veya kardeş sınıfına yapılan metot çağrılarını temsil "
"eden bir proxy objesi döndürür. Bu bir sınıfta üzerine yazılmış kalıtılan "
"metotlara erişmek için kullanışlıdır."

#: library/functions.rst:1749
msgid ""
"The *object_or_type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"*object_or_type* aranacak :term:`method resolution order` 'nı belirler. "
"Arama *type* 'dan sonraki ilk sınıftan başlar."

#: library/functions.rst:1753
msgid ""
"For example, if :attr:`~class.__mro__` of *object_or_type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"Örnek olarak, eğer *object_or_type* 'ın :attr:`~class.__mro__` özelliği ``D -"
"> B -> C -> A -> object`` ise ve *type* değeri ``B`` ise, :func:`super` ``C -"
"> A -> object`` 'i arar."

#: library/functions.rst:1757
msgid ""
"The :attr:`~class.__mro__` attribute of the *object_or_type* lists the "
"method resolution search order used by both :func:`getattr` and :func:"
"`super`.  The attribute is dynamic and can change whenever the inheritance "
"hierarchy is updated."
msgstr ""
"*object_or_type* 'ın :attr:`~class.__mro__` özelliği, hem :func:`getattr` "
"hem de :func:`super` tarafından kullanılan yöntem çözümleme arama sırasını "
"listeler. Özellik dinamiktir ve kalıtım hiyerarşisi her güncellendiğinde "
"değişebilir."

#: library/functions.rst:1762
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"Eğer ikinci parametre atlanırsa, döndürülen süper objesi serbesttir. Eğer "
"ikinci parametre bir objeyse, ``isinstance(obj, type)`` doğru olmak "
"zorundadır. Eğer ikinci parametre bir tür ise, ``issubclass(type2, type)`` "
"doğru olmak zorundadır (bu sınıf metotları için kullanışlıdır)."

#: library/functions.rst:1767
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"*super* için tipik iki kullanım şekli vardır. Tek kalıtımlı bir sınıf "
"hiyerarşisinde *super* üst sınıfları açıkça adlandırmadan onlara başvurmak "
"için kullanılabilir. böylece kodu daha sürdürülebilir hale getirir."

#: library/functions.rst:1772
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"İkinci kullanım şekli dinamik yürütme ortamında işbirlikli çoklu kalıtımı "
"desteklemektir. Bu durum Python'a özgüdür ve statik derlenen diller veya "
"tekli kalıtımı destekleyen dillerde bulunmaz. Bu çoklu temel sınıfların aynı "
"metodu uyguladığı \"diamond diagrams\" sistemini uygulamayı mümkün kılar. "
"İyi tasarım bu tür uygulamaların her durumda aynı çağrı imzasına sahip "
"olduğunu (çünkü çağrıların sırası yürütme zamanında belirlenir, çünkü bu "
"sıra sınıf hiyerarşisindeki değişikliklere uyarlanır ve çalışma zamanından "
"önce bilinmeyen kardeş sınıfları içerebilir) dikte eder."

#: library/functions.rst:1782
msgid "For both use cases, a typical superclass call looks like this::"
msgstr ""
"İki kullanım durumu için de, tipik bir üst sınıf çağrısı bu şekildedir::"

#: library/functions.rst:1789
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"Metot aramalarına ek olarak, :func:`super` özellik aramaları için de "
"çalışır. Bunun kullanım şekli ebeveyn veya kardeş bir sınıfta :term:"
"`tanımlayıcılar <descriptor>` 'i çağırmaktır."

#: library/functions.rst:1793
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
":func:`super` 'ın, ``super().__getitem__(name)`` gibi açık noktalı öznitelik "
"aramaları için bağlayan işlemin bir parçası olarak uygulanır. Sınıfları "
"işbirlikli çoklu kalıtımı destekleyen tahmin edilebilir bir sırada aramak "
"için kendi :meth:`__getattribute__` metodunu sağlar. Bu nedenle :func:"
"`super`, ifadeler veya ``super()[name]`` gibi operatörler kullanarak kesin "
"aramalar için tanımsızdır."

#: library/functions.rst:1800
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"Ayrıca, argümansız formunun yanı sıra, :func:`süper` iç metotları "
"kullanmakla sınırlı değildir. İki parametreli form parametlerini tamı tamına "
"belirler ve uygun karşılaştırmaları yapar. Argümansız form sadece bir sınıf "
"tanımının içinde çalışır, derleyici tanımlanan sınıfı doğru şekilde almak ve "
"sıradan yöntemlere geçerli örnekten erişmek için gerekli detayları doldurur."

#: library/functions.rst:1807
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
":func:`super` 'ı kullanarak kooperatif sınıflar tasarlamaya yönelik pratik "
"öneriler için, `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_ bkz."

#: library/functions.rst:1817
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"Bir fonksiyon olmaktansa, :class:`tuple` :ref:`typesseq-tuple` ve :ref:"
"`typesseq` 'de gösterildiği gibi düzenlenemez bir dizi türüdür."

#: library/functions.rst:1826
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__ <instance.__class__>`."
msgstr ""
"Bir parametre ile, *object* 'in türünü döndürür. Döndürülen değer bir obje "
"türüdür ve genellikle :attr:`object.__class__ <instance.__class__>` "
"tarafından döndürülen obje ile aynıdır."

#: library/functions.rst:1830
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
":func:`isinstance` yerleşik fonksiyonu bir objenin türünü test etmek için "
"önerilir. Çünkü altsınıfları hesaba katar."

#: library/functions.rst:1834
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~definition.__name__` attribute. The "
"*bases* tuple contains the base classes and becomes the :attr:`~class."
"__bases__` attribute; if empty, :class:`object`, the ultimate base of all "
"classes, is added.  The *dict* dictionary contains attribute and method "
"definitions for the class body; it may be copied or wrapped before becoming "
"the :attr:`~object.__dict__` attribute. The following two statements create "
"identical :class:`type` objects:"
msgstr ""
"Üç parametre ile, yeni nesne türü döndürür. Bu esasen :keyword:`class` "
"ifadesinin dinamik biçimidir. *name* dizesi sınıfın ismidir ve :attr:"
"`~definition.__name__` özelliği yerine gelir. *bases* demeti temel sınıfları "
"içerir ve :attr:`~class.__bases__` özelliği yerine gelir; eğer boş ise, :"
"class:`object`, tüm sınıfların nihai temeli eklenir. *dict* sözlüğü sınıf "
"gövdesi için özellik ve metot tanımlamaları içerir; :attr:`~object.__dict__` "
"özelliği yerine geçmeden önce kopyalanabilir veya sarılabilir. Aşağıdaki iki "
"ifade birebir aynı :class:`type` nesneleri oluşturur:"

#: library/functions.rst:1849
msgid "See also :ref:`bltin-type-objects`."
msgstr ":ref:`bltin-type-objects` 'e de bkz."

#: library/functions.rst:1851
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"Üç değişkene sağlanan anahtar kelime argümanları, uygun metasınıf "
"makinelerine (genellikle :meth:`~object.__init_subclass__`) bir sınıf "
"tanımındaki anahtar sözcüklerin (*metaclass* dışında) yapacağı şekilde "
"iletilir."

#: library/functions.rst:1856
msgid "See also :ref:`class-customization`."
msgstr ":ref:`class-customization` 'a da bkz."

#: library/functions.rst:1858
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"``type.__new__`` 'in üzerine yazmayan :class:`type` altsınıfları artık bir "
"objenin türünü almak için tek argümanlı formu kullanamaz."

#: library/functions.rst:1865
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`~object.__dict__` attribute."
msgstr ""
"Bir modül, sınıf, örnek veya :attr:`~object.__dict__` özelliği bulunan "
"herhangi bir obje için, :attr:`~object.__dict__` özelliğini döndürür."

#: library/functions.rst:1868
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`~object.__dict__` attributes (for example, classes use a :class:"
"`types.MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"Modüller ve örnekler gibi nesneler güncellenebilir bir :attr:`~object."
"__dict__` özelliğine sahiptir; ama diğer nesnelerin kendilerinin :attr:"
"`~object.__dict__` özelliklerine yazma kısıtlaması olabilir (örnek olarak, "
"sınıflar doğrudan sözlük güncellemelerini önlemek için :class:`types."
"MappingProxyType` sınıfını kullanırlar)."

#: library/functions.rst:1873
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""
"Parametre olmadan, :func:`vars` :func:`locals` gibi davranır. Yerel sözlük, "
"ona yapılan güncellemeler görmezden gelindiğinden ötürü, sadece okuma işlemi "
"için kullanışlıdır."

#: library/functions.rst:1877
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"Eğer bir obje belirtildiyse ama :attr:`~object.__dict__` özelliği yoksa "
"(örneğin, :attr:`~object.__slots__` özelliğini tanımlayan bir sınıf ise), :"
"exc:`TypeError` hatası ortaya çıkar."

#: library/functions.rst:1883
msgid ""
"Iterate over several iterables in parallel, producing tuples with an item "
"from each one."
msgstr ""
"Paralel olarak birkaç yinelenebilir nesneyi yineler ve hepsinden bir element "
"alarak bir demet üretir."

#: library/functions.rst:1886
msgid "Example::"
msgstr "Örnek::"

#: library/functions.rst:1895
msgid ""
"More formally: :func:`zip` returns an iterator of tuples, where the *i*-th "
"tuple contains the *i*-th element from each of the argument iterables."
msgstr ""
"Daha resmice: :func:`zip` demetlerden oluşan ve *i* inci demetin her "
"parametre yineleyicisinden *i* 'inci elementi içerdiği bir yineleyici "
"döndürür."

#: library/functions.rst:1898
msgid ""
"Another way to think of :func:`zip` is that it turns rows into columns, and "
"columns into rows.  This is similar to `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_."
msgstr ""
":func:`zip` 'i anlamanın başka bir yolu da, sütunları satırlara ve satırları "
"sütunlara çevirmesidir. Bu `transposing a matrix <https://en.wikipedia.org/"
"wiki/Transpose>`_ 'a benzer."

#: library/functions.rst:1902
msgid ""
":func:`zip` is lazy: The elements won't be processed until the iterable is "
"iterated on, e.g. by a :keyword:`!for` loop or by wrapping in a :class:"
"`list`."
msgstr ""
":func:`zip` tembeldir: Yinelenebilir nesne, örneğin bir :keyword:`!for` "
"döngüsü veya :class:`list` tarafından sarılarak yinelenmediği sürece "
"elementler işlenmez."

#: library/functions.rst:1906
msgid ""
"One thing to consider is that the iterables passed to :func:`zip` could have "
"different lengths; sometimes by design, and sometimes because of a bug in "
"the code that prepared these iterables.  Python offers three different "
"approaches to dealing with this issue:"
msgstr ""
"Dikkate alınması gereken şeylerden biri de :func:`zip` 'e verilen "
"yineleyiciler bazen tasarım gereği, bazen ise yineleyicileri hazırlayan "
"kodda oluşan bir hatadan dolayı farklı uzunluklarda olabilirler. Python "
"bununla başa çıkmak için üç farklı yaklaşım sunar:"

#: library/functions.rst:1911
msgid ""
"By default, :func:`zip` stops when the shortest iterable is exhausted. It "
"will ignore the remaining items in the longer iterables, cutting off the "
"result to the length of the shortest iterable::"
msgstr ""
"Varsayılan olarak, :func:`zip` en kısa yinelenebilir nesne tükendiğinde "
"durur. Daha uzun yinelebilirlerde kalan elementleri görmezden gelecektir ve "
"sonucu en kısa yineleyicinin uzunluğuna eşitleyecektir::"

#: library/functions.rst:1918
msgid ""
":func:`zip` is often used in cases where the iterables are assumed to be of "
"equal length.  In such cases, it's recommended to use the ``strict=True`` "
"option. Its output is the same as regular :func:`zip`::"
msgstr ""
":func:`zip` genellikle yineleyicilerin aynı uzunlukta olduğu varsayıldığında "
"kullanılır. Bu gibi durumlarda, ``strict=True`` opsiyonunu kullanmak "
"önerilir. Çıktısı sıradan :func:`zip` ile aynıdır::"

#: library/functions.rst:1925
msgid ""
"Unlike the default behavior, it raises a :exc:`ValueError` if one iterable "
"is exhausted before the others:"
msgstr ""
"Varsayılan davranışın aksine, bir yinelenebilir diğerlerinden önce tükenirse "
"bir :exc:`ValueError` ortaya çıkar:"

#: library/functions.rst:1943
msgid ""
"Without the ``strict=True`` argument, any bug that results in iterables of "
"different lengths will be silenced, possibly manifesting as a hard-to-find "
"bug in another part of the program."
msgstr ""
"``strict=True`` parametresi olmadan, farklı boyutlardaki  nesnelerde "
"sonuçlanan hatalar susturulacaktır. Mümkün olduğunca programın başka bir "
"bölümünde bulunması zor bir hata olarak tezahür ediyor."

#: library/functions.rst:1947
msgid ""
"Shorter iterables can be padded with a constant value to make all the "
"iterables have the same length.  This is done by :func:`itertools."
"zip_longest`."
msgstr ""
"Daha kısa yinelenebilir nesneler, tüm yinelenebilir nesnelerin aynı "
"uzunlukta olması için sabit bir değerle doldurulabilirler. Bu :func:"
"`itertools.zip_longest` tarafından yapılır."

#: library/functions.rst:1951
msgid ""
"Edge cases: With a single iterable argument, :func:`zip` returns an iterator "
"of 1-tuples.  With no arguments, it returns an empty iterator."
msgstr ""
"Kenar durumları: Tek bir yinelenebilir nesne argümanı verilirse, :func:`zip` "
"bir demetin yineleyicisini döndürür. Argüman verilmezse, boş bir yineleyici "
"döndürür."

#: library/functions.rst:1954
msgid "Tips and tricks:"
msgstr "İpucu ve hileler:"

#: library/functions.rst:1956
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n, strict=True)``.  This repeats the *same* iterator "
"``n`` times so that each output tuple has the result of ``n`` calls to the "
"iterator. This has the effect of dividing the input into n-length chunks."
msgstr ""
"Yinelenebilir nesnelerin soldan sağa değerlendirme sırası garanti edilir. "
"Bu, bir veri serisini ``zip(*[iter(s)]*n, strict=True)`` kullanarak n-"
"uzunluklu gruplar halinde kümelemeyi mümkün kılar. Bu *aynı* yineleyiciyi "
"``n`` defa tekrar eder ve böylece tüm çıktı demetler yineleyiciye ``n`` "
"sayıda çağrı yapmış olur. Bu, girdiyi n-uzunluklu parçalara bölme etkisine "
"sahiptir."

#: library/functions.rst:1962
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip`, bir listeyi açmak için ``*`` operatörüyle birlikte "
"kullanılabilir::"

#: library/functions.rst:1973
msgid "Added the ``strict`` argument."
msgstr "``strict`` argümanı eklendi."

#: library/functions.rst:1985
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"Bu :func:`importlib.import_module` 'un aksine günlük Python programlamasında "
"genel olarak kullanılmayan gelişmiş bir fonksiyondur."

#: library/functions.rst:1988
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"Bu fonksiyon :keyword:`import` ifadesi tarafından çağırılır. :keyword:`!"
"import` ifadesinin anlamlarını değiştirmek için yenisiyle değiştirilebilir (:"
"mod:`builtins` modülünü içe aktarıp ``builtins.__import__`` 'a devrederek), "
"ama bunu yapmak aynı amaçlara ulaşmak için içe aktarma çengellerini "
"kullanmak daha basit olduğundan ve içe aktarma çengellerinin kodda hatalara "
"neden olmayacağından tavsiye **edilmez**. :func:`__import__` 'un doğrudan "
"kullanımı da :func:`importlib.import_module` 'ın lehine tavsiye edilmez."

#: library/functions.rst:1997
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"Fonksiyon modül *adını* içe aktarır, potansiyel olarak bir paket "
"bağlamındaki isimleri nasıl yorumlayacağını belirlemek için verien *globals* "
"ve *locals* 'i kullanır. *fromlist*, *name* ismiyle içe aktarılması gereken "
"modülün alt modüllerinin ve nesnelerinin isimlerini verir. Standart uygulama "
"*locals* argümanını kullanmaya teşebbüs etmez ve *globals* 'i :keyword:"
"`import` ifadesinin paket bağlamını belirlemek için kullanır."

#: library/functions.rst:2004
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* mutlak mı yoksa göreli içe aktarmaların mı kullanılacağını belirtir. "
"``0`` (varsayılan) sadece mutlak içe aktarmaların uygulanacağını belirtir. "
"*level* için pozitif değerler, :func:`__import__` çağrısı yapan modülün "
"dizinine göre aranacak üst dizinlerin sayısını gösterir (detaylar için :pep:"
"`328` 'e bakınız)."

#: library/functions.rst:2010
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"*name* değişkeni ``package.module`` biçiminde olduğunda, üst düzey paket "
"((ilk noktaya kadar olan isim) döndürülür, *name* isimli modül *değil*. Boş "
"olmayan bir *fromlist* argümanı verildiğinde, *name* isimli modül döndürülür."

#: library/functions.rst:2015
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"Örnek olarak, ``import spam`` ifadesi aşağıdaki koda benzeyen bayt koduyla "
"sonuçlanır::"

#: library/functions.rst:2020
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "``import spam.ham`` ifadesi şu çağrıyla sonuçlanır::"

#: library/functions.rst:2024
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"Burada :func:`__import__` öğesinin üst düzey modülü nasıl döndürdüğüne "
"dikkat edin, çünkü bu, :keyword:`import` ifadesiyle bir ada bağlanan "
"nesnedir."

#: library/functions.rst:2027
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"Diğer yandan, ``from spam.ham import eggs, sausage as saus`` ifadesi şöyle "
"sonuçlanır::"

#: library/functions.rst:2034
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"Burada, ``spam.ham`` modülü :func:`__import__` 'dan döndürülür. Bu objeden, "
"içeri aktarılacak isimler alınır ve sırasıyla adlarına atanır."

#: library/functions.rst:2038
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"Eğer ismiyle bir modülü (potansiyel olarak bir paket içinde) içe aktarmak "
"istiyorsanız, :func:`importlib.import_module` 'i kullanın."

#: library/functions.rst:2041
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"*level* için negatif değerler artık desteklenmiyor (bu, varsayılan değeri 0 "
"olarak da değiştirir)."

#: library/functions.rst:2045
msgid ""
"When the command line options :option:`-E` or :option:`-I` are being used, "
"the environment variable :envvar:`PYTHONCASEOK` is now ignored."
msgstr ""
"Komut satırı opsiyonlarından :option:`-E` veya :option:`-I` kullanıldığında, "
"ortam değişkeni :envvar:`PYTHONCASEOK` görmezden gelinir."

#: library/functions.rst:2050
msgid "Footnotes"
msgstr "Dipnotlar"

#: library/functions.rst:2051
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"Ayrıştırıcının yalnızca Unix stili satır sonu kuralını kabul ettiğini "
"unutmayın. Eğer bir dosyadan kod okuyorsanız, Windows veya Mac tarzı yeni "
"satırları dönüştürmek için yeni satır dönüştürme modunu kullandığınızdan "
"emin olun."

#~ msgid ""
#~ "Unlike the default behavior, it checks that the lengths of iterables are "
#~ "identical, raising a :exc:`ValueError` if they aren't:"
#~ msgstr ""
#~ "Varsayılan davranışın aksine, yineleyicilerin uzunluklarının özdeş olup "
#~ "olmadığını kontrol eder, değilse :exc:`ValueError` hatası ortaya çıkartır:"

#~ msgid ""
#~ "There is an additional mode character permitted, ``'U'``, which no longer "
#~ "has any effect, and is considered deprecated. It previously enabled :term:"
#~ "`universal newlines` in text mode, which became the default behavior in "
#~ "Python 3.0. Refer to the documentation of the :ref:`newline <open-newline-"
#~ "parameter>` parameter for further details."
#~ msgstr ""
#~ "İzin verilen ek bir mod karakteri vardır, ``'U'``, artık bir etkisi "
#~ "yoktur ve \"kullanımdan kaldırıldı\" olarak değerlendirilir. Önceden "
#~ "Python 3.0 da varsayılan hale gelen, metin modunda :term:`universal "
#~ "newlines` 'i aktif ederdi. Parametrenin detayları için :ref:`newline "
#~ "<open-newline-parameter>` sayfasına bakınız."

#~ msgid "The ``'U'`` mode."
#~ msgstr "``'U'`` modu."
